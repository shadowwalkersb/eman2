from __future__ import print_function
from __future__ import division

from numpy import array_equal,allclose

from ..sphire.bin import sp_compute_isac_avg as fu
from sphire.bin_py3 import sp_compute_isac_avg as oldfu


from os import path
from .test_module import ABSOLUTE_OLDBIN_PATH,ABSOLUTE_BIN_PATH,remove_dir,IMAGE.2D,IMAGE.BLANK_2D,IMAGE_3D,ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW
import unittest
from sp_utilities import get_im

try:
    # python 3.4+ should use builtin unittest.mock not mock package
    from unittest.mock import patch
except ImportError:
    from mock import patch

try:
    from StringIO import StringIO  # python2 case
except ImportError:
    # python3 case. You will get an error because 'sys.stdout.write(msg)' presents in the library not in the test!!
    from io import StringIO

ABSOLUTE_PATH = path.dirname(path.realpath(__file__))
TOLERANCE=1

from copy import deepcopy
import subprocess
import mpi
import sp_global_def
mpi.mpi_init(0, [])
sp_global_def.BATCH = True
sp_global_def.MPI = False

"""
WHAT IS MISSING:
0) compute_average I need to create images with 'xform.align2d' key to 

RESULT AND KNOWN ISSUES
Some compatibility tests for the following functions fail!!!
1) Test_helperFunctions.test_adjust_pw_to_model_2DimgBlank_return_zeroDivisionException. In the cleaned version of the libs the exception is not raised and the function returns an image 
2) Test_Error_cases::test_negative_pixelSize seems to create an image with random values .... but the compatibility test is ok. why?
3) The Test_run case failed !!!!!!! 

In these tests there is a bug --> syntax error:


In these tests there is a strange behavior:
1) 
"""


class Test_helperFunctions(unittest.TestCase):
    def test_adjust_pw_to_model_2Dimg_without_roo(self):
        return_new=fu.adjust_pw_to_model(image=deepcopy(IMAGE.2D),pixel_size=1.0,roo=None)
        return_old = oldfu.adjust_pw_to_model(image=deepcopy(IMAGE.2D), pixel_size=1.0, roo=None)
        self.assertTrue(array_equal(return_new.get_2dview(), return_old.get_2dview()))
        self.assertTrue(array_equal(return_new.get_2dview().flatten(), [9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27, -9.433769991949309e+27, 9.433769991949309e+27]))

    @unittest.skip("FAILED compatibility test")
    def test_adjust_pw_to_model_2DimgBlank_return_zeroDivisionException(self):
        with self.assertRaises(ZeroDivisionError) as cm_new:        #exception not raised. it returns an image
            fu.adjust_pw_to_model(image=deepcopy(IMAGE.BLANK_2D),pixel_size=1.0,roo=None)
        with self.assertRaises(ZeroDivisionError) as cm_old:
            oldfu.adjust_pw_to_model(image=deepcopy(IMAGE.BLANK_2D), pixel_size=1.0, roo=None)
        self.assertEqual(str(cm_new.exception), "float division by zero")
        self.assertEqual(str(cm_new.exception), str(cm_old.exception))

    def test_adjust_pw_to_model_3Dimg_without_roo(self):
        return_new=fu.adjust_pw_to_model(image=deepcopy(IMAGE.3D),pixel_size=1.0,roo=None)
        return_old = oldfu.adjust_pw_to_model(image=deepcopy(IMAGE.3D), pixel_size=1.0, roo=None)
        self.assertTrue(array_equal(return_new.get_3dview(), return_old.get_3dview()))
        self.assertTrue(allclose(return_new.get_3dview().flatten(), [-0.487756609916687, -0.4891400933265686, -0.4896359145641327, -0.48722001910209656, -0.48546233773231506, -0.48334455490112305, -0.4833551347255707, -0.48070263862609863, -0.48123180866241455, -0.48225724697113037, -0.4755037724971771, -0.4764919877052307, -0.47836893796920776, -0.477506548166275, -0.4773741066455841, -0.47480523586273193, -0.4745691418647766, -0.47231805324554443, -0.4732876121997833, -0.47474244236946106, -0.47426727414131165, -0.4735212028026581, -0.4726311266422272, -0.4723905622959137, -0.47077322006225586, -0.46935272216796875, -0.4696921110153198, -0.4692312777042389, -0.4700736701488495, -0.4721507728099823, -0.47116854786872864, -0.4696493446826935, -0.4689108729362488, -0.47052425146102905, -0.4684741199016571, -0.4681288003921509, -0.4703218936920166, -0.47215893864631653, -0.473315954208374, -0.47364774346351624, -0.4847404956817627, -0.4839669466018677, -0.48285430669784546, -0.48386672139167786, -0.4842224717140198, -0.4849790334701538, -0.4876185655593872, -0.4889450669288635, -0.48780786991119385, -0.4896087646484375, -0.49145716428756714, -0.49217328429222107, -0.4928600490093231, -0.493634968996048, -0.49562469124794006, -0.49629542231559753, -0.49687543511390686, -0.49900829792022705, -0.49787190556526184, -0.49821025133132935, -0.5090145468711853, -0.5095515251159668, -0.5105738639831543, -0.5118969082832336, -0.5141242742538452, -0.5142979025840759, -0.5141512155532837, -0.5152155756950378, -0.5167807340621948, -0.5169035792350769, -0.5198243856430054, -0.5204454660415649, -0.5208714008331299, -0.5214242935180664, -0.521882951259613, -0.5207865238189697, -0.5226675271987915, -0.5219799280166626, -0.5216013789176941, -0.5229170322418213, -0.5243571400642395, -0.5224392414093018, -0.5246220827102661, -0.5237234830856323, -0.5249835848808289, -0.5241721868515015, -0.5240282416343689, -0.5236135721206665, -0.5260776281356812, -0.5279501676559448, -0.5241142511367798, -0.5246708393096924, -0.5270107388496399, -0.5249654650688171, -0.5245059132575989, -0.5231343507766724, -0.5210511088371277, -0.518463671207428, -0.5198756456375122, -0.5209118723869324, -0.4978901445865631, -0.499185711145401, -0.49933457374572754, -0.49813205003738403, -0.4982840120792389, -0.49588489532470703, -0.49673449993133545, -0.4960833787918091, -0.49720633029937744, -0.49622103571891785, -0.5006522536277771, -0.5015466213226318, -0.503195583820343, -0.5002797842025757, -0.5031620860099792, -0.5021591782569885, -0.503690242767334, -0.5017927885055542, -0.5048342347145081, -0.5071353316307068, -0.5056802034378052, -0.5084862112998962, -0.5074477791786194, -0.5029088258743286, -0.5030487775802612, -0.5022320747375488, -0.5024620890617371, -0.5005693435668945, -0.501692533493042, -0.5057330131530762, -0.4976835250854492, -0.49824991822242737, -0.497610867023468, -0.49613845348358154, -0.4968024790287018, -0.49768760800361633, -0.4983593821525574, -0.5000120401382446, -0.5028913021087646, -0.5033760070800781, -0.5109730958938599, -0.5115679502487183, -0.513297975063324, -0.5132282376289368, -0.5153515338897705, -0.516953706741333, -0.5181952714920044, -0.5187588334083557, -0.5199411511421204, -0.5214236974716187, -0.5175961256027222, -0.5177981853485107, -0.5187816023826599, -0.5179639458656311, -0.5195974111557007, -0.5206746459007263, -0.5224851965904236, -0.5236054062843323, -0.5238964557647705, -0.5268211960792542, -0.5339910984039307, -0.5334205031394958, -0.534842312335968, -0.5350790619850159, -0.536120593547821, -0.5357718467712402, -0.5370970368385315, -0.5386611819267273, -0.5422901511192322, -0.5441135168075562, -0.5383914113044739, -0.5409180521965027, -0.5423337817192078, -0.5424331426620483, -0.5416850447654724, -0.5392993688583374, -0.5392476320266724, -0.5379661917686462, -0.5383372902870178, -0.539354681968689, -0.5432142615318298, -0.5447750687599182, -0.5437750816345215, -0.5420548319816589, -0.5405391454696655, -0.5386943817138672, -0.5374553203582764, -0.5354545712471008, -0.5336684584617615, -0.5352959632873535, -0.5386227965354919, -0.5406840443611145, -0.5390026569366455, -0.5373101830482483, -0.5345433354377747, -0.5310915112495422, -0.5291392207145691, -0.5274551510810852, -0.5259720683097839, -0.5269163846969604, -0.5196175575256348, -0.5196712017059326, -0.5170539021492004, -0.5167765617370605, -0.5144491791725159, -0.514923095703125, -0.5138276219367981, -0.5129766464233398, -0.5108315944671631, -0.5089414715766907, -0.49448370933532715, -0.49254676699638367, -0.4889095723628998, -0.4867958426475525, -0.48396944999694824, -0.4837835729122162, -0.4837184548377991, -0.4851905107498169, -0.4862837493419647, -0.4866670072078705, -0.4819641709327698, -0.4816920757293701, -0.4798605740070343, -0.47895270586013794, -0.47758185863494873, -0.4772152006626129, -0.4769003093242645, -0.47794052958488464, -0.4771522581577301, -0.47639480233192444, -0.486793577671051, -0.48528748750686646, -0.4829191565513611, -0.48368027806282043, -0.4826575219631195, -0.483490526676178, -0.48290494084358215, -0.4844174385070801, -0.4838140308856964, -0.48257067799568176, -0.47873273491859436, -0.4775765538215637, -0.47654157876968384, -0.47866296768188477, -0.47856569290161133, -0.47935059666633606, -0.47848111391067505, -0.48037874698638916, -0.47942596673965454, -0.47741615772247314, -0.4909234046936035, -0.4915192127227783, -0.48949381709098816, -0.49059218168258667, -0.4908404052257538, -0.4906128942966461, -0.48983490467071533, -0.49124425649642944, -0.488052636384964, -0.4868258237838745, -0.4845314025878906, -0.4841495156288147, -0.48176878690719604, -0.48166584968566895, -0.480325847864151, -0.48069167137145996, -0.47999143600463867, -0.48128026723861694, -0.480521023273468, -0.4796315133571625, -0.4930492341518402, -0.49253737926483154, -0.4906339943408966, -0.49146175384521484, -0.4891071021556854, -0.4883185923099518, -0.48629841208457947, -0.486980140209198, -0.4866963028907776, -0.4853304922580719, -0.4820355176925659, -0.48002052307128906, -0.48199111223220825, -0.482909232378006, -0.4813314378261566, -0.48190903663635254, -0.4812906086444855, -0.48118799924850464, -0.48181724548339844, -0.4807226061820984, -0.47318702936172485, -0.47074371576309204, -0.472723126411438, -0.4736652076244354, -0.4733327329158783, -0.47514405846595764, -0.4746534824371338, -0.47375622391700745, -0.4746193289756775, -0.4731852114200592, -0.47996509075164795, -0.4793599545955658, -0.47791779041290283, -0.4795253872871399, -0.47846782207489014, -0.4810301959514618, -0.48192298412323, -0.48292022943496704, -0.4824169874191284, -0.4794694185256958, -0.4871363937854767, -0.48465070128440857, -0.4855862557888031, -0.4883701503276825, -0.48638591170310974, -0.4884141683578491, -0.48835650086402893, -0.4902648627758026, -0.4918961524963379, -0.4882405400276184, -0.4946175217628479, -0.4956628382205963, -0.49533915519714355, -0.493916392326355, -0.49384644627571106, -0.4945153295993805, -0.49457794427871704, -0.49456822872161865, -0.4951172173023224, -0.49486976861953735, -0.49273931980133057, -0.4917944073677063, -0.491219162940979, -0.49012577533721924, -0.48799291253089905, -0.4895382523536682, -0.4905218183994293, -0.48900097608566284, -0.4892444908618927, -0.49102312326431274, -0.48710349202156067, -0.48655223846435547, -0.4869513511657715, -0.48649609088897705, -0.4831184446811676, -0.484602689743042, -0.48588505387306213, -0.48486047983169556, -0.4853302538394928, -0.48526930809020996, -0.48130202293395996, -0.4826424717903137, -0.48134908080101013, -0.4789942800998688, -0.47851285338401794, -0.4778117835521698, -0.4776589572429657, -0.4761864244937897, -0.47692635655403137, -0.47899195551872253, -0.47259223461151123, -0.472173810005188, -0.47382915019989014, -0.471532940864563, -0.470742791891098, -0.471909761428833, -0.47207531332969666, -0.4703769385814667, -0.4715762138366699, -0.47335681319236755, -0.46924710273742676, -0.4673551917076111, -0.46664127707481384, -0.4663582444190979, -0.46536365151405334, -0.46618661284446716, -0.46591708064079285, -0.46598631143569946, -0.46609798073768616, -0.46659088134765625, -0.4689740836620331, -0.470354825258255, -0.4710533320903778, -0.47062620520591736, -0.47102776169776917, -0.4688456058502197, -0.4680061936378479, -0.4674280881881714, -0.46832725405693054, -0.4710730016231537, -0.47251322865486145, -0.47462546825408936, -0.4750024080276489, -0.47270697355270386, -0.47393959760665894, -0.47383201122283936, -0.47473302483558655, -0.4745887815952301, -0.47692376375198364, -0.4794416129589081, -0.4756896495819092, -0.47664380073547363, -0.4752982258796692, -0.47691282629966736, -0.4795532524585724, -0.48104098439216614, -0.48377862572669983, -0.48353055119514465, -0.48226457834243774, -0.4833841919898987, -0.49168822169303894, -0.49285241961479187, -0.49282339215278625, -0.49279144406318665, -0.4956802725791931, -0.4967232048511505, -0.49856382608413696, -0.4986666440963745, -0.49740880727767944, -0.4990082085132599, -0.49984797835350037, -0.5033879280090332, -0.5027238130569458, -0.5000413656234741, -0.5045225620269775, -0.5035789012908936, -0.50531005859375, -0.506138265132904, -0.5041447877883911, -0.5053948163986206, -0.5001052618026733, -0.500684380531311, -0.5020560622215271, -0.5010970830917358, -0.5030479431152344, -0.502278745174408, -0.5025986433029175, -0.5022092461585999, -0.5021172165870667, -0.5033705830574036, -0.5093876123428345, -0.5107730627059937, -0.5134525895118713, -0.5127087831497192, -0.5110063552856445, -0.5107226967811584, -0.5108746886253357, -0.5089097023010254, -0.5081082582473755, -0.507437527179718, -0.4938884973526001, -0.4939593970775604, -0.49459004402160645, -0.49427375197410583, -0.4953388273715973, -0.49288657307624817, -0.49279075860977173, -0.49217653274536133, -0.4931983947753906, -0.4932796359062195, -0.49896886944770813, -0.4980505406856537, -0.5008223056793213, -0.49912789463996887, -0.4994499385356903, -0.49704667925834656, -0.4972435235977173, -0.4970409572124481, -0.4991118311882019, -0.5014445781707764, -0.49284693598747253, -0.49349844455718994, -0.4941764175891876, -0.4919733703136444, -0.4909957945346832, -0.4906763434410095, -0.491324245929718, -0.4909392297267914, -0.4908754229545593, -0.49204307794570923, -0.4950878322124481, -0.4965175986289978, -0.49643781781196594, -0.49767768383026123, -0.49986234307289124, -0.4995790421962738, -0.5000739693641663, -0.4996849596500397, -0.5001247525215149, -0.49996766448020935, -0.5076045989990234, -0.5094606876373291, -0.5091656446456909, -0.5103915333747864, -0.5136125087738037, -0.5139554142951965, -0.5172275900840759, -0.5179857611656189, -0.518516480922699, -0.518656849861145, -0.522693932056427, -0.523236095905304, -0.5240818858146667, -0.5250646471977234, -0.5260815024375916, -0.5278782844543457, -0.5297844409942627, -0.530210554599762, -0.5280404686927795, -0.5279046297073364, -0.5331446528434753, -0.532742977142334, -0.5349322557449341, -0.535253643989563, -0.5361436009407043, -0.5385228395462036, -0.5409294366836548, -0.5419498682022095, -0.5420413613319397, -0.541840136051178, -0.545285701751709, -0.5467782020568848, -0.5490762591362, -0.55079185962677, -0.5521697998046875, -0.55275559425354, -0.5539001822471619, -0.5528634786605835, -0.5508991479873657, -0.5490813255310059, -0.5528275370597839, -0.5532962679862976, -0.5529433488845825, -0.5529719591140747, -0.5538439154624939, -0.5526346564292908, -0.5518375635147095, -0.5511127710342407, -0.5494398474693298, -0.5491742491722107, -0.5397867560386658, -0.5407192707061768, -0.5390290021896362, -0.5360772609710693, -0.5329501628875732, -0.5317763686180115, -0.5303686857223511, -0.5297344326972961, -0.5279379487037659, -0.5283067226409912, -0.5269809365272522, -0.5268940329551697, -0.5234032273292542, -0.5213372111320496, -0.5178709030151367, -0.517211377620697, -0.5155868530273438, -0.5151023268699646, -0.5134037137031555, -0.5128600001335144, -0.5026827454566956, -0.5018885135650635, -0.49911051988601685, -0.496425062417984, -0.4936878979206085, -0.4924962520599365, -0.48997068405151367, -0.49017736315727234, -0.48904934525489807, -0.4901873469352722, -0.491808146238327, -0.4909365177154541, -0.4910067021846771, -0.4900147020816803, -0.4882948398590088, -0.48812586069107056, -0.4868287742137909, -0.48852989077568054, -0.4880889356136322, -0.4862121641635895, -0.4866486191749573, -0.48535144329071045, -0.48359718918800354, -0.4849788546562195, -0.485657662153244, -0.486331969499588, -0.48439568281173706, -0.48539435863494873, -0.48624342679977417, -0.48424386978149414, -0.48706820607185364, -0.48702162504196167, -0.48487621545791626, -0.48577621579170227, -0.4867527186870575, -0.4885243773460388, -0.4889524281024933, -0.48912280797958374, -0.48742592334747314, -0.48678725957870483, -0.4998835325241089, -0.4991370439529419, -0.4999517500400543, -0.5015818476676941, -0.501978874206543, -0.5036628246307373, -0.5014646053314209, -0.5015561580657959, -0.499075710773468, -0.4969898760318756, -0.4875742197036743, -0.48696935176849365, -0.4863114356994629, -0.4867897629737854, -0.4853767454624176, -0.4880497455596924, -0.48672667145729065, -0.48655423521995544, -0.48604562878608704, -0.4841313064098358, -0.4873542785644531, -0.487845778465271, -0.4862474203109741, -0.4874984323978424, -0.48355212807655334, -0.4838976562023163, -0.4828689694404602, -0.4819921851158142, -0.48222115635871887, -0.4803159832954407, -0.48789480328559875, -0.48687365651130676, -0.484867125749588, -0.4858649969100952, -0.4857758581638336, -0.4863704442977905, -0.4867781400680542, -0.48715099692344666, -0.4870944023132324, -0.48469963669776917, -0.4803822338581085, -0.4797021150588989, -0.48105889558792114, -0.4815830886363983, -0.48121702671051025, -0.4821828305721283, -0.4822797477245331, -0.48140832781791687, -0.48172175884246826, -0.48078104853630066, -0.4896726608276367, -0.48918476700782776, -0.49022287130355835, -0.49127069115638733, -0.49023401737213135, -0.4917280077934265, -0.4911062717437744, -0.49061691761016846, -0.4925784766674042, -0.49093446135520935, -0.4876277446746826, -0.48580023646354675, -0.48452457785606384, -0.4846874475479126, -0.4858694076538086, -0.48778674006462097, -0.48700132966041565, -0.4872020184993744, -0.4876338839530945, -0.4873519539833069, -0.4970633387565613, -0.49608632922172546, -0.4971657991409302, -0.49670934677124023, -0.4967450797557831, -0.49666252732276917, -0.4952206015586853, -0.49437153339385986, -0.49409934878349304, -0.4960283935070038, -0.49670761823654175, -0.49603116512298584, -0.49594566226005554, -0.49484533071517944, -0.49459555745124817, -0.4945189356803894, -0.49208810925483704, -0.49247416853904724, -0.4931945204734802, -0.49375686049461365, -0.48457497358322144, -0.4829290211200714, -0.4816685914993286, -0.4812786877155304, -0.48133283853530884, -0.48342013359069824, -0.48181718587875366, -0.4828029274940491, -0.48115405440330505, -0.4797671139240265, -0.4783559739589691, -0.4788365662097931, -0.47905829548835754, -0.477851003408432, -0.4770006835460663, -0.4753194749355316, -0.47440969944000244, -0.472765177488327, -0.47344475984573364, -0.4760406017303467, -0.4811355471611023, -0.4834190905094147, -0.48354461789131165, -0.48073041439056396, -0.4800143539905548, -0.47829413414001465, -0.4771310091018677, -0.4760925769805908, -0.47649016976356506, -0.47857895493507385, -0.47439542412757874, -0.4750051200389862, -0.4736625850200653, -0.4741862714290619, -0.47382819652557373, -0.47172442078590393, -0.47164276242256165, -0.4720892310142517, -0.47066453099250793, -0.4705509841442108, -0.46654602885246277, -0.4670862555503845, -0.4660795032978058, -0.46756449341773987, -0.4686773419380188, -0.46729177236557007, -0.4678554832935333, -0.468164324760437, -0.46773022413253784, -0.4678230285644531, -0.4771110415458679, -0.4778221547603607, -0.4773922860622406, -0.478959858417511, -0.47972699999809265, -0.47835928201675415, -0.48068293929100037, -0.481073260307312, -0.4803586006164551, -0.48247474431991577, -0.4743087589740753, -0.4759349822998047, -0.4748976528644562, -0.4759182035923004, -0.4781642258167267, -0.47691455483436584, -0.4785975217819214, -0.4807082712650299, -0.4815604090690613, -0.48289451003074646, -0.49265071749687195, -0.4943868815898895, -0.4929313361644745, -0.4922358989715576, -0.4957796037197113, -0.49526089429855347, -0.49709489941596985, -0.49879899621009827, -0.49919500946998596, -0.5013996958732605, -0.4954465925693512, -0.4964328706264496, -0.4960644841194153, -0.49456730484962463, -0.49647408723831177, -0.4958285987377167, -0.49831312894821167, -0.4979742169380188, -0.49741131067276, -0.5014237761497498, -0.4982006847858429, -0.497565358877182, -0.49951159954071045, -0.49907559156417847, -0.5006924271583557, -0.5008081793785095, -0.5018725395202637, -0.5031987428665161, -0.5041160583496094, -0.503904402256012, -0.5141630172729492, -0.5121263861656189, -0.5129412412643433, -0.5136588215827942, -0.514008641242981, -0.5143381357192993, -0.5150125026702881, -0.5154053568840027, -0.5145964622497559, -0.5139063596725464, -0.49993792176246643, -0.5006241798400879, -0.5020829439163208, -0.5023205876350403, -0.5012511014938354, -0.4990766644477844, -0.49845418334007263, -0.4956050217151642, -0.4963667690753937, -0.49675071239471436, -0.486623078584671, -0.4867304861545563, -0.49108919501304626, -0.48873186111450195, -0.4891244173049927, -0.48841702938079834, -0.48772987723350525, -0.4864623546600342, -0.4896867573261261, -0.49091237783432007, -0.487791508436203, -0.48758938908576965, -0.4889816343784332, -0.48688745498657227, -0.4879695475101471, -0.48702117800712585, -0.4865254759788513, -0.4862854480743408, -0.48742151260375977, -0.4897173345088959, -0.49073830246925354, -0.4917805790901184, -0.4924640953540802, -0.4921948313713074, -0.4943435490131378, -0.4949016869068146, -0.4947590231895447, -0.49491918087005615, -0.4973873198032379, -0.49753209948539734, -0.5042267441749573, -0.5026499032974243, -0.5014685392379761, -0.5035107731819153, -0.5057304501533508, -0.5075742602348328, -0.5096070766448975, -0.5115644931793213, -0.5128164887428284, -0.5128706097602844, -0.520356297492981, -0.5194594860076904, -0.5199979543685913, -0.5222692489624023, -0.5237842202186584, -0.5267531275749207, -0.5274341106414795, -0.5279369354248047, -0.5266297459602356, -0.5270378589630127, -0.5366148948669434, -0.5339464545249939, -0.5345508456230164, -0.5368302464485168, -0.5384775400161743, -0.5422949194908142, -0.5433000922203064, -0.5444316267967224, -0.5455611944198608, -0.5453299880027771, -0.5519766211509705, -0.5494912266731262, -0.5479399561882019, -0.551032543182373, -0.5532847046852112, -0.5548721551895142, -0.556096613407135, -0.5573803782463074, -0.5579142570495605, -0.5566681027412415, -0.5632596015930176, -0.5637823343276978, -0.5612085461616516, -0.5599763989448547, -0.5613021850585938, -0.5610226988792419, -0.55879145860672, -0.5581424832344055, -0.5587053894996643, -0.5597832798957825, -0.5495016574859619, -0.5509893298149109, -0.548054039478302, -0.5465348958969116, -0.5451412796974182, -0.5426397323608398, -0.5402395725250244, -0.5372370481491089, -0.535520613193512, -0.5381174683570862, -0.5458565354347229, -0.5466509461402893, -0.5441792011260986, -0.5423330664634705, -0.5384354591369629, -0.5362882018089294, -0.5339333415031433, -0.5312268137931824, -0.5291049480438232, -0.5297005772590637, -0.5211396217346191, -0.5219911932945251, -0.5188652276992798, -0.5154116749763489, -0.5118452906608582, -0.509551465511322, -0.5066046714782715, -0.504940927028656, -0.5030162930488586, -0.5054171085357666, -0.4998445510864258, -0.4997308850288391, -0.4976649582386017, -0.49667972326278687, -0.49388882517814636, -0.49170982837677, -0.4894997477531433, -0.4898718297481537, -0.48830628395080566, -0.48933255672454834, -0.4986686110496521, -0.4989362955093384, -0.49833741784095764, -0.5000655055046082, -0.49903953075408936, -0.4988151490688324, -0.49807095527648926, -0.4992409348487854, -0.4990749657154083, -0.4970884323120117, -0.4930392801761627, -0.4904020428657532, -0.487762451171875, -0.49019429087638855, -0.4908391535282135, -0.49253925681114197, -0.4927709400653839, -0.49548521637916565, -0.4957101047039032, -0.49477800726890564, -0.5097377300262451, -0.5074445605278015, -0.5078862905502319, -0.5109825134277344, -0.5107330083847046, -0.5131937861442566, -0.51225745677948, -0.5152220726013184, -0.5141266584396362, -0.5117388367652893, -0.5081667304039001, -0.50527024269104, -0.5033443570137024, -0.5055197477340698, -0.5044810175895691, -0.5074493885040283, -0.5068893432617188, -0.5090504884719849, -0.5095574855804443, -0.5079208612442017, -0.5197303295135498, -0.5205632448196411, -0.517902135848999, -0.5190898776054382, -0.5165451765060425, -0.5159159898757935, -0.5150597095489502, -0.5140926837921143, -0.5123031139373779, -0.5126400589942932, -0.5060477256774902, -0.5058074593544006, -0.5073038339614868, -0.505450427532196, -0.504595160484314, -0.5052119493484497, -0.5036287307739258, -0.5027974247932434, -0.5049295425415039, -0.5052483677864075, -0.5000068545341492, -0.49870333075523376, -0.50009685754776, -0.49849966168403625, -0.49739784002304077, -0.49808332324028015, -0.4964199960231781, -0.4953886866569519, -0.4968475103378296, -0.4955659508705139],atol=0.01))

    def test_get_optimistic_res(self):
        frc=[[0.0, 0.0028409091755747795, 0.005681818351149559, 0.008522727526724339, 0.011363636702299118, 0.014204545877873898, 0.017045455053448677, 0.019886363297700882, 0.022727273404598236, 0.02556818351149559, 0.028409091755747795, 0.03125, 0.034090910106897354, 0.03693182021379471, 0.039772726595401764, 0.04261363670229912, 0.04545454680919647, 0.048295456916093826, 0.05113636702299118, 0.053977273404598236, 0.05681818351149559, 0.059659093618392944, 0.0625, 0.06534091383218765, 0.06818182021379471, 0.07102272659540176, 0.07386364042758942, 0.07670454680919647, 0.07954545319080353, 0.08238636702299118, 0.08522727340459824, 0.08806818723678589, 0.09090909361839294, 0.09375, 0.09659091383218765, 0.09943182021379471, 0.10227273404598236, 0.10511364042758942, 0.10795454680919647, 0.11079546064138412, 0.11363636702299118, 0.11647727340459824, 0.11931818723678589, 0.12215909361839294, 0.125, 0.12784090638160706, 0.1306818276643753, 0.13352273404598236, 0.13636364042758942, 0.13920454680919647, 0.14204545319080353, 0.14488637447357178, 0.14772728085517883, 0.1505681872367859, 0.15340909361839294, 0.15625, 0.15909090638160706, 0.1619318276643753, 0.16477273404598236, 0.16761364042758942, 0.17045454680919647, 0.17329545319080353, 0.17613637447357178, 0.17897728085517883, 0.1818181872367859, 0.18465909361839294, 0.1875, 0.19034092128276825, 0.1931818276643753, 0.19602273404598236, 0.19886364042758942, 0.20170454680919647, 0.20454546809196472, 0.20738637447357178, 0.21022728085517883, 0.2130681872367859, 0.21590909361839294, 0.21875, 0.22159092128276825, 0.2244318276643753, 0.22727273404598236, 0.23011364042758942, 0.23295454680919647, 0.23579546809196472, 0.23863637447357178, 0.24147728085517883, 0.2443181872367859, 0.24715909361839294, 0.25, 0.25284090638160706, 0.2556818127632141, 0.25852274894714355, 0.2613636553287506, 0.26420456171035767, 0.2670454680919647, 0.2698863744735718, 0.27272728085517883, 0.2755681872367859, 0.27840909361839294, 0.28125, 0.28409090638160706, 0.2869318127632141, 0.28977274894714355, 0.2926136553287506, 0.29545456171035767, 0.2982954680919647, 0.3011363744735718, 0.30397728085517883, 0.3068181872367859, 0.30965909361839294, 0.3125, 0.31534090638160706, 0.3181818127632141, 0.32102274894714355, 0.3238636553287506, 0.32670456171035767, 0.3295454680919647, 0.3323863744735718, 0.33522728085517883, 0.3380681872367859, 0.34090909361839294, 0.34375, 0.34659090638160706, 0.3494318425655365, 0.35227274894714355, 0.3551136553287506, 0.35795456171035767, 0.3607954680919647, 0.3636363744735718, 0.36647728085517883, 0.3693181872367859, 0.37215909361839294, 0.375, 0.37784090638160706, 0.3806818425655365, 0.38352274894714355, 0.3863636553287506, 0.38920456171035767, 0.3920454680919647, 0.3948863744735718, 0.39772728085517883, 0.4005681872367859, 0.40340909361839294, 0.40625, 0.40909093618392944, 0.4119318425655365, 0.41477274894714355, 0.4176136553287506, 0.42045456171035767, 0.4232954680919647, 0.4261363744735718, 0.42897728085517883, 0.4318181872367859, 0.43465909361839294, 0.4375, 0.44034093618392944, 0.4431818425655365, 0.44602274894714355, 0.4488636553287506, 0.45170456171035767, 0.4545454680919647, 0.4573863744735718, 0.46022728085517883, 0.4630681872367859, 0.46590909361839294, 0.46875, 0.47159093618392944, 0.4744318425655365, 0.47727274894714355, 0.4801136553287506, 0.48295456171035767, 0.4857954680919647, 0.4886363744735718, 0.49147728085517883, 0.4943181872367859, 0.49715909361839294, 0.5], [1.0, 0.927436888217926, 0.9644330143928528, 0.9510498642921448, 0.9601005911827087, 0.9120174646377563, 0.9737635850906372, 0.9544222354888916, 0.9339560270309448, 0.9491122961044312, 0.9339900016784668, 0.9030832648277283, 0.9180650115013123, 0.8743444681167603, 0.8842682242393494, 0.7803530097007751, 0.739889919757843, 0.6463480591773987, 0.5720656514167786, 0.4354298710823059, 0.3100225031375885, 0.22480961680412292, 0.2867422103881836, 0.36532214283943176, 0.33716273307800293, 0.1752614676952362, 0.33645740151405334, 0.22875162959098816, 0.20260415971279144, 0.11019125580787659, 0.10463924705982208, 0.11410822719335556, 0.21724911034107208, 0.2355843335390091, 0.2728304862976074, 0.1612824648618698, 0.1837579905986786, 0.2179451733827591, 0.005848616361618042, 0.1548445224761963, 0.08633387088775635, 0.032837506383657455, 0.18675300478935242, 0.04942098259925842, 0.006683248560875654, 0.06758903712034225, 0.10229810327291489, 0.044310543686151505, 0.004997697193175554, 0.004970336798578501, -0.0518910251557827, 0.014843136072158813, -0.03945031762123108, 0.08223702013492584, -0.04019227996468544, -0.018596293404698372, 0.020724711939692497, -0.03242279216647148, 0.003959041554480791, -0.011355138383805752, -0.042375802993774414, 0.07676804810762405, -0.001018792623654008, -0.017079535871744156, 0.002638711594045162, 0.00027749265427701175, -0.02328605018556118, 0.011566723696887493, -0.010628068819642067, 0.015010647475719452, 0.036939796060323715, 0.12387001514434814, 0.07565717399120331, 0.06343871355056763, -0.045742448419332504, 0.09796486794948578, 0.029568824917078018, -0.019163070246577263, -0.03649110347032547, 0.06282343715429306, -0.006264884024858475, -0.02283008210361004, 0.11599806696176529, -0.08123399317264557, -0.029050296172499657, -0.02057872712612152, 0.02593916654586792, -0.03942413255572319, 0.004260296933352947, 0.04023091495037079, 0.06403011828660965, -0.03679985925555229, -0.07647941261529922, -0.003449610900133848, -0.035982463508844376, 0.06829054653644562, -0.004725735634565353, 0.02269340120255947, -0.008126373402774334, 0.04499184712767601, -0.03478247672319412, 0.049493514001369476, -0.006330335512757301, 0.04865209385752678, 0.013557637110352516, -0.03521498665213585, -0.04298878088593483, 0.030224736779928207, -0.004827992990612984, -0.009132987819612026, -0.004222421441227198, 0.021211815997958183, 0.042768411338329315, 0.00290421349927783, 0.05953473970293999, -0.025467857718467712, 0.026222391054034233, 0.04689127206802368, 0.03363905847072601, 0.04505676403641701, -0.019402924925088882, -0.025732912123203278, -0.0006787720485590398, -0.013323316350579262, 0.012553843669593334, -0.029688561335206032, 0.013381179422140121, 0.010605069808661938, 0.009816493839025497, -0.022122230380773544, -0.04378900304436684, -0.030280375853180885, -0.009238364174962044, -0.003286668099462986, 0.03157681226730347, 0.036547619849443436, 0.01782696135342121, -8.394412725465372e-05, 0.005974287632852793, 0.01076980959624052, 0.008086131885647774, -0.006227912846952677, -0.08749056607484818, -0.029767360538244247, -0.01712486706674099, -0.04684913158416748, -0.09143953025341034, -0.05589941516518593, 0.0030399609822779894, -0.038045428693294525, 0.006836275570094585, 0.0666038766503334, 0.003901688614860177, 0.006501974072307348, 0.026683783158659935, -0.040630705654621124, -0.006195658352226019, -0.013130242004990578, 0.06851879507303238, -0.033238884061574936, -0.041214391589164734, 0.05736299231648445, -0.0741443857550621, -0.014432139694690704, 0.045367948710918427, 0.059214044362306595, 0.0037850753869861364, -0.014871932566165924, -0.009573297575116158, -0.00782057736068964, 0.054332491010427475, 0.022670116275548935, -0.026068102568387985, -0.0015906281769275665, 0.029887067154049873, 0.01640481688082218, -0.002697934862226248], [2.0, 8.0, 12.0, 16.0, 32.0, 28.0, 40.0, 40.0, 48.0, 68.0, 56.0, 72.0, 68.0, 88.0, 88.0, 84.0, 112.0, 112.0, 112.0, 116.0, 112.0, 144.0, 140.0, 144.0, 144.0, 168.0, 164.0, 160.0, 184.0, 172.0, 200.0, 192.0, 188.0, 208.0, 224.0, 224.0, 228.0, 224.0, 248.0, 236.0, 264.0, 248.0, 264.0, 276.0, 264.0, 288.0, 276.0, 304.0, 304.0, 312.0, 316.0, 320.0, 344.0, 316.0, 336.0, 352.0, 340.0, 376.0, 336.0, 392.0, 380.0, 368.0, 400.0, 364.0, 440.0, 400.0, 424.0, 420.0, 416.0, 448.0, 428.0, 432.0, 480.0, 444.0, 472.0, 456.0, 488.0, 500.0, 472.0, 496.0, 492.0, 536.0, 512.0, 512.0, 516.0, 552.0, 544.0, 540.0, 536.0, 584.0, 556.0, 576.0, 568.0, 592.0, 580.0, 592.0, 600.0, 612.0, 664.0, 592.0, 640.0, 596.0, 664.0, 672.0, 620.0, 664.0, 656.0, 680.0, 692.0, 672.0, 720.0, 668.0, 704.0, 704.0, 716.0, 744.0, 728.0, 728.0, 724.0, 736.0, 776.0, 772.0, 768.0, 792.0, 760.0, 780.0, 776.0, 832.0, 788.0, 816.0, 800.0, 812.0, 848.0, 832.0, 856.0, 828.0, 880.0, 848.0, 844.0, 888.0, 896.0, 888.0, 876.0, 864.0, 936.0, 932.0, 920.0, 904.0, 944.0, 956.0, 912.0, 968.0, 916.0, 992.0, 960.0, 948.0, 992.0, 1008.0, 1008.0, 972.0, 976.0, 1048.0, 1004.0, 1048.0, 1008.0, 1048.0, 1052.0, 1016.0, 1064.0, 1076.0, 1088.0, 1088.0, 1020.0, 1112.0, 1096.0, 1088.0, 1090.0]]
        return_new=fu.get_optimistic_res(frc=frc)
        return_old = oldfu.get_optimistic_res(frc=frc)
        self.assertEqual(return_new,return_old)
        self.assertEqual(return_new, 0.15)

    def test_get_optimistic_res_returns_IndexError_list_index_out_of_range(self):
        with self.assertRaises(IndexError) as cm_new:
            fu.get_optimistic_res(frc=[])
        with self.assertRaises(IndexError) as cm_old:
            oldfu.get_optimistic_res(frc=[])
        self.assertEqual(str(cm_new.exception), "list index out of range")
        self.assertEqual(str(cm_new.exception), str(cm_old.exception))

    def test_get_optimistic_res_returns_IndexError_list_index_out_of_range_2(self):
        with self.assertRaises(IndexError) as cm_new:
            fu.get_optimistic_res(frc=[1])
        with self.assertRaises(IndexError) as cm_old:
            oldfu.get_optimistic_res(frc=[1])
        self.assertEqual(str(cm_new.exception), "list index out of range")
        self.assertEqual(str(cm_new.exception), str(cm_old.exception))

    #todo: the unittest fail. probably random value are involved
    def test_apply_enhancement_negative_user_defined_Bfactor(self):
        return_old = oldfu.apply_enhancement(avg=deepcopy(IMAGE.2D), B_start=0.3, pixel_size=1.14, user_defined_Bfactor=-1)
        return_new = oldfu.apply_enhancement(avg=deepcopy(IMAGE.2D), B_start=0.3, pixel_size=1.14,user_defined_Bfactor=-1)
        self.assertTrue(return_new[1],return_old[1])
        self.assertTrue(return_new[1], 112.149937795)
        self.assertTrue(array_equal(return_new[0].get_2dview(), return_old[0].get_2dview()))
        #self.assertTrue(allclose(return_new[0].get_2dview().flatten(), [-13.252079010009766, 0.0, 0.03814060986042023, -0.5203759074211121, 0.6330625414848328, -1.105966329574585, 1.797016978263855, -3.5738189220428467, 19.677011489868164, -8.345040321350098, 202.3340606689453, 0.0, 0.3528701663017273, -17.338138580322266, 0.11318580061197281, 1.34019136428833, -0.2750294506549835, 0.9533479809761047, -2.491420269012451, 4.34696102142334, -7.396848678588867, 9.521103858947754, -346.005859375, 47.821197509765625, 5.923311233520508, -9.384490966796875, 1.3964177370071411, -0.2477501481771469, -0.1381668746471405, 0.8654390573501587, 2.5981669425964355, 0.4598669111728668, -9.64050006866455, -28.456878662109375, -97.34486389160156, -20.079675674438477, 26.546918869018555, -18.593029022216797, -3.502714157104492, -3.2450191974639893, 3.417959690093994, 4.504495620727539, -17.378284454345703, 6.562769889831543, -93.861083984375, 15.704989433288574, -1161.6107177734375, -890.4534912109375, 215.9801788330078, -115.18415069580078, -20.116744995117188, -6.9779133796691895, -18.95396614074707, -4.440659523010254, 42.34603500366211, 51.754432678222656, -1276.6715087890625, -340.37896728515625, -9439.048828125, -4795.59521484375, 2863.3623046875, 0.0, -42.10639953613281, -375.80438232421875, -909.8231201171875, -456.3456115722656, 2434.02392578125, -524.8296508789062, 3597.329345703125, -2475.0419921875, 217102.609375, 0.0, 215.9801788330078, 115.18415069580078, 8.328160285949707, -12.287049293518066, 22.584749221801758, 23.500429153442383, -88.4436264038086, -30.19524574279785, 20.67259407043457, -485.4470520019531, -9439.048828125, 4795.59521484375, 26.546918869018555, 18.593029022216797, 3.252652406692505, 1.443688988685608, 1.6569724082946777, 3.839991569519043, -8.002409934997559, -4.439568042755127, 25.225982666015625, 118.38308715820312, -1161.6107177734375, 890.4534912109375, 5.923311233520508, 9.384490966796875, 0.38220182061195374, 1.3417384624481201, 0.5544015765190125, 0.8000068068504333, 1.749889612197876, 4.48452615737915, -16.99088478088379, 22.954710006713867, -97.34486389160156, 20.079675674438477, 0.3528701663017273, 17.338138580322266, -0.5487001538276672, 0.6206989288330078, -1.3383440971374512, 0.7987412214279175, -4.114747524261475, -0.9809036254882812, -22.991819381713867, 2.807157039642334, -346.005859375, -47.821197509765625],atol=10))

    def test_apply_enhancement_postive_user_defined_Bfactor(self):
        return_old = oldfu.apply_enhancement(avg=deepcopy(IMAGE.2D), B_start=0.3, pixel_size=1.14, user_defined_Bfactor=1)
        return_new = oldfu.apply_enhancement(avg=deepcopy(IMAGE.2D), B_start=0.3, pixel_size=1.14,user_defined_Bfactor=1)
        self.assertTrue(return_new[1],return_old[1])
        self.assertTrue(return_new[1], 1)
        self.assertTrue(array_equal(return_new[0].get_2dview(), return_old[0].get_2dview()))
        self.assertTrue(array_equal(return_new[0].get_2dview().flatten(), [-13.252079010009766, 0.0, 0.028887376189231873, -0.39412832260131836, 0.2083187997341156, -0.3639349341392517, 0.14737924933433533, -0.29310062527656555, 0.2307206690311432, -0.09784886986017227, 0.19457198679447174, 0.0, 0.26726090908050537, -13.13176155090332, 0.06492812931537628, 0.7687900066375732, -0.06854591518640518, 0.2376040369272232, -0.15475746989250183, 0.27001655101776123, -0.06568927317857742, 0.08455416560173035, -0.2520086169242859, 0.03482991084456444, 1.9491549730300903, -3.0881083011627197, 0.34803083539009094, -0.06174705922603607, -0.0149612408131361, 0.09371306747198105, 0.07011856138706207, 0.012410752475261688, -0.03719707578420639, -0.10979851335287094, -0.03080393560230732, -0.006354039069265127, 2.1771998405456543, -1.524875283241272, -0.21757522225379944, -0.20156820118427277, 0.09224288910627365, 0.12156599760055542, -0.11688944697380066, 0.04414236173033714, -0.09026041626930237, 0.015102519653737545, -0.0916127860546112, -0.07022742182016373, 2.53245210647583, -1.3505792617797852, -0.17865099012851715, -0.06196882948279381, -0.07313231378793716, -0.017133917659521103, 0.040721528232097626, 0.04976899176836014, -0.17552292346954346, -0.04679693654179573, -0.1064307913184166, -0.054073136299848557, 2.75351619720459, 0.0, -0.030667619779706, -0.2737119495868683, -0.28790563344955444, -0.14440660178661346, 0.19196423888206482, -0.0413917601108551, 0.040561988949775696, -0.02790754660964012, 0.20076484978199005, 0.0, 2.53245210647583, 1.3505792617797852, 0.07395998388528824, -0.10911772400140762, 0.08714139461517334, 0.09067446738481522, -0.08505069464445114, -0.0290368739515543, 0.0028421676252037287, -0.06674159318208694, -0.1064307913184166, 0.054073136299848557, 2.1771998405456543, 1.524875283241272, 0.2020423412322998, 0.08967644721269608, 0.04471788555383682, 0.10363256186246872, -0.053825635462999344, -0.02986132726073265, 0.024258270859718323, 0.1138417050242424, -0.0916127860546112, 0.07022742182016373, 1.9491549730300903, 3.0881083011627197, 0.09525660425424576, 0.33440303802490234, 0.06003273278474808, 0.08662781864404678, 0.047225505113601685, 0.12102706730365753, -0.06555791944265366, 0.08856885880231857, -0.03080393560230732, 0.006354039069265127, 0.26726090908050537, 13.13176155090332, -0.31475743651390076, 0.3560589849948883, -0.3335570693016052, 0.19907119870185852, -0.25559231638908386, -0.06092997267842293, -0.2041836977005005, 0.024929549545049667, -0.2520086169242859, -0.03482991084456444]))

    def test_compute_average_returns_IndexError_list_index_out_of_range(self):
        with self.assertRaises(IndexError) as cm_new:
            fu.compute_average(mlist=[], radius=1, CTF=False)
        with self.assertRaises(IndexError) as cm_old:
            oldfu.compute_average(mlist=[], radius=1, CTF=False)
        self.assertEqual(str(cm_new.exception), "list index out of range")
        self.assertEqual(str(cm_new.exception), str(cm_old.exception))

    #todo: the images has to have the 'xform.align2d' key
    def test_compute_average_without_CTF(self):
        self.assertTrue(True)
        #return_new=fu.compute_average(mlist=[IMAGE.2D,IMAGE.2D], radius=1, CTF=False)
        #return_old=oldfu.compute_average(mlist=[IMAGE.2D,IMAGE.2D], radius=1, CTF=False)



class Test_Error_cases(unittest.TestCase):
    old_output_folder="BeautBadOld"
    new_output_folder = "BeautBadNew"
    hdf_class_averages = "class_averages.hdf"

    @classmethod
    def tearDownClass(cls):
        remove_dir(cls.new_output_folder)
        remove_dir(cls.old_output_folder)

    def test_negative_pixelSize(self):
        testargs_new= (
            path.join(ABSOLUTE_BIN_PATH, "sp_compute_isac_avg.py")
            +  " --stack=bdb:"+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"03_Particles#stack")
            +" --isac_dir="+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"04_ISAC")
            +" --output_dir="+self.new_output_folder
            +" --pixel_size=-1")
        testargs_old= (
            path.join(ABSOLUTE_OLDBIN_PATH, "sp_compute_isac_avg.py")
            +  " --stack=bdb:"+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"03_Particles#stack")
            +" --isac_dir="+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"04_ISAC")
            +" --output_dir="+self.old_output_folder
            +" --pixel_size=-1")

        subprocess.run(args=[testargs_old], shell=True,  capture_output=True)
        subprocess.run(args=[testargs_new], shell=True,  capture_output=True)

        return_new_avg = get_im(path.join(self.new_output_folder,self.hdf_class_averages))
        return_old_avg = get_im(path.join(self.new_output_folder,self.hdf_class_averages))
        self.assertTrue(allclose(return_new_avg.get_2dview(), return_old_avg.get_2dview(), atol=0.001))




class Test_run(unittest.TestCase):
    old_output_folder="BeautOld"
    new_output_folder = "BeautNew"
    hdf_class_averages = "class_averages.hdf"
    hdf_ordered_class_averages = "ordered_class_averages.hdf"


    @classmethod
    def tearDownClass(cls):
        remove_dir(cls.new_output_folder)
        remove_dir(cls.old_output_folder)


    def test_(self):
        testargs_new= (
            path.join(ABSOLUTE_BIN_PATH, "sp_compute_isac_avg.py")
            +  " --stack=bdb:"+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"03_Particles#stack")
            +" --isac_dir="+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"04_ISAC")
            +" --output_dir="+self.new_output_folder
            +" --pixel_size=1.14"
            +" --radius=145"
            +" --local_alignment")
        testargs_old= (
            path.join(ABSOLUTE_OLDBIN_PATH, "sp_compute_isac_avg.py")
            +  " --stack=bdb:"+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"03_Particles#stack")
            +" --isac_dir="+path.join(ABSOLUTE_PATH_TO_SPHIRE_DEMO_RESULTS_FOLDER_NEW,"04_ISAC")
            +" --output_dir="+self.old_output_folder
            + " --pixel_size=1.14"
            + " --radius=145"
            + " --local_alignment")

        subprocess.run(args=[testargs_old], shell=True,  capture_output=True)
        subprocess.run(args=[testargs_new], shell=True,  capture_output=True)

        return_new_avg = get_im( path.join(ABSOLUTE_PATH,self.new_output_folder,self.hdf_class_averages) )
        return_new_ord_avg = get_im( path.join(ABSOLUTE_PATH,self.new_output_folder, self.hdf_ordered_class_averages) )
        return_old_avg = get_im( path.join(ABSOLUTE_PATH,self.old_output_folder,self.hdf_class_averages) )
        return_old_ord_avg = get_im( path.join(ABSOLUTE_PATH,self.old_output_folder, self.hdf_ordered_class_averages) )
        self.assertTrue(allclose(return_new_avg.get_2dview(), return_old_avg.get_2dview(), atol=TOLERANCE))
        self.assertTrue(allclose(return_new_ord_avg.get_2dview(), return_old_ord_avg.get_2dview(), atol=TOLERANCE*2))
        self.assertTrue(allclose(return_new_avg.get_2dview().flatten()[0:100], [-0.3773728013038635, -0.41544219851493835, -0.3761293888092041, -0.3591761589050293, -0.43282371759414673, -0.4265595078468323, -0.4148581922054291, -0.4224310517311096, -0.43616005778312683, -0.4226226508617401, -0.4236719012260437, -0.3988722264766693, -0.3999549150466919, -0.429086834192276, -0.4824589192867279, -0.4874829351902008, -0.46652454137802124, -0.45035070180892944, -0.4962935149669647, -0.44611984491348267, -0.41119062900543213, -0.49813535809516907, -0.4746910631656647, -0.5187404155731201, -0.45553693175315857, -0.4957425594329834, -0.5538639426231384, -0.534964919090271, -0.5194882750511169, -0.5369241833686829, -0.46965163946151733, -0.5249303579330444, -0.5797600150108337, -0.5140219330787659, -0.5117306709289551, -0.539315938949585, -0.5346848964691162, -0.5727500915527344, -0.5697888731956482, -0.6101580262184143, -0.5947281718254089, -0.5542084574699402, -0.6618639230728149, -0.6249070167541504, -0.5898929238319397, -0.6276904344558716, -0.5649508833885193, -0.5853399038314819, -0.6869904398918152, -0.6111335158348083, -0.6148110628128052, -0.6466882824897766, -0.5135477781295776, -0.5898731350898743, -0.6465235948562622, -0.5009976625442505, -0.6071970462799072, -0.6296780109405518, -0.5547176599502563, -0.6063269376754761, -0.4784807562828064, -0.5969477891921997, -0.6224362850189209, -0.6081315279006958, -0.5790292620658875, -0.6194049715995789, -0.5994917154312134, -0.6017302870750427, -0.5717787146568298, -0.5160152316093445, -0.5912415385246277, -0.6044934391975403, -0.60125732421875, -0.5515034198760986, -0.5659533143043518, -0.6049728989601135, -0.5888529419898987, -0.5372539162635803, -0.5710858702659607, -0.5199815034866333, -0.41809117794036865, -0.5142531991004944, -0.5501168370246887, -0.5406671762466431, -0.5455184578895569, -0.560030460357666, -0.4259740114212036, -0.459563672542572, -0.6108324527740479, -0.5141357183456421, -0.6574963927268982, -0.42206454277038574, -0.472793847322464, -0.4449903070926666, -0.5120227932929993, -0.4889621138572693, -0.4738544821739197, -0.41124212741851807, -0.3380543887615204, -0.5184443593025208], atol=TOLERANCE))
        self.assertTrue(allclose(return_new_ord_avg.get_2dview().flatten()[0:100], [-0.4755164086818695, -0.4459690451622009, -0.4426233470439911, -0.4390101730823517, -0.41202428936958313, -0.4246647357940674, -0.4087504744529724, -0.45831170678138733, -0.46185413002967834, -0.4119839370250702, -0.44401076436042786, -0.4196189343929291, -0.4120807349681854, -0.4334418773651123, -0.4240025281906128, -0.45703795552253723, -0.40982532501220703, -0.39911121129989624, -0.3719663619995117, -0.39963966608047485, -0.4141681492328644, -0.3993290364742279, -0.40282657742500305, -0.3701721131801605, -0.38415929675102234, -0.4084409177303314, -0.39255011081695557, -0.36892202496528625, -0.35856541991233826, -0.4104442298412323, -0.4215882122516632, -0.43632781505584717, -0.43786704540252686, -0.41116490960121155, -0.4686449468135834, -0.4530641436576843, -0.4411728084087372, -0.501443088054657, -0.45880013704299927, -0.44000330567359924, -0.5278807282447815, -0.5104199647903442, -0.5034075379371643, -0.5264223217964172, -0.5915167331695557, -0.5737375617027283, -0.4853608012199402, -0.5745546221733093, -0.5329158306121826, -0.5109198689460754, -0.5972565412521362, -0.5441346168518066, -0.5846849083900452, -0.663973867893219, -0.6821576952934265, -0.6607899069786072, -0.6434313058853149, -0.6325004696846008, -0.6504960060119629, -0.6043676733970642, -0.6978859901428223, -0.7230326533317566, -0.6497582793235779, -0.7129294276237488, -0.7632676362991333, -0.718494713306427, -0.7141211628913879, -0.8057774901390076, -0.7825522422790527, -0.7947057485580444, -0.828340470790863, -0.7939249873161316, -0.8407480120658875, -0.8428947925567627, -0.7557647228240967, -0.791630208492279, -0.8045598268508911, -0.9309723973274231, -0.9291375875473022, -0.9290353655815125, -0.8715344667434692, -0.7881693840026855, -0.8585363030433655, -0.8915159106254578, -0.8524169325828552, -0.8446857333183289, -0.8384703397750854, -0.7367978096008301, -0.8700037002563477, -0.920834481716156, -0.8882272243499756, -0.8548369407653809, -0.7409448027610779, -0.7445260286331177, -0.7844038009643555, -0.714576780796051, -0.7432811260223389, -0.7812434434890747, -0.627810001373291, -0.8634370565414429], atol=TOLERANCE))
