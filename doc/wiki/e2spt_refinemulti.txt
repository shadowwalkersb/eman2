||option||type||description||
||--autocentermask||str||WARNING: Experimental. Requires --autocenter. Default=None. Masking processor to apply before autocentering. See 'e2help.py processors -v 10' at the command line.||
||--input||str||The name of the input volume stack. MUST be HDF since volume stack support is required.||
||--search||int||"During COARSE alignment translational search in X, Y and Z, in pixels. Default=8. This WILL overwrite any search: provided through --align, EXCEPT if you provide --search=8, which is the default. In general, just avoid providing search twice (through here and through the aligner, --align). If you do, just be careful to make them consistent to minimize misinterpretation and error.||
||--autocenterpreprocess|| ||WARNING: Experimental. Requires --autocenter. Default=False. This will apply a highpass filter at a frequency of half the box size times the apix, shrink by 2, and apply a low pass filter at half nyquist frequency to any computed average for autocentering purposes if --autocenter is provided. Default=False.||
||--breaksym|| ||Default=False. Breaks symmetry (skip symmetrization after averaging).||
||--lowpass||str||Default=None. A lowpass filtering processor (as in e2proc3d.py) to be applied to each volume prior to COARSE alignment. Not applied to aligned particles before averaging.||
||--threshold||str||Default=None. A threshold applied to the subvolumes after normalization. For example, --threshold=threshold.belowtozero:minval=0 makes all negative pixels equal 0, so that they do not contribute to the correlation score.||
||--nref||int||Default=3. (For single reference refinement use e2spt_classaverage.py). Number of references to generate from a single image provided through --ref (random-phase filtered differently), or number of different initial references to generate from scratch from the data set (--input). Default=2||
||--preavgproc2||str||Default=None. A processor (see 'e2help.py processors -v 10' at the command line) to be applied to the raw particle after alignment but before averaging (for example, a threshold to exclude extreme values, or a highphass filter if you have phaseplate data.)||
||--verbose, -v||int||verbose level [0-9], higner number means higher level of verboseness||
||--precision||float||Default=1.0. Precision in pixels to use when figuring out alignment parameters automatically using --radius. Precision would be the number of pixels that the the edge of the specimen is moved (rotationally) during the finest sampling, --falign. If precision is 1, then the precision of alignment will be that of the sampling (apix of your images) times the --shrinkfine factor specified.||
||--preprocess||str||Default=''. Any processor (as in e2proc3d.py) to be applied to each volume prior to COARSE alignment. Not applied to aligned particles before averaging.||
||--path||str||Directory to store results in. The default is a numbered series of directories containing the prefix 'spt_refinemulti'; for example, spt_refinemulti02 will be the directory by default if 'spt_refinemulti01' already exists.||
||--normproc||str||Default=None. Normalization processor applied to particles before alignment. Default is to use normalize. If normalize.mask is used, results of the mask option will be passed in automatically. If you want to turn this option off specify 'None'||
||--faligncmp||str||The comparator used by the second stage aligner. Default is the internal tomographic ccc.tomo.thresh.||
||--clip||int||Default=0 (which means it's not used). Boxsize to clip particles as part of preprocessing to speed up alignment. For example, the boxsize of the particles might be 100 pixels, but the particles are only 50 pixels in diameter. Aliasing effects are not always as deleterious for all specimens, and sometimes 2x padding isn't necessary; still, there are some benefits from 'oversampling' the data during averaging; so you might still want an average of size 2x, but perhaps particles in a box of 1.5x are sufficiently good for alignment. In this case, you would supply --clip=75||
||--btref||int||WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references through --ref. Default=0 (internally turned on and set to 64). Size of the SUBSET of particles to use to build an initial reference by calling e2spt_binarytree.py. By default, the largest power of two smaller than the number of particles in --input will be used. For example, if you supply a stack with 150 subtomograms, the program will automatically select 128 as the limit to use because it's the largest power of 2 that is smaller than 150. But if you provide, say --btref=100, then the number of particles used will be 64, because it's the largest power of 2 that is still smaller than 100.||
||--weighbyscore|| ||Default=False. This option will weigh the contribution of each subtomogram to the average by score/bestscore.||
||--radius||float||Default=0 (not used). Will make --align and --falign None. Hydrodynamic radius of the particle in Angstroms. This will be used to automatically calculate the angular steps to use in search of the best alignment. Make sure the apix is correct on the particles' headers, sine the radius will be converted from Angstroms to pixels. Then, the fine angular step is equal to 360/(2*pi*radius), and the coarse angular step 4 times that||
||--ref||str||Comma separated list of individual images; e.g. --refs=ref1.hdf,ref2.hdf,ref3.hdf. If a single image is provided, several copies will be made based on the number of references specified through --nref.||
||--align||str||This is the aligner used to align particles to the previous class average. Default is rotate_translate_3d:search=8:delta=12:dphi=12, specify 'None' (with capital N) to disable.||
||--subset||int|| WARNING: NOT IMPLEMENTED HERE YET. Default=0 (not used). Refine only this substet of particles from the stack provided through --input||
||--saveali|| ||Default=False. If set, will save the aligned particle volumes in class_ptcl.hdf. Overwrites existing file.||
||--randomizewedge|| ||Default=False. This parameter is EXPERIMENTAL. It randomizes the position of the particles BEFORE alignment, to minimize missing wedge bias and artifacts during symmetric alignment where only a fraction of space is scanned||
||--lowpassfine||str||Default=None.A lowpass filtering processor (as in e2proc3d.py) to be applied to each volume prior to FINE alignment. Not applied to aligned particles before averaging.||
||-h, --help|| ||show this help message and exit||
||--searchfine||int||"During FINE alignment translational search in X, Y and Z, in pixels. Default=2. This WILL overwrite any search: provided through --falign, EXCEPT if you provide --searchfine=2, which is the default. In general, just avoid providing search twice (through here and through the fine aligner --falign). If you do, just be careful to make them consistent to minimize misinterpretation and error.||
||--tweak|| ||WARNING: BUGGY. This will perform a final alignment with no downsampling [without using --shrink or --shrinkfine] if --shrinkfine > 1.||
||--refgenmethod||str||Method for generating the initial reference(s). Options are 'bt', for binary tree (see e2spt_binarytree.py), 'hac', for hierarchical ascendant classification (see e2spt_hac.py), or 'ssa' for self-symmetry alignment (see e2symsearch3d.py). Default=bt||
||--preavgproc1||str||Default=None. A processor (see 'e2help.py processors -v 10' at the command line) to be applied to the raw particle after alignment but before averaging (for example, a threshold to exclude extreme values, or a highphass filter if you have phaseplate data.)||
||--generate_doc|| ||Extract help strings of each command line argument and generate wiki table.||
||--maskfile||str||Default=None. Mask file (3D IMAGE) applied to particles before alignment. Must be in HDF format. Default is None.||
||--shrink||int||Optionally shrink the input volumes by an integer amount for coarse alignment.||
||--shrinkfine||int||Optionally shrink the input volumes by an integer amount for fine alignment.||
||--classmx||str||Default=None. WARNING: Not implemented yet. The name of the classification matrix specifying how particles in 'input' should be grouped to generate initial averages and seed refinement.||
||--saveallalign|| ||Default=False. If set, will save the alignment parameters after each iteration||
||--procfinelikecoarse||bool||Turn on with --procfinelikecoarse=False, and supply fine alignment parameters, such as --lowpassfine, --highpassfine, etc; to preprocess the particles for FINE alignment differently than for COARSE alignment.||
||--inixforms||str||Default=None. .json file containing a dict of transform to apply before reference generation||
||--postprocess||str||Default=None.A processor to be applied to the FINAL volume after averaging the raw volumes in their FINAL orientations, after all iterations are done.||
||--preprocessfine||str||Default=''. Any processor (as in e2proc3d.py) to be applied to each volume prior to FINE alignment. Not applied to aligned particles before averaging.||
||--hacref||int||WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references through --ref. Default=0 (not used by default). Size of the SUBSET of particles to use to build an initial reference by calling e2spt_hac.py which does Hierarchical Ascendant Classification (HAC) or 'all vs all' alignments.||
||--version|| ||show program's version number and exit||
||--syms||str||List comma-separated symmetries to apply separately on the different references. For example, if you provide --syms=d8,d7 and provide 2 references via --nref=2 or supply two references via --refs=r1.hdf,r2.hdf, d8 symmetry will be applied to the first reference and d7 to the second after each iteration of refinement (the final average in one iteration becomes a reference for the next).||
||--savepreproc|| ||Default=False. Will save stacks of preprocessed particles (one for coarse alignment and one for fine alignment if preprocessing options are different).||
||--verbose, -v||int||verbose level [0-9], higner number means higher level of verboseness||
||--refrandphase||float||Default=0. Resolution to phase-randomize the reference to.||
||--averager||str||The type of averager used to produce the class average. Default=mean||
||--iter||int||The number of iterations to perform. Default is 1.||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--refpreprocess|| ||Default=False. This will preprocess the reference identically to the particles. It is off by default, but it is internally turned on when no reference is supplied. It should probably be off when using a crystal structure (with all positive densities) turned to EM density as an initial model, but it should be on when using an EM map.||
||--falign||str||Default=None (not used). This is the second stage aligner used to fine-tune the first alignment. Specify 'None' to disable.||
||--mask||str||Mask processor applied to particles before alignment. Default=None.||
||--parallel|| ||Parallelism. See http://blake.bcm.edu/emanwiki/EMAN2/Parallel||
||--highpass||str||Default=None.A highpass filtering processor (as in e2proc3d.py) to be applied to each volume prior to COARSE alignment. Not applied to aligned particles before averaging.||
||--savesteps|| ||Default=False. If set, will save the average after each iteration to class_#.hdf. Each class in a separate file. Appends to existing files.||
||--weighbytiltaxis||str||Default=None. A,B, where A is an integer number and B a decimal. A represents the location of the tilt axis in the tomogram in pixels (eg.g, for a 4096x4096xZ tomogram, this value should be 2048), and B is the weight of the particles furthest from the tomogram. For example, --weighbytiltaxis=2048,0.5 means that praticles at the tilt axis (with an x coordinate of 2048) will have a weight of 1.0 during averaging, while the distance in the x coordinates of particles not-on the tilt axis will be used to weigh their contribution to the average, with particles at the edge(0+radius or 4096-radius) weighing 0.5, as specified by the value provided for B.||
||--subset4ref||int|| Size of the subset of particles to use for generating each reference. Default=0, which means all particles in each subgroup will be used (for example, if --input has 100 particles and --nref is 10, 10 references will be generated using 10 particles for each). If --ref not provided, the program generates an --nref number of references from --input.||
||--npeakstorefine||int||Default=1. The number of best coarse alignments to refine in search of the best final alignment.||
||--output||str||The name of the output class-average stack. MUST be in  .hdf format, since volume stack support is required.||
||--autocenter||str||WARNING: Experimental. Default=None. Autocenters each averaged pair during initial average generation with --btref and --hacref. Will also autocenter the average of all particles after each iteration of iterative refinement. Options are --autocenter=xform.centerofmass (self descriptive), or --autocenter=xform.centeracf, which applies auto-convolution on the average.||
||--notmatchimgs|| ||Default=True. This option prevents applying filter.match.to to one image so that it matches the other's spectral profile during preprocessing for alignment purposes.||
||--plots|| ||Turn this option on to generate a plot of the ccc scores both during model generation with e2spt_classaverage.py or e2spt_hac.py and for refinement results of e2spt_refinemulti.py. Running on a cluster or via ssh remotely might not support plotting.||
||--ssaref||int||WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references through --ref. Default=0 (not used by default). Size of the SUBSET of particles to use to build an initial reference by calling e2symsearch3d.py, which does self-symmetry alignments. You must provide --sym different than c1 for this to make any sense.||
||--aligncmp||str||The comparator used for the --align aligner. Default is the internal tomographic ccc.tomo.thresh. Do not specify unless you need to use another specific aligner.||
||--sym|| ||Symmetry to impose -choices are: c<n>, d<n>, h<n>, tet, oct, icos||
||--highpassfine||str||Default=None.A highpass filtering processor (as in e2proc3d.py) to be applied to each volume prior to FINE alignment. Not applied to aligned particles before averaging.||
||--apix||float||Default=0.0 (not used). Use this apix value where relevant instead of whatever is in the header of the reference and the particles.||
||--keepsig|| ||Causes the keep argument to be interpreted in standard deviations.||
||--keep||float||Default=1.0. The fraction of particles to keep in each class.||
||-h, --help|| ||show this help message and exit||
