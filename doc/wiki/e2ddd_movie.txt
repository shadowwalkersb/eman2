{{{

usage: prog [options] <ddd_movie_stack>

	This program will do various processing operations on "movies" recorded on direct detection cameras. It
	is primarily used to do whole-frame alignment of movies using all-vs-all CCFs with a global optimization
	strategy. Several outputs including different frame subsets are produced, as well as a text file with the
	translation vector map.

	See e2ddd_particles for per-particle alignment.

	Note: We have found the following to work on DE64 images:
	e2ddd_movie.py <movies> --de64 --dark <dark_frames> --gain <gain_frames> --gain_darkcorrected --reverse_gain --invert_gain

	Note: For multi-image files in MRC format, use the .mrcs extension. Do not use .mrc, as it will handle input stack as a 3D volume.
	

}}}


||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--tiltseries_name|| ||Specify a name for the tilt series to be generated from the input movies.||
||--tomo|| ||Process input movies as tilts from a tomogram.||
||--dark||str||Perform dark image correction using the specified image file||
||--gain||str||Perform gain image correction using the specified image file||
||--ref_label||str||Optional: Specify a label for the averaged dark and gain references when using multiple, individual frames.
A labeled will be written as movierefs/dark_<label>.hdf and movierefs/gain_<label>.hdf.
Note: This option is ignored when using a single reference image/stack.||
||--rotate_dark||str||Rotate dark reference by 0, 90, 180, or 270 degrees. Default is 0. Transformation order is rotate then reverse.||
||--reverse_dark|| ||Flip dark reference along y axis. Default is False. Transformation order is rotate then reverse.||
||--k2|| ||Perform gain image correction on gain images from a Gatan K2. Note, these are the reciprocal of typical DDD gain images.||
||--de64|| ||Perform gain image correction on DE64 data. Note, these should not be normalized.||
||--rotate_gain||str||Rotate gain reference by 0, 90, 180, or 270 degrees. Default is 0. Transformation order is rotate then reverse.||
||--reverse_gain|| ||Flip gain reference along y axis (about x axis). Default is False. Transformation order is rotate then reverse.||
||--gain_darkcorrected|| ||Do not dark correct gain image. False by default.||
||--invert_gain|| ||Use reciprocal of input gain image||
||--bad_columns||str||Comma separated list of camera defect columns||
||--bad_rows||str||Comma separated list of camera defect rows||
||--align_frames|| ||Perform whole-frame alignment of the input stacks||
||--realign|| ||Align frames using previous alignment parameters.||
||--round|| ||If float (default), apply subpixel frame shifts. If integer, use integer shifts.||
||--noali|| ||Average of non-aligned frames.||
||--allali|| ||Average of all aligned frames.||
||--rangeali||str||Average frames 'n1-n2'||
||--goodali|| ||Average of good aligned frames.||
||--bestali|| ||Average of best aligned frames.||
||--groupby||int||Combine every N frames using a moving window approach.||
||--optbox||int||Box size to use during alignment optimization. Default is 512.||
||--optstep||int||Step size to use during alignment optimization. Default is 448.||
||--optalpha||float||Penalization to apply during robust regression. Default is 0.1. If 0.0, unpenalized least squares will be performed (i.e., no trajectory smoothing).||
||--optccf||str||Use this approach to determine relative frame translations.
Note: 'robust' utilizes a bimodal Gaussian to robustly determine CCF peaks between pairs of frames in the presence of a fixed background.||
||--step||str||Specify <first>,<step>,[last]. Processes only a subset of the input data. ie- 0,2 would process all even particles. Same step used for all input files. [last] is exclusive. Default= 0,1||
||--frames|| ||Write corrected stack of frames.||
||--ext||str||Save frames with this extension. Default is 'hdf'.||
||--threads||int||Number of threads to run in parallel. The default is 4, and our alignment routine requires 2+ threads. Using more threads will result in faster processing times.||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--debug|| ||run with debugging output||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--fixbadpixels|| ||Tries to identify bad pixels in the dark/gain reference, and fills images in with sane values instead||
||--suffix||str||Specify a unique suffix for output frames. Default is 'proc'. Note that the output of --frames will be overwritten if identical suffix is already present.||
||--phaseplate|| ||Use this flag when aligning phase plate frames.||
