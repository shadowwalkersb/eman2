||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--generate_doc|| ||Extract help strings of each command line argument and generate wiki table.||
||--path||str||Path for the refinement, default=auto||
||--input||str||The name of the file containing the particle data||
||--ncls||int||Number of classes to generate||
||--normproj|| ||Normalizes each projected vector into the MSA subspace. Note that this is different from normalizing the input images since the subspace is not expected to fully span the image||
||--fastseed|| ||Will seed the k-means loop quickly, but may produce less consistent results. Always use this when generating >~100 classes.||
||--iter||int||The total number of refinement iterations to perform||
||--nbasisfp||int||Number of MSA basis vectors to use when classifying particles||
||--automask|| ||Automasking during class-averaging to help with centering when particle density is high||
||--naliref||int||Number of alignment references to when determining particle orientations||
||--parallel, -P||str||Run in parallel, specify type:<option>=<value>:<option>:<value>||
||--centeracf|| ||This option has been removed in favor of a new centering algorithm||
||--center||str||If the default centering algorithm (xform.center) doesn't work well, you can specify one of the others here (e2help.py processor center)||
||--check, -c|| ||Checks the contents of the current directory to verify that e2refine2d.py command will work - checks for the existence of the necessary starting files and checks their dimensions. Performs no work ||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--maxshift||int||Maximum particle translation in x and y||
||--exclude||str||The named file should contain a set of integers, each representing an image from the input file to exclude.||
||--resume|| ||This will cause a check of the files in the current directory, and the refinement will resume after the last completed iteration. It's ok to alter other parameters.||
||--initial||str||File containing starting class-averages. If not specified, will generate starting averages automatically||
||--minchange||int||Minimum number of particles that change group before deicding to terminate. Default = -1 (auto)||
||--simalign||str||The name of an 'aligner' to use prior to comparing the images (default=rotate_translate_tree)||
||--simaligncmp||str||Name of the aligner along with its construction arguments (default=ccc)||
||--simralign||str||The name and parameters of the second stage aligner which refines the results of the first alignment||
||--simraligncmp||str||The name and parameters of the comparitor used by the second stage aligner. (default=dot).||
||--simcmp||str||The name of a 'cmp' to be used in comparing the aligned images (default=ccc)||
||--shrink||int||Optionally shrink the input particles by an integer amount prior to computing similarity scores. For speed purposes. default=0, no shrinking||
||--classkeep||float||The fraction of particles to keep in each class, based on the similarity score generated by the --cmp argument (default=0.85).||
||--classkeepsig|| ||Change the keep ('--keep') criterion from fraction-based to sigma-based.||
||--classiter||int||Number of iterations to use when making class-averages (default=5)||
||--classalign||str||If doing more than one iteration, this is the name and parameters of the 'aligner' used to align particles to the previous class average.||
||--classaligncmp||str||This is the name and parameters of the comparitor used by the fist stage aligner  Default is dot.||
||--classralign||str||The second stage aligner which refines the results of the first alignment in class averaging. Default is None.||
||--classraligncmp||str||The comparitor used by the second stage aligner in class averageing. Default is dot:normalize=1.||
||--classaverager||str||The averager used to generate the class averages. Default is 'mean'.||
||--classcmp||str||The name and parameters of the comparitor used to generate similarity scores, when class averaging. Default is ccc'||
||--classnormproc||str||Normalization applied during class averaging||
||--classrefsf|| ||Use the setsfref option in class averaging to produce better filtered averages.||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
