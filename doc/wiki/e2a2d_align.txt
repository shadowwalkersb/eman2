{{{

usage: Usage: e22da_align.py [options] <sets/file.lst> <reference>[,nref]
	This program will align a stack of 2-D particle images to a single 2-D reference image, recording all of the alignment parameters in a
	JSON file. This is designed as the first step in a longer 2-D processing sequence. 
	
	This could, for example, be used to align a full particle set against a 2-D reference, then select a subset which matches well, as opposed 
	to the normal 3-D refinement process where particles are competed against many references.

}}}


||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--threads||int||Number of alignment threads to run in parallel on a single computer||
||--iter||int||Iteration number within path. Default = start a new iteration||
||--saveali|| ||Save a stack file (aliptcls_XX.hdf) containing the aligned particles.||
||--path||str||Path to a folder where results should be stored, following standard naming conventions (default = m2d_XX)||
||--align||str||This is the aligner used to align particles to the previous class average. Default is None.||
||--aligncmp||str||The comparitor used for the --align aligner. Default is dot.||
||--ralign||str||This is the second stage aligner used to refine the first alignment. This is usually the 'refine' aligner.||
||--raligncmp||str||The comparitor used by the second stage aligner.||
||--cmp||str||The comparitor used to generate quality scores for the purpose of particle exclusion in classes, strongly linked to the keep argument.||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
