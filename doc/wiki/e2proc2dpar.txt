||option||type||description||
||--parallel, -P||str||Run in parallel, only thread:n supported||
||--add||float||Adds a constant 'f' to the densities||
||--verbose, -v||int||verbose level [0-9], higner number means higher level of verboseness||
||--translate||str||Translate by x,y pixels||
||--parallel, -P||str||Run in parallel, only thread:n supported||
||--randomize||str||Randomly rotate/translate the image. Specify: da,dxy,flip  da is a uniform distribution over +-da degrees, dxy is a uniform distribution on x/y, if flip is 1, random handedness changes will occur||
||--scale||float||Scale by specified scaling factor. Clip must also be specified to change the dimensions of the output map.||
||--selfcl||int||Output file will be a 180x180 self-common lines map for each image.||
||--multfile||str||Multiplies the image by another image of identical size. This can be used to apply masks, etc.||
||-h, --help|| ||show this help message and exit||
||--fixintscaling||str||When writing to an 8 or 16 bit integer format the data must be scaled. 'noscale' will assume the pixel values are already correct, 'sane' will pick a good range, a number will set the range to mean+=sigma*number||
||--generate_doc|| ||Extract help strings of each command line argument and generate wiki table.||
||--verbose, -v||int||verbose level [0-9], higner number means higher level of verboseness||
||--anisotropic||str||Anisotropic scaling, stretches on one axis and compresses the orthogonal axis. Specify amount,angle. See e2evalrefine||
||--clip||str||Specify the output size in pixels xsize,ysize[,xcenter,ycenter], images can be made larger or smaller.||
||--threads||int||Number of threads to run in parallel on a single computer when multi-computer parallelism isn't useful||
||--fouriershrink||float||Reduce an image size by an arbitrary scaling factor by clipping in Fourier space. eg - 2 will reduce image size to 1/2.||
||--version|| ||show program's version number and exit||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--medianshrink||int||Reduce an image size by an integral scaling factor, uses median filter. eg - 2 will reduce image size to 1/2. Clip is not required.||
||--meanshrink||float||Reduce an image size by an integral (1.5 also allowed) scaling factor using average. eg - 2 will reduce image size to 1/2. Clip is not required.||
||--rotate||float||Rotate clockwise (in degrees)||
||--process||str||apply a processor named 'processorname' with all its parameters/values.||
||--mult||float||Multiply image by a constant. mult=-1 to invert contrast.||
||--rfp|| ||this is an experimental option||
||--apix||float||A/pixel for S scaling||
||--outmode||str||All EMAN2 programs write images with 4-byte floating point values when possible by default. This allows specifying an alternate format when supported (float, int8, int16, int32, uint8, uint16, uint32). Values are rescaled to fill MIN-MAX range.||
||--fp||int||This generates rotational/translational 'footprints' for each input particle, the number indicates which algorithm to use (0-6)||
||-h, --help|| ||show this help message and exit||
||--outtype||str||output image format, 'mrc', 'imagic', 'hdf', etc. if specify spidersingle will output single 2D image rather than 2D stack.||
