||option||type||description||
||-h, --help|| ||show this help message and exit||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--generate_doc|| ||Extract help strings of each command line argument and generate wiki table.||
||--path||str||Path for the refinement, default=auto||
||--input||str||The name of the file containing the particle data||
||--ncls||int||Number of classes to generate||
||--alignsort|| ||This will align and sort the final class-averages based on mutual similarity.||
||--msamode||str||e2msa can use a variety of different dimensionality reduction algorithms, the default is Principal Component Analysis (PCA), but others are available, see e2msa.py||
||--basisrefs||str||Will use a set of existing class-averages/projections to generate the Eigenbasis for classification. This must be an image stack with the same dimensions as the particle data.||
||--normproj|| ||Normalizes each projected vector into the MSA subspace. Note that this is different from normalizing the input images since the subspace is not expected to fully span the image||
||--iter||int||The total number of refinement iterations to perform||
||--nbasisfp||int||Number of MSA basis vectors to use when classifying particles||
||--parallel, -P||str||Run in parallel, specify type:<option>=<value>:<option>:<value>||
||--parallel, -P||str||Run in parallel, specify type:<option>=<value>:<option>:<value>||
||--threads||int||Number of threads to run in parallel on a single computer when multi-computer parallelism isn't useful||
||--center||str||If the default centering algorithm (xform.center) doesn't work well, you can specify one of the others here (e2help.py processor center)||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--classkeep||float||The fraction of particles to keep in each class, based on the similarity score generated by the --cmp argument (default=0.8).||
||--classkeepsig|| ||Change the keep ('--keep') criterion from fraction-based to sigma-based.||
||--classiter||int||Number of iterations to use when making class-averages (default=4)||
||--classalign||str||If doing more than one iteration, this is the name and parameters of the 'aligner' used to align particles to the previous class average.||
||--classaligncmp||str||This is the name and parameters of the comparitor used by the fist stage aligner  Default is dot.||
||--classralign||str||The second stage aligner which refines the results of the first alignment in class averaging. Default is None.||
||--classraligncmp||str||The comparitor used by the second stage aligner in class averageing. Default is dot:normalize=1.||
||--classaverager||str||The averager used to generate the class averages. Default is 'mean'.||
||--classcmp||str||The name and parameters of the comparitor used to generate similarity scores, when class averaging. Default is ccc'||
||--classnormproc||str||Normalization applied during class averaging||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
