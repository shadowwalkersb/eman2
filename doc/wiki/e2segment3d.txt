{{{

usage: prog <input volume> [options] 
	This program provides access to various algorithms for segmenting a 3-D volume into multiple pieces automatically.
	Note that you MUST have sufficient RAM to hold at least two copies of the volume in memory. Some segmentation algorithms
	may require more. The actual segmentation is performed using one of the segment.* processors. 'e2help.py processors |grep segment'
	for more information (-v 1 will give even more).

}}}


||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
||--process||str||The name and parameters of a processor to perform the segmentation. 'e2help.py processor segment -v 1' for a full list. Default=segment.kmeans:ampweight=1:nseg=50:thr=0.8 ||
||--output||str||Name of output file for segmentation map||
||--segout||str||Output stack for individual segmented volumes||
||--chimeraout||str||Name of file to write center of segments in UCSF Chimera marker format.||
||--pdbout||str||Name of file to write center of segments in PDB format.||
||--txtout||str||Name of file to write center of segments in text format (n	x	y	z, with coordinates in pixels, 0,0,0 in the corner)||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--shifttocenter|| ||Shift the output pdb to center of the density map||
||--helixfile||str||Start with existing secondary structure.||
||--edgefile||str||Write an edge file for pathwalker.py. Only avaliable while using existing secondary structures.||
||--sym||str||Symmetry of the target complex. Note the number of segment is per unit.||
||--asymunit|| ||Write points of only one asymmetrical unit.||
