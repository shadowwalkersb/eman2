{{{

usage: Must be run in the directory containing the stack(s)/particle(s) whose header 
	is to be modified. e2fixheaderparam.py imgs.hdf --input=stack_to_fix --output=fixed_stack_name 
	--params=param1:value1,param2:value2... --type=type_of_parameters. 
	This program fixes values for any parameter on the header of an HDF file or a stack of 
	HDF files or an MRC file. ADDING new parameters, such as through --addfilename, or any
	parameters supplied through --params=parameter:value,parameter:value,.... that are not
	already in the header, will enforce HDF format on the output.

}}}


||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--addfilename|| ||Adds the original filename of a file or stack to the header of each particle. This only works for .hdf files.||
||--input||str||File or stack for which to fix header parameters. To indicate multiple files, do not use --input. Simply provide the program name followed by the string common to all files to process and *, followed by all parameters of interest. For example, to process all .mrc files in a directory, you would run e2fixheader.py *.mrc <parameters>.||
||--output||str||File to write the fixed stack to. If not provided, the stack in --input will be overwritten.||
||--params||str||Comma separated pairs of parameter:value. The parameter will be changed to the value specified.||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--refheader||str||If supplied, the header of this image will be copied to the header of all images in --input.||
||--stem||str||Some parameters have common stems. For example, 'origin_x', 'origin_y', 'origin"x'. Supply the stem and all parameters containing it will be modified.||
||--stemval||str||New value for all parameters containing --stem.||
||--valtype||str||Type of the value to enforce. It can be: str, float, int, list, or transform.||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness.||
