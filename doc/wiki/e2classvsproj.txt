{{{

usage: prog [options] <classes> <projection stack or 3Dmap> <output>
	Compares each class-average (or particle) in the classes input stack to each projection in the 'projection stack'. If a
	3-D map is provided as the second input, then projections are generated using the specified angular spacing.

	e2ptclvsmap.py is similar, but also sorts the results 

}}}


||option||type||description||
||-h, --help|| ||show this help message and exit||
||--version|| ||show program's version number and exit||
||--ang||float||Angle between projections if 3Dmap provided||
||--sym|| ||Set the symmetry; if no value is given then the model is assumed to have no symmetry.
Choices are: i, c, d, tet, icos, or oct.||
||--align||str||The name of an 'aligner' to use prior to comparing the images||
||--aligncmp||str||Name of the aligner along with its construction arguments||
||--ralign||str||The name and parameters of the second stage aligner which refines the results of the first alignment||
||--raligncmp||str||The name and parameters of the comparitor used by the second stage aligner. Default is ccc.||
||--cmp||str||The name of a 'cmp' to be used in comparing the aligned images||
||--savesim||str||Save all of the similarity results to a text file. (ptcl#,proj#,alt,az,sim)||
||--threads||int||Number of alignment threads to run in parallel on a single computer. This is the only parallelism supported by this program at present.||
||--ppid||int||Set the PID of the parent process, used for cross platform PPID||
||--verbose, -v||int||verbose level [0-9], higher number means higher level of verboseness||
