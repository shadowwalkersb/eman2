
data = [{'count': 169,
  'default': '-1',
  'help': 'Set the PID of the parent process, used for cross platform PPID',
  'option': "['--ppid']",
  'type': 'int'},
 {'count': 140,
  'default': '0',
  'help': 'verbose level [0-9], higher number means higher level of '
          'verboseness',
  'option': "['--verbose', '-v']",
  'type': 'int'},
 {'count': 60,
  'default': 'None',
  'help': 'Path to a folder where results should be stored. Creates a new '
          'folder if none specified (default = m2d_XX)',
  'option': "['--path']",
  'type': 'str'},
 {'count': 55,
  'default': 'c1',
  'help': 'model symmetry (using sym, if present, speeds thing up a lot), '
          "default='c1'",
  'option': "['--sym']",
  'type': 'str'},
 {'count': 55,
  'default': '4',
  'help': 'Number of alignment threads to run in parallel on a single computer',
  'option': "['--threads']",
  'type': 'int'},
 {'count': 49,
  'default': 'None',
  'help': 'parallelism argument',
  'option': "['--parallel']",
  'type': 'None'},
 {'count': 42,
  'default': '-2',
  'help': 'Mask radius',
  'option': "['--mask']",
  'type': 'int'},
 {'count': 41,
  'default': '-1',
  'help': 'Angstroms per pixel for all images',
  'option': "['--apix']",
  'type': 'float'},
 {'count': 31,
  'default': 'None',
  'help': 'The name of the input particle stack',
  'option': "['--input']",
  'type': 'str'},
 {'count': 31,
  'default': '0',
  'help': 'Iteration number within path. Default = start a new iteration',
  'option': "['--iter']",
  'type': 'int'},
 {'count': 30,
  'default': '0',
  'help': 'Shrink the images by an integer, uses math.meanshrink',
  'option': "['--shrink']",
  'type': 'int'},
 {'count': 28,
  'default': 'None',
  'help': 'The name of the output class stack',
  'option': "['--output']",
  'type': 'str'},
 {'count': 18,
  'default': '0',
  'help': 'The highest resolution to be fitted (Angstroms)',
  'option': "['--maxres']",
  'type': 'float'},
 {'count': 17,
  'default': 'rotate_translate_tree',
  'help': 'This is the aligner used to align particles to the previous class '
          'average. Default is None.',
  'option': "['--align']",
  'type': 'str'},
 {'count': 17,
  'default': '1',
  'help': 'The fraction of particles to keep in each class.',
  'option': "['--keep']",
  'type': 'float'},
 {'count': 16,
  'default': 'False',
  'help': 'debug mode',
  'option': "['--debug']",
  'type': 'None'},
 {'count': 16,
  'default': 'None',
  'help': 'preprocess maps before alignment',
  'option': "['--preprocess']",
  'type': 'str'},
 {'count': 16,
  'default': 'None',
  'help': 'A reference image to be used in conjunction with --cmp and '
          '--multicmp',
  'option': "['--ref']",
  'type': 'str'},
 {'count': 15,
  'default': '6',
  'help': 'Bits to keep when writing images with compression. 0->lossless '
          'floating point. Default 6',
  'option': "['--compressbits']",
  'type': 'int'},
 {'count': 14,
  'default': 'None',
  'help': 'Specify the output size in pixels xsize,ysize[,xcenter,ycenter], '
          'images can be made larger or smaller.',
  'option': "['--clip']",
  'type': 'str'},
 {'count': 14,
  'default': 'False',
  'help': 'If writing outputt inverts pixel intensities',
  'option': "['--invert']",
  'type': 'None'},
 {'count': 14,
  'default': 'normalize.edgemean',
  'help': 'Normalization processor applied to particles before alignment. '
          'Default is normalize.edgemean. If you want to turn this option off '
          "specify 'None'",
  'option': "['--normproc']",
  'type': 'str'},
 {'count': 13,
  'default': 'ccc',
  'help': 'The comparitor used to generate quality scores for the purpose of '
          'particle exclusion in classes, strongly linked to the keep '
          'argument.',
  'option': "['--cmp']",
  'type': 'str'},
 {'count': 13,
  'default': '-1',
  'help': 'Microscope Cs (spherical aberation)',
  'option': "['--cs']",
  'type': 'float'},
 {'count': 13,
  'default': '1.11',
  'help': 'Multiply lowpass filter frequency by this constant when filtering '
          'noise image. Default is 1.11.',
  'option': "['--lowpass']",
  'type': 'float'},
 {'count': 13,
  'default': '2',
  'help': 'Maximun amount to shift the images during alignment',
  'option': "['--maxshift']",
  'type': 'int'},
 {'count': 13,
  'default': '-1',
  'help': 'Microscope voltage in KV',
  'option': "['--voltage']",
  'type': 'float'},
 {'count': 12,
  'default': 'ccc',
  'help': 'The comparitor used for the --align aligner. Default is dot.',
  'option': "['--aligncmp']",
  'type': 'str'},
 {'count': 12,
  'default': '-1',
  'help': 'Box size in pixels',
  'option': "['--boxsize']",
  'type': 'int'},
 {'count': 12,
  'default': 'False',
  'help': 'If selected, reconstruction will be asymmetric with sym= specifying '
          'a known pseudosymmetry, not an imposed symmetry.',
  'option': "['--breaksym']",
  'type': 'None'},
 {'count': 12,
  'default': 'False',
  'help': 'If set will open an interactive plot with the results',
  'option': "['--gui']",
  'type': 'None'},
 {'count': 12,
  'default': '0',
  'help': 'The lowest resolution to be fitted (Angstroms)',
  'option': "['--minres']",
  'type': 'float'},
 {'count': 12,
  'default': '10',
  'help': 'number of iterations',
  'option': "['--niter']",
  'type': 'int'},
 {'count': 12,
  'default': 'False',
  'help': 'Save a stack file (aliptcls_XX.hdf) containing the aligned '
          'particles.',
  'option': "['--saveali']",
  'type': 'None'},
 {'count': 12,
  'default': '',
  'help': 'EMAN2 processor to be used   to threshold the img2process. See '
          'available thresholds by typing    e2help.py processors '
          '--verbose=10   at the command line.',
  'option': "['--threshold']",
  'type': 'str'},
 {'count': 11,
  'default': 'mean',
  'help': 'The type of averager used to produce the class average.',
  'option': "['--averager']",
  'type': 'str'},
 {'count': 11,
  'default': '',
  'help': 'A highpass filtering processor (as in e2proc3d.py) to be applied to '
          'the edited img2process.',
  'option': "['--highpass']",
  'type': 'str'},
 {'count': 11,
  'default': '',
  'help': '',
  'option': "['--setsf']",
  'type': 'str'},
 {'count': 11,
  'default': '0',
  'help': 'Default=0 (not used). Apply algorithm to only a subset of images in '
          'each stack file.',
  'option': "['--subset']",
  'type': 'int'},
 {'count': 9,
  'default': '10',
  'help': 'Amplitude contrast (percentage, default=10)',
  'option': "['--ac']",
  'type': 'float'},
 {'count': 9,
  'default': 'None',
  'help': 'The name of a database containing a list of exclusion keys',
  'option': "['--exclude']",
  'type': 'str'},
 {'count': 9,
  'default': 'False',
  'help': 'This will force an action that would normally fail due to failed '
          'checks.',
  'option': "['--force']",
  'type': 'None'},
 {'count': 9,
  'default': 'None',
  'help': 'This is the second stage aligner used to refine the first '
          "alignment. This is usually the 'refine' aligner.",
  'option': "['--ralign']",
  'type': 'str'},
 {'count': 8,
  'default': 'None',
  'help': 'File containing a mask to apply to the particles before '
          'normalization',
  'option': "['--maskfile']",
  'type': 'str'},
 {'count': 8,
  'default': 'None',
  'help': 'Will zero-pad images to the specifed size (x,y) or (x,x) prior to '
          'reconstruction. If not specified no padding occurs.',
  'option': "['--pad']",
  'type': 'str'},
 {'count': 8,
  'default': 'ccc',
  'help': 'The comparitor used by the second stage aligner.',
  'option': "['--raligncmp']",
  'type': 'str'},
 {'count': 7,
  'default': 'False',
  'help': 'Check for self-consistency and errors in the structure of specified '
          'databases',
  'option': "['--check']",
  'type': 'None'},
 {'count': 7,
  'default': '0',
  'help': 'The ~mass of the particle in kilodaltons, used to run '
          'normalize.bymass. Due to resolution effects, not always the true '
          'mass.',
  'option': "['--mass']",
  'type': 'float'},
 {'count': 7,
  'default': 'score',
  'help': 'Which variable to histogram, score, coverage, alpha, tx, ty. '
          'default=score',
  'option': "['--mode']",
  'type': 'str'},
 {'count': 7,
  'default': '-1',
  'help': 'Number of classes to generate',
  'option': "['--ncls']",
  'type': 'int'},
 {'count': 7,
  'default': 'None',
  'help': 'postprocessor to be applied to the 3D volume once the '
          'reconstruction is completed. There can be more than one '
          'postprocessor, and they are applied in the order in which they are '
          'specified. See e2help.py processors for a complete list of '
          'available processors.',
  'option': "['--postprocess']",
  'type': 'str'},
 {'count': 7,
  'default': 'None',
  'help': 'A processor to apply to the particle data before classifying',
  'option': "['--process']",
  'type': 'str'},
 {'count': 7,
  'default': 'optsub:maxres=12',
  'help': "Default=auto. The name of a 'cmp' to be used in comparing the "
          'aligned images',
  'option': "['--simcmp']",
  'type': 'str'},
 {'count': 7,
  'default': '',
  'help': 'File containing a list of    tilt angles corresponding to the tilt '
          'angles of images 0 to n of an aligned   tilt series',
  'option': "['--tltfile']",
  'type': 'str'},
 {'count': 7,
  'default': 'False',
  'help': 'If set, the local filter is a tophat filter, otherwise a local '
          'Wiener filter is applied',
  'option': "['--tophat']",
  'type': 'None'},
 {'count': 6,
  'default': 'xform.center',
  'help': "If the default centering algorithm (xform.center) doesn't work "
          'well, you can specify one of the others here (e2help.py processor '
          "center), or the word 'nocenter' for no centering",
  'option': "['--center']",
  'type': 'str'},
 {'count': 6,
  'default': 'False',
  'help': 'Causes the keep argument to be interpreted in standard deviations.',
  'option': "['--keepsig']",
  'type': 'None'},
 {'count': 6,
  'default': 'tomobox',
  'help': 'Load previous contour segmentation.',
  'option': "['--label']",
  'type': 'str'},
 {'count': 6,
  'default': 'False',
  'help': 'Will generate a mirrored copy of the edited img2process.',
  'option': "['--mirror']",
  'type': 'None'},
 {'count': 6,
  'default': '-1',
  'help': 'Will use the first n basis images from the input, excluding the '
          'mean if present',
  'option': "['--nbasis']",
  'type': 'int'},
 {'count': 6,
  'default': 'False',
  'help': 'Include phase/amplitude contrast in CTF estimation. For use with '
          'hole-less phase plates.',
  'option': "['--phaseplate']",
  'type': 'None'},
 {'count': 6,
  'default': 'False',
  'help': 'Default=False. Turn this option on to generatea plot of the ccc '
          'scores during each iteration. Running on a cluster or via ssh '
          'remotely might not support plotting.',
  'option': "['--plots']",
  'type': 'None'},
 {'count': 6,
  'default': 'False',
  'help': 'Filter each reference (c) to match the power spectrum of each '
          'particle (r) before alignment and comparison',
  'option': "['--prefilt']",
  'type': 'None'},
 {'count': 6,
  'default': '0',
  'help': "Default=0 (which means it's not used by default). Hydrodynamic "
          'radius of the particle in Angstroms. This will be used to '
          'automatically calculate the angular steps to use in search of the '
          "best alignment. Make sure the apix is correct on the particles' "
          'headers, sine the radius will be converted from Angstroms to '
          'pixels. Then, the fine angular step is equal to 360/(2*pi*radius), '
          'and the coarse angular step 4 times that.',
  'option': "['--radius']",
  'type': 'float'},
 {'count': 6,
  'default': 'rotate_translate_flip',
  'help': "Default=auto. The name of an 'aligner' to use prior to comparing "
          'the images',
  'option': "['--simalign']",
  'type': 'str'},
 {'count': 6,
  'default': '0,1',
  'help': 'Specify <init>,<step>[,<max>]. Processes only a subset of the input '
          'data. For example, 0,2 would process only the even numbered '
          'particles',
  'option': "['--step']",
  'type': 'str'},
 {'count': 5,
  'default': 'rotate_translate_tree',
  'help': 'If doing more than one iteration, this is the name and parameters '
          "of the 'aligner' used to align particles to the previous class "
          'average.',
  'option': "['--classalign']",
  'type': 'str'},
 {'count': 5,
  'default': 'ccc',
  'help': 'This is the name and parameters of the comparitor used by the fist '
          'stage aligner  Default is dot.',
  'option': "['--classaligncmp']",
  'type': 'str'},
 {'count': 5,
  'default': 'ctf.weight.autofilt',
  'help': 'The averager used to generate the class averages. Default is '
          "'mean'.",
  'option': "['--classaverager']",
  'type': 'str'},
 {'count': 5,
  'default': 'ccc',
  'help': 'The name and parameters of the comparitor used to generate '
          "similarity scores, when class averaging. Default is ccc'",
  'option': "['--classcmp']",
  'type': 'str'},
 {'count': 5,
  'default': '5',
  'help': 'Number of iterations to use when making class-averages (default=5)',
  'option': "['--classiter']",
  'type': 'int'},
 {'count': 5,
  'default': '0.85',
  'help': 'The fraction of particles to keep in each class, based on the '
          'similarity score generated by the --cmp argument (default=0.85).',
  'option': "['--classkeep']",
  'type': 'float'},
 {'count': 5,
  'default': 'False',
  'help': "Change the keep ('--keep') criterion from fraction-based to "
          'sigma-based.',
  'option': "['--classkeepsig']",
  'type': 'None'},
 {'count': 5,
  'default': 'None',
  'help': 'The name of the classification matrix specifying how particles in '
          "'input' should be grouped. If omitted, all particles will be "
          'averaged.',
  'option': "['--classmx']",
  'type': 'str'},
 {'count': 5,
  'default': 'normalize.edgemean',
  'help': 'Normalization applied during class averaging',
  'option': "['--classnormproc']",
  'type': 'str'},
 {'count': 5,
  'default': 'None',
  'help': 'The second stage aligner which refines the results of the first '
          'alignment in class averaging. Default is None.',
  'option': "['--classralign']",
  'type': 'str'},
 {'count': 5,
  'default': 'ccc',
  'help': 'The comparitor used by the second stage aligner in class '
          'averageing. Default is dot:normalize=1.',
  'option': "['--classraligncmp']",
  'type': 'str'},
 {'count': 5,
  'default': '10000',
  'help': '(Expert Option) Defocus in A',
  'option': "['--defocus']",
  'type': 'float'},
 {'count': 5,
  'default': '4',
  'help': 'Maximum autofit defocus',
  'option': "['--defocusmax']",
  'type': 'float'},
 {'count': 5,
  'default': '0.6',
  'help': 'Minimum autofit defocus',
  'option': "['--defocusmin']",
  'type': 'float'},
 {'count': 5,
  'default': 'False',
  'help': 'Will use even/odd refs corresponding to specified reference to '
          'continue refining without phase randomizing again',
  'option': "['--goldcontinue']",
  'type': 'None'},
 {'count': 5,
  'default': '0.0001',
  'help': 'learning rate for model training only. Default is 1e-4.',
  'option': "['--learnrate']",
  'type': 'float'},
 {'count': 5,
  'default': 'None',
  'help': 'Mask file applied to 3D alignment reference in each iteration. Not '
          'applied to the average, which will follow normal masking routine.',
  'option': "['--maskalign']",
  'type': 'str'},
 {'count': 5,
  'default': '30',
  'help': 'Maximum angular difference for the refine mode. default is 30',
  'option': "['--maxang']",
  'type': 'float'},
 {'count': 5,
  'default': '90',
  'help': 'Explicitly zeroes data beyond specified tilt angle. Assumes tilt '
          'axis exactly on Y and zero tilt in X-Y plane. Default 90 (no '
          'limit).',
  'option': "['--maxtilt']",
  'type': 'float'},
 {'count': 5,
  'default': '',
  'help': 'load from an existing model file',
  'option': "['--model']",
  'type': 'str'},
 {'count': 5,
  'default': 'None',
  'help': 'Multiply image by a constant. mult=-1 to invert contrast.',
  'option': "['--mult']",
  'type': 'float'},
 {'count': 5,
  'default': 'False',
  'help': 'Turns file checking off in the check functionality - used by '
          'e2refine.py.',
  'option': "['--nofilecheck']",
  'type': 'None'},
 {'count': 5,
  'default': 'eman:delta=9.0:inc_mirror=0:perturb=1',
  'help': 'The type of orientation generator. Default is '
          'eman:delta=9.0:inc_mirror=0:perturb=1. See e2help.py orientgens',
  'option': "['--orientgen']",
  'type': 'str'},
 {'count': 5,
  'default': 'float',
  'help': 'All EMAN2 programs write images with 4-byte floating point values '
          'when possible by default. This allows specifying an alternate '
          'format when supported (float, int8, int16, int32, uint8, uint16, '
          'uint32). Values are rescaled to fill MIN-MAX range.',
  'option': "['--outmode']",
  'type': 'str'},
 {'count': 5,
  'default': '',
  'help': "Default=None. A processor (see 'e2help.py processors -v 10' at the "
          'command line) to be applied to the raw particle after alignment but '
          'before averaging (for example, a threshold to exclude extreme '
          'values, or a highphass filter if you have phaseplate data.)',
  'option': "['--preavgproc1']",
  'type': 'str'},
 {'count': 5,
  'default': '',
  'help': "Default=None. A processor (see 'e2help.py processors -v 10' at the "
          'command line) to be applied to the raw particle after alignment but '
          'before averaging (for example, a threshold to exclude extreme '
          'values, or a highphass filter if you have phaseplate data.)',
  'option': "['--preavgproc2']",
  'type': 'str'},
 {'count': 5,
  'default': 'None',
  'help': 'particle input',
  'option': "['--ptclin']",
  'type': 'str'},
 {'count': 5,
  'default': 'None',
  'help': 'Specify a refinement directory as an alternative to providing '
          'classmx files. Even and odd subsets will be interleaved based on '
          'input set.',
  'option': "['--refine']",
  'type': 'None'},
 {'count': 5,
  'default': '2.8',
  'help': 'Resolution in A, equivalent to Gaussian lowpass with 1/e width at '
          '1/res',
  'option': "['--res']",
  'type': 'float'},
 {'count': 5,
  'default': 'False',
  'help': 'Default=False. If set, will save the average after each iteration '
          'to class_#.hdf. Each class in a separate file. Appends to existing '
          'files.',
  'option': "['--savesteps']",
  'type': 'None'},
 {'count': 5,
  'default': 'None',
  'help': 'Scale by specified scaling factor. Clip must also be specified to '
          'change the dimensions of the output map.',
  'option': "['--scale']",
  'type': 'float'},
 {'count': 5,
  'default': '10',
  'help': 'maximum extent of the translational search, default=10',
  'option': "['--search']",
  'type': 'int'},
 {'count': 5,
  'default': 'ccc',
  'help': 'Default=auto. Name of the aligner along with its construction '
          'arguments',
  'option': "['--simaligncmp']",
  'type': 'str'},
 {'count': 5,
  'default': 'None',
  'help': 'Default=auto. The name and parameters of the second stage aligner '
          'which refines the results of the first alignment',
  'option': "['--simralign']",
  'type': 'str'},
 {'count': 5,
  'default': 'ccc',
  'help': 'Default=auto. The name and parameters of the comparitor used by the '
          'second stage aligner.',
  'option': "['--simraligncmp']",
  'type': 'str'},
 {'count': 5,
  'default': '40',
  'help': 'smoothing factor for subtlt.',
  'option': "['--smooth']",
  'type': 'float'},
 {'count': 5,
  'default': '60',
  'help': 'Maximum angular value at which the highest tilt picture will be '
          'simulated. Projections will be simulated from -tiltrange to '
          '+titlrange. For example, if simulating a tilt series collected from '
          '-60 to 60 degrees, enter a --tiltrange value of 60. Note that this '
          'parameter will determine the size of the missing wedge.',
  'option': "['--tiltrange']",
  'type': 'float'},
 {'count': 5,
  'default': '',
  'help': 'Aligned tilt series. File format must be MRC and must have .mrc or '
          '.st or .ali extension.',
  'option': "['--tiltseries']",
  'type': 'str'},
 {'count': 5,
  'default': 'False',
  'help': 'If checked, aligned frames will be placed in a tiltseries located '
          "in the 'tiltseries' directory. Otherwise, aligned sums will "
          "populate the 'micrographs_mrc' directory.",
  'option': "['--tomo']",
  'type': 'None'},
 {'count': 5,
  'default': 'False',
  'help': 'translational alignment only, for prealigned particles',
  'option': "['--transonly']",
  'type': 'None'},
 {'count': 5,
  'default': 'False',
  'help': 'WARNING: BUGGY. This will perform a final alignment with no '
          'downsampling [without using --shrink or --shrinkfine] if '
          '--shrinkfine > 1.',
  'option': "['--tweak']",
  'type': 'None'},
 {'count': 5,
  'default': '0',
  'help': 'verbose level [0-9], higher number means higher level of '
          'verboseness',
  'option': "['--verbose']",
  'type': 'int'},
 {'count': 5,
  'default': 'False',
  'help': 'Default=False. This option will weigh the contribution of each '
          'subtomogram to the average by score/bestscore.',
  'option': "['--weighbyscore']",
  'type': 'None'},
 {'count': 5,
  'default': '',
  'help': 'Default=None. A,B, where A is an integer number and B a decimal. A '
          'represents the location of the tilt axis in the tomogram in pixels '
          '(eg.g, for a 4096x4096xZ tomogram, this value should be 2048), and '
          'B is the weight of the particles furthest from the tomogram. For '
          'example, --weighbytiltaxis=2048,0.5 means that praticles at the '
          'tilt axis (with an x coordinate of 2048) will have a weight of 1.0 '
          'during averaging, while the distance in the x coordinates of '
          'particles not-on the tilt axis will be used to weigh their '
          'contribution to the average, with particles at the edge(0+radius or '
          '4096-radius) weighing 0.5, as specified by the value provided for '
          'B.',
  'option': "['--weighbytiltaxis']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'Will process all particle stacks stored in the particles '
          'subdirectory (if specified, list of files will be ignored)',
  'option': "['--allparticles']",
  'type': 'None'},
 {'count': 4,
  'default': '0.1',
  'help': '(Expert Option) Amplitude Constrast. 10%% = .1',
  'option': "['--ampcont']",
  'type': 'float'},
 {'count': 4,
  'default': 'False',
  'help': 'Includes astigmatism in automatic fitting',
  'option': "['--astigmatism']",
  'type': 'None'},
 {'count': 4,
  'default': '',
  'help': 'Default=None. Autocenters each averaged pair during initial average '
          'generation with --btref and --hacref. Will also autocenter the '
          'average of all particles after each iteration of iterative '
          'refinement. Options are --autocenter=xform.centerofmass (self '
          'descriptive), or --autocenter=xform.centeracf, which applies '
          'auto-convolution on the average.',
  'option': "['--autocenter']",
  'type': 'str'},
 {'count': 4,
  'default': 'None',
  'help': 'Default=auto. Specify as a processor, eg - '
          'mask.auto3d:threshold=1.1:radius=30:nshells=5:nshellsgauss=5.',
  'option': "['--automask3d']",
  'type': 'str'},
 {'count': 4,
  'default': '-1',
  'help': 'Number of voxels of post-threshold expansion in the mask, for use '
          'when peripheral features are truncated. (default=shrunk boxsize/20)',
  'option': "['--automaskexpand']",
  'type': 'int'},
 {'count': 4,
  'default': 'False',
  'help': 'Average the particles within each class',
  'option': "['--average']",
  'type': 'None'},
 {'count': 4,
  'default': '0',
  'help': 'Box size in pixels',
  'option': "['--box']",
  'type': 'int'},
 {'count': 4,
  'default': '32',
  'help': 'Box size',
  'option': "['--boxsz']",
  'type': 'int'},
 {'count': 4,
  'default': 'None',
  'help': 'Generate class-averages directly. No bad particle exclusion or '
          'iteration. Specify filename.',
  'option': "['--classes']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'Use the setsfref option in class averaging to produce better '
          'filtered averages.',
  'option': "['--classrefsf']",
  'type': 'None'},
 {'count': 4,
  'default': '0.143',
  'help': 'fsc cutoff. default is 0.143',
  'option': "['--cutoff']",
  'type': 'float'},
 {'count': 4,
  'default': 'False',
  'help': 'Used by EMAN2 when running eotests. Includes only even numbered '
          'particles in class averages.',
  'option': "['--even']",
  'type': 'None'},
 {'count': 4,
  'default': 'None',
  'help': 'Default=None. This is the second stage aligner used to fine-tune '
          'the first alignment.',
  'option': "['--falign']",
  'type': 'str'},
 {'count': 4,
  'default': 'ccc.tomo.thresh',
  'help': 'Default=ccc.tomo.thresh. The comparator used by the second stage '
          'aligner.',
  'option': "['--faligncmp']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'Force refitting of CTF from scratch, ignoring any previous fits.',
  'option': "['--fromscratch']",
  'type': 'None'},
 {'count': 4,
  'default': '',
  'help': "Default=None. A highpass filtering processor (see 'e2help.py "
          "processors -v 10' at the command line) to be applied to each volume "
          'prior to FINE alignment. Not applied to aligned particles before '
          'averaging.',
  'option': "['--highpassfine']",
  'type': 'str'},
 {'count': 4,
  'default': '-1',
  'help': 'Last image to include in the plot.',
  'option': "['--last']",
  'type': 'int'},
 {'count': 4,
  'default': 'False',
  'help': 'Causes images to be loaded as needed to reduce memory usage at the '
          'cost of time.',
  'option': "['--lowmem']",
  'type': 'None'},
 {'count': 4,
  'default': '',
  'help': "Default=None. A lowpass filtering processor (see 'e2help.py "
          "processors -v 10' at the command line) to be applied to each volume "
          'prior to FINE alignment. Not applied to aligned particles before '
          'averaging.',
  'option': "['--lowpassfine']",
  'type': 'str'},
 {'count': 4,
  'default': 'None',
  'help': 'Default=none. An arbitrary post-processor to run after all other '
          'automatic processing. Maps are autofiltered, so a low-pass filter '
          'should not normally be used here.',
  'option': "['--m3dpostprocess']",
  'type': 'str'},
 {'count': 4,
  'default': '180',
  'help': 'Maximum alignment altitude to include. Deafult=180',
  'option': "['--maxalt']",
  'type': 'float'},
 {'count': 4,
  'default': 'None',
  'help': 'Multiplies the volume by another volume of identical size. This can '
          'be used to apply masks, etc.',
  'option': "['--multfile']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'This argument turns automatic weighting off causing all images to '
          'be weighted by 1. If this argument is not specified images inserted '
          'into the reconstructed volume are weighted by the number of '
          'particles that contributed to them (i.e. as in class averages), '
          'which is extracted from the image header (as the ptcl_repr '
          'attribute).',
  'option': "['--no_wt']",
  'type': 'None'},
 {'count': 4,
  'default': 'False',
  'help': "Normalize the projections resulting from 'project', such that the "
          'length of each vector is 1',
  'option': "['--normproj']",
  'type': 'None'},
 {'count': 4,
  'default': '4',
  'help': 'Default=1. The number of best coarse alignments to refine in search '
          'of the best final alignment. Default=1.',
  'option': "['--npeakstorefine']",
  'type': 'int'},
 {'count': 4,
  'default': 'None',
  'help': 'Defines the dimensions (x,y,z) or (x,x,x) of the final volume '
          'written to disk, if ommitted, size will be based on unpadded input '
          'size',
  'option': "['--outsize']",
  'type': 'str'},
 {'count': 4,
  'default': '0',
  'help': 'Padding factor to zero-pad   the 2d images in the tilt series prior '
          'to reconstruction.   (The final reconstructed subvolumes will be '
          'cropped to the original size).',
  'option': "['--pad2d']",
  'type': 'float'},
 {'count': 4,
  'default': '0',
  'help': 'Padding factor to zero-pad   the reconstruction volume. (The final '
          'reconstructed subvolumes will be cropped to    the original size).',
  'option': "['--pad3d']",
  'type': 'float'},
 {'count': 4,
  'default': '1',
  'help': 'Default=1.0. Precision in pixels to use when figuring out alignment '
          'parameters automatically using --radius. Precision would be the '
          'number of pixels that the the edge of the specimen is moved '
          '(rotationally) during the finest sampling, --falign. If precision '
          'is 1, then the precision of alignment will be that of the sampling '
          '(apix of your images) times the --shrinkfine factor specified.',
  'option': "['--precision']",
  'type': 'float'},
 {'count': 4,
  'default': 'False',
  'help': 'Apply particle CTF to each reference before alignment',
  'option': "['--prectf']",
  'type': 'None'},
 {'count': 4,
  'default': '',
  'help': "Any processor (see 'e2help.py processors -v 10' at the command "
          'line) to be applied to each volume prior to FINE alignment. Not '
          'applied to aligned particles before averaging.',
  'option': "['--preprocessfine']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'If you supply this parameters, particles for fine alignment will be '
          'preprocessed identically to particles for coarse alignment by '
          'default. If you supply this, but want specific parameters for '
          'preprocessing particles for also supply: fine alignment, nd supply '
          'fine alignment parameters, such as --lowpassfine, --highpassfine, '
          'etc; to preprocess the particles for FINE alignment differently '
          'than for COARSE alignment.',
  'option': "['--procfinelikecoarse']",
  'type': 'None'},
 {'count': 4,
  'default': 'None',
  'help': 'particle output',
  'option': "['--ptclout']",
  'type': 'str'},
 {'count': 4,
  'default': 'False',
  'help': 'Default=False. This parameter is EXPERIMENTAL. It randomizes the '
          'position of the particles BEFORE alignment, to minimize missing '
          'wedge bias and artifacts during symmetric alignment where only a '
          'fraction of space is scanned',
  'option': "['--randomizewedge']",
  'type': 'None'},
 {'count': 4,
  'default': 'fourier',
  'help': 'Reconstructor to use see e2help.py reconstructors -v. Default is '
          'fourier:mode=gauss_2',
  'option': "['--recon']",
  'type': 'None'},
 {'count': 4,
  'default': 'fourier:mode=gauss_2',
  'help': 'Default=fourier:mode=gauss_2. The reconstructor to use to '
          "reconstruct the tilt series into a tomogram. Type 'e2help.py "
          "reconstructors' at the command line to see all options and "
          'parameters available. To specify the interpolation scheme for the '
          "fourier reconstruction, specify 'mode'. Options are "
          "'nearest_neighbor', 'gauss_2', 'gauss_3', 'gauss_5', "
          "'gauss_5_slow', 'gypergeom_5', 'experimental'. For example "
          '--reconstructor=fourier:mode=gauss_5',
  'option': "['--reconstructor']",
  'type': 'str'},
 {'count': 4,
  'default': '8',
  'help': 'number of tests for refine mode. default is 8',
  'option': "['--refinentry']",
  'type': 'int'},
 {'count': 4,
  'default': '-1',
  'help': 'The specified target resolution to avoid underfiltering artifacts.',
  'option': "['--restarget']",
  'type': 'float'},
 {'count': 4,
  'default': 'False',
  'help': 'This will cause a check of the files in the current directory, and '
          "the refinement will resume after the last completed iteration. It's "
          'ok to alter other parameters.',
  'option': "['--resume']",
  'type': 'None'},
 {'count': 4,
  'default': 'False',
  'help': 'Default=False. If set, will save the alignment parameters after '
          'each iteration',
  'option': "['--saveallalign']",
  'type': 'None'},
 {'count': 4,
  'default': '2',
  'help': '"Default=2. During FINE alignment translational search in X, Y and '
          'Z, in pixels. Default=2. This WILL overwrite any search: provided '
          'through --falign, EXCEPT if you provide --searchfine=2, which is '
          'the default. In general, just avoid providing search twice (through '
          'here and through the fine aligner --falign). If you do, just be '
          'careful to make them consistent to minimize misinterpretation and '
          'error.',
  'option': "['--searchfine']",
  'type': 'int'},
 {'count': 4,
  'default': '1',
  'help': 'The number of classes a particle can contribute towards (default is '
          '1)',
  'option': "['--sep']",
  'type': 'int'},
 {'count': 4,
  'default': '1',
  'help': 'Default=1 (no shrinking). Optionally shrink the input volumes by an '
          'integer amount for refine alignment.',
  'option': "['--shrinkfine']",
  'type': 'int'},
 {'count': 4,
  'default': '_ptcls',
  'help': 'suffix which is appended to the names of output particle and '
          'coordinate files',
  'option': "['--suffix']",
  'type': 'str'},
 {'count': 4,
  'default': '512',
  'help': 'Tile size to use for strips   when --autofit is provided.',
  'option': "['--tilesize']",
  'type': 'int'},
 {'count': 4,
  'default': 'False',
  'help': 'Do a tiltaxis correction(Takes into account variations in tilt axis '
          'from micrograph to micrograph. Only possible if e2RCTboxer was used '
          'for particle picking',
  'option': "['--tiltaxis']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': "Adds a constant 'f' to the densities",
  'option': "['--add']",
  'type': 'float'},
 {'count': 3,
  'default': 'c1',
  'help': 'Symmetry to apply to the structure after classification.',
  'option': "['--applysym']",
  'type': 'str'},
 {'count': 3,
  'default': '',
  'help': 'Default=None. Masking processor to apply before autocentering. See '
          "'e2help.py processors -v 10' at the command line.",
  'option': "['--autocentermask']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=False. This will apply a highpass filter at a frequency of '
          'half the box size times the apix, shrink by 2, and apply a low pass '
          'filter at half nyquist frequency to any computed average for '
          'autocentering purposes if --autocenter is provided. Default=False.',
  'option': "['--autocenterpreprocess']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Applies a 2-D automask before centering. Can help with negative '
          'stain data, and other cases where centering is poor.',
  'option': "['--automask']",
  'type': 'None'},
 {'count': 3,
  'default': '1000',
  'help': 'Default=1000. Bfactor or   temperature factor to use. Supply it to '
          'replace the value   in ctfparamsfile(s), or if ctfparamsfile(s) are '
          'lacking altogether.',
  'option': "['--bfactor']",
  'type': 'int'},
 {'count': 3,
  'default': 'False',
  'help': 'Compare using the difference of the two children',
  'option': "['--cmpdiff']",
  'type': 'None'},
 {'count': 3,
  'default': '-1',
  'help': 'Set B-factor to fixed specified value, negative value autofits',
  'option': "['--constbfactor']",
  'type': 'float'},
 {'count': 3,
  'default': '',
  'help': 'Specify box file with x and y gold coordinates. Must follow '
          'standard box file format (x<tab>y<tab>xsize<ysize>) although box '
          'sizes are ignored.',
  'option': "['--coords']",
  'type': 'str'},
 {'count': 3,
  'default': '0',
  'help': 'If the tomogram was PREVIOUSLY shrunk, --cshrink is the factor by '
          'which the tomogram supplied through --tomogram was shrunk with '
          'respect to                the raw (unshrunk) tomogram. This CAN '
          'work in conjuction with --shrinktomo, so be careful. If both '
          'parameters are specified,               the coordinates found by '
          'the autoboxer will be multiplied by BOTH factors.',
  'option': "['--cshrink']",
  'type': 'int'},
 {'count': 3,
  'default': 'False',
  'help': 'Use CUDA for the alignment step.',
  'option': "['--cuda']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Fixes the defocus at the current determined value (if any) (+-.001 '
          'um), but recomputes SSNR, etc.',
  'option': "['--curdefocusfix']",
  'type': 'None'},
 {'count': 3,
  'default': '30',
  'help': 'step size for the orientation generator, default=30.0',
  'option': "['--delta']",
  'type': 'float'},
 {'count': 3,
  'default': 'cpu',
  'help': 'For Convnet training only. Pick a device to use. chose from cpu, '
          'gpu, or gpuX (X=0,1,...) when multiple gpus are available. default '
          'is cpu',
  'option': "['--device']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'If set, will also produce a .txt file for plotting with all of the '
          'per-particle statistics',
  'option': "['--extract']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'If particles were boxed more tightly than EMAN requires, this will '
          'add some extra padding, but only to processed output particles',
  'option': "['--extrapad']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=False. If on, this parameter will use dynamic FSC '
          'filtering. --lowpass will be used to build initial references if no '
          '--ref supplied, then, the FSC between the even and odd initial '
          'references will be used to filter the data during preprocessing. If '
          '--ref is supplied, --lowpass will be used during the first '
          'iteration to align the particles against the reference. Thereafter, '
          'the FSC between the most current particle average and the original '
          'reference (--ref) will be used in the next iteration.',
  'option': "['--filterbyfsc']",
  'type': 'None'},
 {'count': 3,
  'default': '-1',
  'help': 'First image to include in the plot.',
  'option': "['--first']",
  'type': 'int'},
 {'count': 3,
  'default': 'None',
  'help': "This generates rotational/translational 'footprints' for each input "
          'particle, the number indicates which algorithm to use (0-6)',
  'option': "['--fp']",
  'type': 'int'},
 {'count': 3,
  'default': '0',
  'help': 'If specified, will phase randomize the even and odd references past '
          'the specified resolution (in A, not 1/A)',
  'option': "['--goldstandard']",
  'type': 'float'},
 {'count': 3,
  'default': '',
  'help': 'Specify the gpu to use',
  'option': "['--gpuid']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'only works if --create is supplied. comma-separated list of indexes '
          'to take from the input file(s) to INCLUDE in the created .lst file. '
          'if you have the list of indexes to include in a .txt file, you can '
          'provide it through --list.',
  'option': "['--include']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'If the class-averages have the model_id parameter (produced by '
          'e2refinemulti.py), this will use only class-averages with the '
          'specified model_id for the reconstruction.',
  'option': "['--input_model']",
  'type': 'None'},
 {'count': 3,
  'default': 'auto',
  'help': 'Which type of invariants to generate: (bispec,harmonic)',
  'option': "['--invartype']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Specify the name of a file with a list of images to use in creation '
          'of virtual stacks. Please see source for details.',
  'option': "['--list']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'Load previous contour segmentation.',
  'option': "['--load']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'previous 3d alignment',
  'option': "['--loadali3d']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'local refinement',
  'option': "['--localrefine']",
  'type': 'None'},
 {'count': 3,
  'default': '0.8',
  'help': 'The fraction of slices to keep in e2make3d.py. Default=0.8 -> 80%%',
  'option': "['--m3dkeep']",
  'type': 'float'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=auto. The standard deviation alternative to the --m3dkeep '
          'argument',
  'option': "['--m3dkeepsig']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Default=auto. Normalization processor applied before 3D '
          'reconstruction',
  'option': "['--m3dpreprocess']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=False. Applies filter.matchto to one image so that it '
          "matches the other's spectral profile during preprocessing for "
          'pair-wise alignment purposes.',
  'option': "['--matchimgs']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Reduce an image size by an integral (1.5 also allowed) scaling '
          'factor using average. eg - 2 will reduce image size to 1/2. Clip is '
          'not required.',
  'option': "['--meanshrink']",
  'type': 'float'},
 {'count': 3,
  'default': 'None',
  'help': 'Reduce an image size by an integral scaling factor, uses median '
          'filter. eg - 2 will reduce image size to 1/2. Clip is not required.',
  'option': "['--medianshrink']",
  'type': 'int'},
 {'count': 3,
  'default': 'False',
  'help': 'This will merge the contents of BDB 2-N into BDB 1 (including BDB '
          "1's contents)",
  'option': "['--merge']",
  'type': 'None'},
 {'count': 3,
  'default': '0',
  'help': 'Minimum alignment altitude to include. Default=0',
  'option': "['--minalt']",
  'type': 'float'},
 {'count': 3,
  'default': '0',
  'help': 'Files with fewer than the specified number of particles will be '
          'skipped',
  'option': "['--minptcl']",
  'type': 'int'},
 {'count': 3,
  'default': '0',
  'help': 'Files with a quality value lower than specified will be skipped',
  'option': "['--minqual']",
  'type': 'int'},
 {'count': 3,
  'default': '12',
  'help': 'Only used in MSA mode. Number of MSA basis vectors to use when '
          'classifying particles, default=12',
  'option': "['--nbasisfp']",
  'type': 'int'},
 {'count': 3,
  'default': '0',
  'help': 'Default=0 (not used). Total number of particles to keep right '
          'before writing the coordinates file and output stack. Supersedes '
          '--keep',
  'option': "['--nkeep']",
  'type': 'int'},
 {'count': 3,
  'default': 'False',
  'help': 'Average of non-aligned frames.',
  'option': "['--noali']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=False. Turn off recording of the command ran for this '
          'program onto the .eman2log.txt file',
  'option': "['--nolog']",
  'type': 'None'},
 {'count': 3,
  'default': 'normalize.edgemean',
  'help': 'Normalization processor to apply to written particle images. Should '
          'be normalize, normalize.edgemean,etc.Specifc "None" to turn this '
          'off',
  'option': "['--norm']",
  'type': 'str'},
 {'count': 3,
  'default': '-1',
  'help': 'duplicate the first ref N times with phase randomization at 2xres',
  'option': "['--nref']",
  'type': 'int'},
 {'count': 3,
  'default': 'False',
  'help': 'Used by EMAN2 when running eotests. Includes only odd numbered '
          'particles in class averages.',
  'option': "['--odd']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Applies an automatic threshold to the volume before projecting',
  'option': "['--prethreshold']",
  'type': 'None'},
 {'count': 3,
  'default': 'standard',
  'help': 'Projector to use',
  'option': "['--projector']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Class average or particles input.',
  'option': "['--ptcls']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'randomly add a 180 degree rotation during refine alignment',
  'option': "['--rand180']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Randomly rotate/translate the image. Specify: da,dxy,flip  da is a '
          'uniform distribution over +-da degrees, dxy is a uniform '
          'distribution on x/y, if flip is 1, random handedness changes will '
          'occur',
  'option': "['--randomize']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'randomize phi during refine alignment',
  'option': "['--randphi']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Specify <minval>,<maxval> representing the largest and smallest '
          'values to be saved in the output file. Automatic if unspecified.',
  'option': "['--range']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'Specify an imod/serialem rawtlt file, and imported tilt series will '
          "be sorted in tilt sequence instead of collection sequence, 'auto' "
          'will attempt to find a .tlt file automatically',
  'option': "['--rawtlt']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Replace the input subtomograms used for alignment with the '
          'specified file (used when the aligned particles were masked or '
          'filtered)',
  'option': "['--replace']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'Rotate clockwise (in degrees)',
  'option': "['--rotate']",
  'type': 'float'},
 {'count': 3,
  'default': 'False',
  'help': 'Default=False. Will save stacks of preprocessed particles (one for '
          'coarse alignment and one for fine alignment if preprocessing '
          'options are different).',
  'option': "['--savepreproc']",
  'type': 'None'},
 {'count': 3,
  'default': 'None',
  'help': 'Output file will be a 180x180 self-common lines map for each image.',
  'option': "['--selfcl']",
  'type': 'int'},
 {'count': 3,
  'default': '0',
  'help': 'The level of shrinking to apply in the first stage of the two-stage '
          'classification process. Default=0 (autoselect)',
  'option': "['--shrinks1']",
  'type': 'int'},
 {'count': 3,
  'default': 'None',
  'help': 'Default=auto. A file containing a single 0/1 image to apply as a '
          'mask before comparison but after alignment',
  'option': "['--simmask']",
  'type': 'str'},
 {'count': 3,
  'default': '-0.1',
  'help': "Similarity is smaller for better 'quality' particles. Specify the "
          'highest value to include from e2spt_hist.py. Default -0.1',
  'option': "['--simthr']",
  'type': 'float'},
 {'count': 3,
  'default': 'False',
  'help': 'skip alignment. the program will do nothing. mostly for testing...',
  'option': "['--skipali']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'symcopy',
  'option': "['--symcopy']",
  'type': 'None'},
 {'count': 3,
  'default': '20',
  'help': 'Target resolution',
  'option': "['--targetres']",
  'type': 'float'},
 {'count': 3,
  'default': '',
  'help': 'File in .tlt or .txt format containing the tilt angle of each tilt '
          'image in the tiltseries.',
  'option': "['--tiltangles']",
  'type': 'str'},
 {'count': 3,
  'default': 'None',
  'help': 'Translate by x,y pixels',
  'option': "['--translate']",
  'type': 'str'},
 {'count': 3,
  'default': 'False',
  'help': 'use projection of 3d particles instead of 2d sub tilt series',
  'option': "['--use3d']",
  'type': 'None'},
 {'count': 3,
  'default': 'False',
  'help': 'Write particles to disk',
  'option': "['--write_ptcls']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Add all images from micrographs folder',
  'option': "['--allmicrographs']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Use all tilt series in the folder. Acceptable file extensions '
          'include hdf, mrc, mrcs, st.',
  'option': "['--alltiltseries']",
  'type': 'None'},
 {'count': 2,
  'default': 'auto',
  'help': 'Will perform amplitude correction via the specified method.  '
          "'flatten' requires a target resolution better than 8 angstroms "
          "(experimental). 'none' will disable amplitude correction "
          '(experimental).',
  'option': "['--ampcorrect']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Default=None. The filename of the images will be split at any '
          "occurence of the following delimiters: '_', '-', '+', '[' , ']' , "
          "',' , ' ' (the two last ones are a comma and a blank space). "
          'Provide the index (position) of the angle in the split filename. '
          'For example, if the filename of an image is '
          '"my_specimen-oct-10-2015_-50_deg-from_k2 camera.mrc", it will be '
          'split into '
          "['my','specimen','oct','10','2015','','50','deg','from','k2','camera','mrc']. "
          "The angle '-50', is at position 6 (starting from 0). Therefore, you "
          'would provide --anglesindxinfilename=6, assuming all images to be '
          'stacked/processed are similarly named. No worries about the minus '
          "sign disappearing. The program will look at whether there's a minus "
          'sign immediately preceeding the position where the angle info is.',
  'option': "['--anglesindxinfilename']",
  'type': 'int'},
 {'count': 2,
  'default': 'None',
  'help': 'Anisotropic scaling, stretches on one axis and compresses the '
          'orthogonal axis. Specify amount,angle. See e2evalrefine',
  'option': "['--anisotropic']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Append to the output file',
  'option': "['--append']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Runs automated CTF fitting on the input images',
  'option': "['--autofit']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Default=none. If specified, this mask will be multiplied by the '
          'result of the first mask, eg - using mask.soft to mask out the '
          'center of a virus.',
  'option': "['--automask3d2']",
  'type': 'str'},
 {'count': 2,
  'default': '10',
  'help': 'Batch size of stochastic gradient desent. N particles are randomly '
          'selected to generate an initial model at each step.',
  'option': "['--batchsize']",
  'type': 'int'},
 {'count': 2,
  'default': '0',
  'help': 'beta in imagic convention.',
  'option': "['--beta']",
  'type': 'float'},
 {'count': 2,
  'default': '100',
  'help': 'Number of bins to use in the histogram',
  'option': "['--bins']",
  'type': 'int'},
 {'count': 2,
  'default': 'None',
  'help': 'the symmetry to use for breaksym. setting sym to c6 and this to c2 '
          'results in a c3 structure. default is the same as sym',
  'option': "['--breaksymsym']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': "String list of chain identifiers to include, eg 'ABEFG'",
  'option': "['--chains']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'This will apply an automask to the class-average during iterative '
          'alignment for better accuracy. The final class averages are '
          'unmasked.',
  'option': "['--classautomask']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'File containing one mask for each column (projection) image, to be '
          'used when refining row (particle) image alignments.',
  'option': "['--colmasks']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': '(T/F)Do CTF Correction?',
  'option': "['--ctfcorrect']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Rather than doing the defocus from scratch, use existing values in '
          'the project as a starting point',
  'option': "['--curdefocushint']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': '.',
  'option': "['--curve']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Use this dark reference.',
  'option': "['--dark']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': '(T/F)Has the data been phase flipped already?',
  'option': "['--dataphaseflipped']",
  'type': 'None'},
 {'count': 2,
  'default': '5',
  'help': 'Set maximum possible defocus value (positive is underfocus).',
  'option': "['--dfmax']",
  'type': 'float'},
 {'count': 2,
  'default': '0.5',
  'help': 'Set minimum possible defocus value (positive is underfocus).',
  'option': "['--dfmin']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'only make 1 batch of subtomograms for testing',
  'option': "['--dotest']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': "List contents of an entire database, eg 'e2bdb.py -D "
          'refine_01#register',
  'option': "['--dump']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Load fixed fragment file; one sequence of forced connections per '
          'line, separated by space.',
  'option': "['--edgefile']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Exclude bad particles.',
  'option': "['--excludebad']",
  'type': 'None'},
 {'count': 2,
  'default': 'dm3',
  'help': 'Extension of the micrographs that the boxes match',
  'option': "['--extension']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Will seed the k-means loop quickly, but may produce lest consistent '
          'results.',
  'option': "['--fastseed']",
  'type': 'None'},
 {'count': 2,
  'default': '0.02',
  'help': 'Fiter map to frequency after each iteration. Default is 0.02',
  'option': "['--filterto']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'When writing to an 8 or 16 bit integer format the data must be '
          "scaled. 'noscale' will assume the pixel values are already correct, "
          "'full' will insure the full range of values are included in the "
          "output, 'sane' will pick a good range, a number will set the range "
          'to mean+=sigma*number',
  'option': "['--fixintscaling']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Name of a reference projection file to read 1st iteration refine '
          'alignment references from.',
  'option': "['--focused']",
  'type': 'str'},
 {'count': 2,
  'default': 'hdf',
  'help': 'Format of the output particles images, should be hdf',
  'option': "['--format']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Reduce an image size by an arbitrary scaling factor by clipping in '
          'Fourier space. eg - 2 will reduce image size to 1/2.',
  'option': "['--fouriershrink']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'Use this gain reference.',
  'option': "['--gain']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'use gaussian filter instead of tophat',
  'option': "['--gauss']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Before alignment, sum raw frames in groups of X to increase signal '
          'to noise ratio.',
  'option': "['--groupby']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'If particles are very close together, this will interfere with SSNR '
          'estimation. If set uses an alternative strategy, but may '
          'over-estimate SSNR.',
  'option': "['--highdensity']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Highest tilt angle. If not supplied, it will be assumed to be 1* '
          '--tiltrange.',
  'option': "['--highesttilt']",
  'type': 'float'},
 {'count': 2,
  'default': '0',
  'help': 'This corresponds   to the Z dimension in pixels of the '
          'reconstructed raw tomogram (uncropped), at the same binning   '
          '(sampling) as the provided tiltseries, images or subtiltseries.   '
          'This value MUST be provided, only if --subtiltsdir is given.',
  'option': "['--icethickness']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'If --subtiltsdir is provided (and if --icethickness is *not* '
          'provided), the thickness of the    specimen in Z will be calculated '
          'by computing the difference between the largest    and the smallest '
          'Z coordinate found in the header of the subtiltseries, plus the '
          'size of the specimen, calculated from --radius.',
  'option': "['--icethicknessauto']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': "(T/F)Ignore CTF's until the first peak?",
  'option': "['--ignoretofirstpeak']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Default=False. If on, this option will read the entire tomogram '
          "into memory. Much faster than reading 'from disk', but you must "
          'have enough RAM!',
  'option': "['--inmemory']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': "Output overwrites input, USE SAME FILENAME, DO NOT 'clip' images.",
  'option': "['--inplace']",
  'type': 'None'},
 {'count': 2,
  'default': '',
  'help': 'Default=None. Aligned tilt series. String common to all files to be '
          'processed, in the current folder. For example, if you have many '
          'subtiltseries named subt00.hdf, subt01.hdf, ...subt99.hdf, you '
          'would supply --stem=subt to have all these processed.',
  'option': "['--inputstem']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Will use invariants for orientation determination, set invariant '
          'type in project (EXPERIMENTAL).',
  'option': "['--invar']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Refinement iteration to plot',
  'option': "['--iteration']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'Uses iterative interpolation in Fourier space instead of single '
          'step gridding or interpolation. --mode and --usessnr are ignored '
          'with this option.',
  'option': "['--iterative']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Default=0. (Not used). The program is called to convergence by '
          'default (all particles merge into one final average). To stop at an '
          'intermediate iteration, provide this parameter. For example, '
          '--iterstop=1, will only allow the algorithm to complete 1 '
          'iteration; --iterstop=2 will allow it to go through 2, etc.',
  'option': "['--iterstop']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'If set, keep will refer to the absolute quality of the '
          'class-average, not a local quality relative to other similar sized '
          'classes.',
  'option': "['--keepabs']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Specify a filename containing a list of integer particle numbers to '
          'include in the average, one per line, first is 0. Additional '
          'exclusions may apply.',
  'option': "['--listfile']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'previous 2d alignment',
  'option': "['--loadali2d']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'use tophat local',
  'option': "['--localfilter']",
  'type': 'None'},
 {'count': 2,
  'default': '-1',
  'help': 'Size in pixels of the local region to compute the resolution in',
  'option': "['--localsize']",
  'type': 'int'},
 {'count': 2,
  'default': '0',
  'help': 'Lowest tilt angle. If not supplied, it will be assumed to be -1* '
          '--tiltrange.',
  'option': "['--lowesttilt']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'Default=auto. Name of a file containing a structure factor to apply '
          'after refinement',
  'option': "['--m3dsetsf']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Mask each reference before classification',
  'option': "['--maskclass']",
  'type': 'str'},
 {'count': 2,
  'default': '20',
  'help': 'Files with a defocus higher than specified will be skipped',
  'option': "['--maxdf']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'When an mdoc or idoc is provided, the raw files are automatically '
          'found within the input directory',
  'option': "['--mdoc']",
  'type': 'str'},
 {'count': 2,
  'default': '-1',
  'help': 'Minimum number of particles that change group before deicding to '
          'terminate. Default = len(data)/(#cls*25)',
  'option': "['--minchange']",
  'type': 'int'},
 {'count': 2,
  'default': '0',
  'help': 'Files with a defocus lower than specified will be skipped',
  'option': "['--mindf']",
  'type': 'float'},
 {'count': 2,
  'default': '0',
  'help': 'Integrated SNR from 1/10-1/4 1/A must be larger than this',
  'option': "['--minhisnr']",
  'type': 'float'},
 {'count': 2,
  'default': '0',
  'help': 'Integrated SNR from 1/200-1/20 1/A must be larger than this',
  'option': "['--minlosnr']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': "Enable MSA based classification, default=disabled, typically 'pca', "
          'see e2msa.py --mode option for full list',
  'option': "['--msamode']",
  'type': 'str'},
 {'count': 2,
  'default': '10',
  'help': 'Number of copies for NEGATIVE samples. (number of copies of '
          'particles is calculated accordingly)',
  'option': "['--ncopy']",
  'type': 'int'},
 {'count': 2,
  'default': '2',
  'help': 'The total number of different maps to generate. Specify with '
          '--model, but not with --models',
  'option': "['--nmodels']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'Ignore the alignments',
  'option': "['--noalign']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'If supplied, this option will save results in the directory where '
          'the command is run. A directory to store the results will not be '
          'made.',
  'option': "['--nopath']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Skip any input images which are marked as references (usually used '
          'with classes.*)',
  'option': "['--norefs']",
  'type': 'None'},
 {'count': 2,
  'default': 'normalize.unitlen',
  'help': 'Normalize the input images using the named processor. Specify '
          "'tomean' for mean-based scaling. Specify None to disable.",
  'option': "['--normalize']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': "Default=False. This will apply 'newstack -float 2' to the input "
          'stack. Requires IMOD. Does not apply to --unstack or --restack.',
  'option': "['--normalizeimod']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Default=True. This option prevents applying filter.match.to to one '
          "image so that it matches the other's spectral profile during "
          'preprocessing for alignment purposes.',
  'option': "['--notmatchimgs']",
  'type': 'None'},
 {'count': 2,
  'default': '500',
  'help': 'maximum number of particles',
  'option': "['--nptcl']",
  'type': 'int'},
 {'count': 2,
  'default': '61',
  'help': 'This will determine the tilt step between slices, depending on '
          'tiltrange. For example, to simulate a 2 deg tilt step supply '
          '--nslices=61 --tiltrange=60. Recall that --tiltrange goes from - to '
          '+ the supplied value, and that there is a central slice or '
          'projection at 0 deg, for symmetrical tilt series.',
  'option': "['--nslices']",
  'type': 'int'},
 {'count': 2,
  'default': '10',
  'help': 'Offset search range (pix)',
  'option': "['--offsetrange']",
  'type': 'float'},
 {'count': 2,
  'default': '2',
  'help': 'Offset search step (pix)',
  'option': "['--offsetstep']",
  'type': 'float'},
 {'count': 2,
  'default': 'e2proj.hdf',
  'help': "Output file. Default is 'e2proj.img'",
  'option': "['--outfile']",
  'type': 'None'},
 {'count': 2,
  'default': 'res143_filtered.hdf',
  'help': 'Output locally filtered average volume',
  'option': "['--outfilt']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Apply the local filter to the even map as well and write to '
          'specified file',
  'option': "['--outfilte']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Apply the local filter to the odd map as well and write to '
          'specified file',
  'option': "['--outfilto']",
  'type': 'str'},
 {'count': 2,
  'default': '',
  'help': 'Stem common to all   output image stacks. For example, if '
          '--outputstem=myvirus and --save2d is provided,    the phase-flipped '
          'images for each subtiltseries wille be saved to '
          'myvirus_subtiltptclXXXX.hdf.   If --save3d is provided, the stack '
          'of reconstructed subvolumes will be saved to myvirus_stack3d.hdf',
  'option': "['--outputstem']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': "output image format, 'mrc', 'imagic', 'hdf', etc. if specify "
          'spidersingle will output single 2D image rather than 2D stack.',
  'option': "['--outtype']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'overwrite even/odd input',
  'option': "['--overwrite']",
  'type': 'None'},
 {'count': 2,
  'default': '1.5',
  'help': 'pad by factor. default is 1.5',
  'option': "['--padby']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'Defines the dimensions (x,y,z) or (x,x,x) of the reconstructed '
          'volume. If ommitted, implied value based on padded 2D images is '
          'used.',
  'option': "['--padvol']",
  'type': 'str'},
 {'count': 2,
  'default': '-1',
  'help': 'Diameter of the soft circular image mask (in Angstroms)',
  'option': "['--particle_mask_diameter']",
  'type': 'float'},
 {'count': 2,
  'default': '',
  'help': 'This string will be appended to each set name to help differentiate '
          'the results from multiple runs',
  'option': "['--postfix']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'a file listing post transforms (see http://eman2.org/e2tomo_more), '
          'or for simple symmetry, <sym>,<cx>,<cy>,<cz> where the coordinates '
          'specify the center of a single subunit',
  'option': "['--postxf']",
  'type': 'str'},
 {'count': 2,
  'default': 'proc',
  'help': 'Tag added to the name of each particle when using the phaseflipproc '
          'options',
  'option': "['--proctag']",
  'type': 'None'},
 {'count': 2,
  'default': '',
  'help': 'particle input',
  'option': "['--ptcl']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Do Radon transform',
  'option': "['--radon']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Optionally randomize the phases of the initial model to this '
          'resolution (in Angstroms)',
  'option': "['--randomizemodel']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Align frames using previous alignment parameters.',
  'option': "['--realign']",
  'type': 'None'},
 {'count': 2,
  'default': '',
  'help': '3D reference for iterative alignment/averaging. No reference is '
          'used by default. <name> or <name>,#',
  'option': "['--reference', '--ref']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Reference used to align RCT recons to, needs to be aligned to '
          'symetry axis is --sym is specified',
  'option': "['--reference']",
  'type': 'str'},
 {'count': 2,
  'default': '1',
  'help': 'Mean angular variation for refine alignment',
  'option': "['--refineastep']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'Default=False. This will preprocess the reference identically to '
          'the particles. It is off by default, but it is internally turned on '
          'when no reference is supplied. It should probably be off when using '
          'a crystal structure (with all positive densities) turned to EM '
          'density as an initial model, but it should be on when using an EM '
          'map.',
  'option': "['--refpreprocess']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Default=0 (off). Resolution to phase randomize the reference to (or '
          'the two copies of the reference if --goldstandardoff is NOT '
          'supplied [gold standard refinement is on by default].',
  'option': "['--refrandphase']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'generates resolution plot with the last iteration of all refine_xx '
          'directories',
  'option': "['--resolution_all']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Computes the FSC between the last iteration of each refine_xx '
          'directory and a specified reference map. Map must be aligned, but '
          'will be rescaled if necessary.',
  'option': "['--resolution_vsref']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Specify an output image to store the result matrix. This contains 5 '
          'images where row is particle number. Rows in the first image '
          'contain the class numbers and in the second image consist of 1s or '
          '0s indicating whether or not the particle was included in the '
          'class. The corresponding rows in the third, fourth and fifth images '
          'are the refined x, y and angle (respectively) used in the final '
          'alignment, these are updated and accurate, even if the particle was '
          'excluded from the class.',
  'option': "['--resultmx']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'For JSON files where the keys are image name,# pairs, will change '
          'the __type value in the image name in all keys',
  'option': "['--retype']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'this is an experimental option',
  'option': "['--rfp']",
  'type': 'None'},
 {'count': 2,
  'default': '-1',
  'help': 'remove 2d particles with high contrast object beyond N sigma at '
          '100A. Note that this may result in generating fewer particles than '
          'selected. Default is -1 (include all particles). 0.5 might be a '
          'good choice for removing gold beads but may need some testing...',
  'option': "['--rmbeadthr']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'test scipy refinement',
  'option': "['--scipy']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'If specified this volume will be used as a starting point for the '
          'reconstruction, filling any missing values in Fourier space. '
          'experimental.',
  'option': "['--seedmap']",
  'type': 'str'},
 {'count': 2,
  'default': 'all',
  'help': 'Name of the stack to build',
  'option': "['--setname']",
  'type': 'str'},
 {'count': 2,
  'default': 'auto',
  'help': 'The name of a file containing a structure factor curve. Specify '
          "'none' to use the built in generic structure factor. Default=auto",
  'option': "['--sf']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Dense listing of names only',
  'option': "['--short']",
  'type': 'None'},
 {'count': 2,
  'default': '15',
  'help': 'number of neighboring particles used for smoothing. default 15',
  'option': "['--smoothN']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'Apply SNR filter as part of phase flipping.',
  'option': "['--snrfilt']",
  'type': 'None'},
 {'count': 2,
  'default': '',
  'help': 'Location of the mask to be used',
  'option': "['--solventmask']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'If set, output .lst file will be sorted. The default is to leave '
          'the output grouped by class-average. If (and only if) sorted, '
          'duplicate entries will be removed.',
  'option': "['--sort']",
  'type': 'None'},
 {'count': 2,
  'default': '5',
  'help': '(1-7) Balances speed vs precision. Larger values sacrifice a bit of '
          'potential resolution for significant speed increases. Set to 1 when '
          'really pushing resolution. Set to 7 for initial refinements. '
          'default=5',
  'option': "['--speed']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': '"Stack images found with the common string provided through '
          '--stem2stack, even if the number of images does not match the '
          'predicted number of tilt angles.',
  'option': "['--stackregardless']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'This is a starting model for FFT reconstruction',
  'option': "['--start']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'This will translationally realign each asymmetric unit to the '
          'specified (usually masked) reference',
  'option': "['--symalimasked']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Test for improved alignment with 180 degree rotations even during '
          'refine alignment',
  'option': "['--test180']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Phase Residual cutoff. Particles with a higher phase residual will '
          'not be included in the refinement',
  'option': "['--thresh']",
  'type': 'float'},
 {'count': 2,
  'default': 'None',
  'help': 'Name of the tilted dataset',
  'option': "['--tiltdata']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': "Write results to 'tiltseries' directory in current project.",
  'option': "['--tilts']",
  'type': 'None'},
 {'count': 2,
  'default': '',
  'help': 'Specify the name of the output tiltseries. A .mrc extension will be '
          'appended to the filename provided.',
  'option': "['--tiltseries_name']",
  'type': 'str'},
 {'count': 2,
  'default': '0',
  'help': 'Step between tilts. Required if using --stem2stack.',
  'option': "['--tiltstep']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'Report on the time required for each step of each refinement run',
  'option': "['--timing']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Report on the CPU time required in each refine_xx folder',
  'option': "['--timingbypath']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'An imod tlt file containing alignment angles. If specified slices '
          'will be inserted using these angles in the IMOD convention',
  'option': "['--tlt']",
  'type': 'str'},
 {'count': 2,
  'default': '1',
  'help': 'keep a fraction of tilt images with good score determined from '
          'tomogram reconstruction',
  'option': "['--tltkeep']",
  'type': 'float'},
 {'count': 2,
  'default': '',
  'help': 'Name of the tomogram.',
  'option': "['--tomogram']",
  'type': 'str'},
 {'count': 2,
  'default': '',
  'help': 'Comma separated list of tomograms with REC extension from which all '
          'particles in --stacks came from.',
  'option': "['--tomograms']",
  'type': 'str'},
 {'count': 2,
  'default': '0',
  'help': 'Translate map by dx,dy,dz',
  'option': "['--trans']",
  'type': 'str'},
 {'count': 2,
  'default': 'False',
  'help': 'Classify using a binary tree.',
  'option': "['--treeclassify']",
  'type': 'None'},
 {'count': 2,
  'default': '0',
  'help': 'Used only in binary tree classification. Incompleteness of the tree '
          'on each level.Default=0',
  'option': "['--treeincomplete']",
  'type': 'int'},
 {'count': 2,
  'default': 'False',
  'help': 'Output will be a multicolumn text file suitable for plotting',
  'option': "['--txtout']",
  'type': 'None'},
 {'count': 2,
  'default': 'None',
  'help': 'Name of the tilted dataset',
  'option': "['--untiltdata']",
  'type': 'str'},
 {'count': 2,
  'default': 'None',
  'help': 'Specify a particle data file that has been low pass or Wiener '
          'filtered. Has a one to one correspondence with your particle data. '
          'If specified will be used to align particles to the running class '
          'average, however the original particle will be used to generate the '
          'actual final class average',
  'option': "['--usefilt']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'If you have the same image filename in multiple folders, and need '
          'to import into the same project, this will prepend the folder name '
          'on each image name',
  'option': "['--usefoldername']",
  'type': 'None'},
 {'count': 2,
  'default': '3',
  'help': 'Threshold for identifying missing data in Fourier space in terms of '
          'standard deviation of each Fourier shell. Default 3.0',
  'option': "['--wedgesigma']",
  'type': 'float'},
 {'count': 2,
  'default': 'False',
  'help': 'Wiener filter (optionally phaseflipped) particles.',
  'option': "['--wiener']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Export EMAN1 .box files',
  'option': "['--write_dbbox']",
  'type': 'None'},
 {'count': 2,
  'default': 'False',
  'help': 'Writes the image even if its sigma is 0.',
  'option': "['--writejunk']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Adds the volume to another volume of identical size',
  'option': "['--addfile']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Adds the original filename of a file or stack to the header of each '
          'particle. This only works for .hdf files.',
  'option': "['--addfilename']",
  'type': 'None'},
 {'count': 1,
  'default': '3',
  'help': 'Add noise on particles at each iteration. Stablize convergence for '
          'some reason.',
  'option': "['--addnoise']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Use the bfactor/temperature factor as the atom blurring radius, '
          'equivalent to Gaussian lowpass with 1/e width at 1/bfactor',
  'option': "['--addpdbbfactor']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': '',
  'option': "['--ali2d']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': '',
  'option': "['--ali3dnew']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': '',
  'option': "['--ali3dold']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform whole-frame alignment of the input stacks',
  'option': "['--align_frames']",
  'type': 'None'},
 {'count': 1,
  'default': '10',
  'help': 'Fineness of global search in e2align3d.py, default=10.0',
  'option': "['--aligngran']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'This will align and sort the final class-averages based on mutual '
          'similarity.',
  'option': "['--alignsort']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'optional aliptcls input. the program can start search from the '
          'position from last run.',
  'option': "['--aliptcls2d']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'optional aliptcls input.',
  'option': "['--aliptcls3d']",
  'type': 'str'},
 {'count': 1,
  'default': '-10000000000',
  'help': 'If sum of cmp results is less than the spefified value, will save '
          'the aligned particle to a per-class stack',
  'option': "['--alistacks']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'List per-particle info',
  'option': "['--all']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Average of all aligned frames.',
  'option': "['--allali']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Uses all of the .json files in info/ rather than specifying a list '
          'on the command line',
  'option': "['--allinfo']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'use all tomograms.',
  'option': "['--alltomograms']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'alpha in imagic convention.',
  'option': "['--alpha']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'alt in eman convention.',
  'option': "['--alt']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'If set, assumes tomographic data with a thin specimen, and masks '
          'out the +-X edges based on the alt Euler angle.',
  'option': "['--altedgemask']",
  'type': 'None'},
 {'count': 1,
  'default': '0.07',
  'help': 'Amplitude Contrast value for the micrographs',
  'option': "['--amplitudecontrast']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'regularizer for the Gaussian amplitudes in the first 1/2 of the '
          'iterations. Large values will encourage all Gaussians to have '
          'similar amplitudes. default = 0',
  'option': "['--ampreg']",
  'type': 'float'},
 {'count': 1,
  'default': '10',
  'help': 'Angle between projections if 3Dmap provided',
  'option': "['--ang']",
  'type': 'float'},
 {'count': 1,
  'default': '9',
  'help': 'Angular separation of projections. Default 9.0 degrees.',
  'option': "['--angstep']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'This will use a morph vector file (segment3d) to morph atom '
          'positions,#P [animorph=<n>,<apix>,<vecfile>]',
  'option': "['--animorph']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'Specify a class-number (more particles better). Will use that class '
          'to evaluate magnification anisotropy in the data.',
  'option': "['--anisotropy']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': "Appends to/creates a 'virtual' BDB stack with its own metadata, but "
          'the binary data taken from the (filtered) list of stacks',
  'option': "['--appendvstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'A 2-D image file which the CTF will be applied to in real-time',
  'option': "['--apply']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False (off). If on, it applies ctf to the projections in '
          'the simulated tilt series based on defocus, cs, and voltage '
          'parameters.',
  'option': "['--applyctf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Default=False (off). If on, this will assign different 'z-height' "
          'values to different particles',
  'option': "['--applyfocusdepth']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Applying the neural network on tomograms',
  'option': "['--applying']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'apply to tomo',
  'option': "['--applyto']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Write points of only one asymmetrical unit.',
  'option': "['--asymunit']",
  'type': 'None'},
 {'count': 1,
  'default': 'none',
  'help': 'pseudoatoms file',
  'option': "['--atoms']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'pseudoatom weight',
  'option': "['--atomswt']",
  'type': 'float'},
 {'count': 1,
  'default': 'CA',
  'help': "Load Atom Type. Default: 'CA'. Options: 'C' or 'all'",
  'option': "['--atomtype']",
  'type': 'str'},
 {'count': 1,
  'default': '1.8',
  'help': 'Local angular search value',
  'option': "['--auto_healpix']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'A key of the swarm_boxers dict in the local directory, used by the '
          'workflow.',
  'option': "['--autoboxer']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Optimize the x-y shape of the tomogram to fit in the tilt images. '
          'only works in bytile reconstruction. useful for non square cameras.',
  'option': "['--autoclipxy']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Automatic high pass filter of the SNR only to remove initial sharp '
          'peak, phase-flipped data is not directly affected (default false)',
  'option': "['--autohp']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Automatically decides whether to invert each stack of images to '
          'make particles white (EMAN2 convention). Decision is made for an '
          'entire stack. Non-inverted images will NOT BET PROCESSED AT ALL !',
  'option': "['--autoinvert']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Perform automatic particle picking. Provide mode and parameter '
          'string, eg - auto_local:threshold=5.5',
  'option': "['--autopick']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Averages FSC curves if --input contains multiple '
          'images.',
  'option': "['--averagefscs']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. This will average the even and odd volumes.',
  'option': "['--averagehalves']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Do not launch the GUI and set the average of the missing wedge '
          'statistics on all the volumes.',
  'option': "['--averagestats']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': '3D volume to insert. spt_xx/threed_xx if unspecified',
  'option': "['--avg']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'Default=1. If --keep is different from 1.0 and --average is on, the '
          'initial average will include all the particles, but then the '
          'percent specified byoptions.keep will be kept (the rest thrown '
          'away) and a new average will be computed. If --avgiter > 1, this '
          'new average will be compared again against all the particles. The '
          'procedure will be repeated for however many iterations --avgiter is '
          'given, or the process will stop automatically if in two consecutive '
          'rounds exactly the same particles are kept',
  'option': "['--avgiter']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'If set recons from each CA will be alinged and averaged.',
  'option': "['--avgrcts']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Averages sets of N sequential frames. eg - if N=4 and the input '
          'contains 100 images, the output would be 25 images',
  'option': "['--avgseq']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Works only for 1-D input images. Specify a range, eg 0-5 to '
          'indicate which components to use from each vector. Inclusive. '
          'default=all',
  'option': "['--axes']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'az in eman convention.',
  'option': "['--az']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of the stack containing a few boxes picked from regions of the '
          'tomogram where there where no particles,                 no gold, '
          'and no carbon.',
  'option': "['--backgroundstack']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Comma separated list of camera defect columns',
  'option': "['--bad_columns']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Comma separated list of camera defect rows',
  'option': "['--bad_rows']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Split the data into 4 groups rather than 2. The extra two groups '
          'contain particles more likely to be bad.',
  'option': "['--badgroup']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Remove one bad tilt during coarse alignment. seem to work better '
          'with smaller maxshift...',
  'option': "['--badone']",
  'type': 'None'},
 {'count': 1,
  'default': '0.5',
  'help': "When identifying 'bad' particles, particles with similarities "
          '>mean+sigma*badqualsig will be considered bad. Default 0.5',
  'option': "['--badqualsig']",
  'type': 'float'},
 {'count': 1,
  'default': '0.25',
  'help': "When identifying 'bad' particles, if s1/s2 are the similarities to "
          'reference 1/2, then those where |s1-s2| < sigma*badsepsig will be '
          'excluded. Default 0.25',
  'option': "['--badsepsig']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'List of basis vectors to use, comma delimited.',
  'option': "['--basislist']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Will use a set of existing class-averages/projections to generate '
          'the Eigenbasis for classification. This must be an image stack with '
          'the same dimensions as the particle data.',
  'option': "['--basisrefs']",
  'type': 'str'},
 {'count': 1,
  'default': '20',
  'help': 'Batch size for the stochastic gradient descent. Default is 20.',
  'option': "['--batch']",
  'type': 'int'},
 {'count': 1,
  'default': '32',
  'help': 'batch size',
  'option': "['--batchsz']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'rtf_best alignment',
  'option': "['--best']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Average of best aligned frames.',
  'option': "['--bestali']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Set constant B-factor (as defined in EMAN1) for all images.',
  'option': "['--bf']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'load a curve of background power spectrum to substract for ctf '
          'estimation.',
  'option': "['--bgcurve']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Background is computed using a soft mask of the center/edge of each '
          'particle with the specified radius. Default radius is boxsize/2.6.',
  'option': "['--bgmask']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'This will assume the first image is at 0 degrees and will stack '
          'images from --lowerend through 0, and then will stack the rest from '
          '0+tiltstep throgh --upperend. If --negativetiltseries is supplied, '
          'images will be stacked from --upperend through 0, then from '
          '0-tiltstep through --lowerend.',
  'option': "['--bidirectional']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'The degree of binning for final image. Default is 1, i.e. no '
          'binning. Note that this option takes only integer values.',
  'option': "['--binby']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'new rtf with usebispec',
  'option': "['--bispec']",
  'type': 'None'},
 {'count': 1,
  'default': '10',
  'help': 'Bits to retain in the output file, 0 or 2-16. 0 is lossless '
          'floating point compression. <0 will store completely uncompressed',
  'option': "['--bits']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Ignored. Present for historical reasons only.',
  'option': "['--bootstrap']",
  'type': 'None'},
 {'count': 1,
  'default': 'boxes',
  'help': 'Type of boxes to import, normally boxes, but for tilted data use '
          'tiltedboxes, and untiltedboxes for the tilted  particle partner',
  'option': "['--box_type']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Boxing 2D particls from tomograms.',
  'option': "['--box2d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Boxing 3D particls from tomograms (default).',
  'option': "['--box3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Input boxes of negative samples',
  'option': "['--boxes_negative']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Boxing particles.',
  'option': "['--boxing']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'box size in unbinned tomogram',
  'option': "['--boxsz_unbin']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If specified, this will generate an "as is" average '
          'of all the subvolumes (no alignment performed). This can be useful '
          'to see if, on average, particles correspond to the desired specimen '
          'and are reasonably centered.',
  'option': "['--bruteaverage']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references '
          'through --ref. Default=0 (internally turned on and set to 64). Size '
          'of the SUBSET of particles to use to build an initial reference by '
          'calling e2spt_binarytree.py. By default, the largest power of two '
          'smaller than the number of particles in --input will be used. For '
          'example, if you supply a stack with 150 subtomograms, the program '
          "will automatically select 128 as the limit to use because it's the "
          'largest power of 2 that is smaller than 150. But if you provide, '
          'say --btref=100, then the number of particles used will be 64, '
          "because it's the largest power of 2 that is still smaller than 100.",
  'option': "['--btref']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Build a new tile file from the specified image',
  'option': "['--build']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Builds 1D and 2D power spectra for the images when building, Value '
          'is A/pix for image.',
  'option': "['--buildpspec']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Segment particles.',
  'option': "['--buildset']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'will only prepare particle set for the refinement but skip the '
          'actual refinement process.',
  'option': "['--buildsetonly']",
  'type': 'None'},
 {'count': 1,
  'default': '32',
  'help': 'Box size of the particles for tracking. Default is 32. Maybe '
          'helpful to use a larger one for fiducial-less cases..',
  'option': "['--bxsz']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Uses the named header parameter to sort the images',
  'option': "['--byheader']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Sort by image Kurtosis. No alignment, shrinking, etc. is performed',
  'option': "['--bykurtosis']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Sort in order of number of particles represented in each '
          'class-average. No alignment, shrinking, etc. is performed',
  'option': "['--byptcl']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'make final tomogram by tiles..',
  'option': "['--bytile']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Compute the low resolution azimuthal contrast of each image and put '
          'it in the header as eval_contrast_lowres. Larger values imply more '
          "'interesting' images.",
  'option': "['--calccont']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'calculate a radial structure factor for the image and write it to '
          'the output file, must specify apix. divide into <n> angular bins',
  'option': "['--calcsf']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of the stack containing a few boxes picked from the grid hole '
          '(or carbon).',
  'option': "['--carbonstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'class averages to reject, default=None',
  'option': "['--careject']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'This option has been removed in favor of a new centering algorithm',
  'option': "['--centeracf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If specified, this option will center the zerotilt '
          '(or least tilted image) for each particle by using as a reference a '
          'sharp-circle of radius=box/2 or the value specified through '
          '--radius.',
  'option': "['--centerzerotilt']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Load Chain. Default: load all chains',
  'option': "['--chain']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Verifies that all images in the file contain CTF information, and '
          'gives some basic statistics',
  'option': "['--checkctf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Check the handedness of tomogram.',
  'option': "['--checkhand']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of file to write center of segments in UCSF Chimera marker '
          'format.',
  'option': "['--chimeraout']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': '<chunksize>,<nchunk>. Will process files in groups of chunksize, '
          'and process the <nchunk>th group. eg - 100,3 will read files '
          '300-399',
  'option': "['--chunk']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of classavg file created by e2refine2d.py',
  'option': "['--classavg']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Highly experimental ! Subclassify particles (hopefully by defocus) '
          'into n groups.',
  'option': "['--classify']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Store results in a classinfo_xx.json style file',
  'option': "['--classinfo']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Filename of a text file containing a (comma or whitespace '
          'separated) list of class average numbers to operate on.',
  'option': "['--classlist']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'remove outliers before PCA.',
  'option': "['--clean']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This option will clean up the database cache so files can safely be '
          'moved or accessed on another computer via NFS.',
  'option': "['--cleanup']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Z thickness of the final tomogram output. default is -1, (5/16 of '
          'tomogram length)',
  'option': "['--clipz']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Write EMAN 1 style cls files with members of each class',
  'option': "['--clsfiles']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'only reconstruct a class of particles',
  'option': "['--clsid']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Standard EMAN2 output suitable for use with e2classaverage, etc.',
  'option': "['--clsmx']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'Number of clusters to group the data in after the 1st iteration, '
          'based on correlation.',
  'option': "['--clusters']",
  'type': 'int'},
 {'count': 1,
  'default': 'none',
  'help': 'helix correlation file',
  'option': "['--coeff']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'helix correlation weight',
  'option': "['--coeffwt']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Color scatter dots by Z axis',
  'option': "['--colorzaxis']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Compression level to use when writing. No impact on image quality, '
          'but large impact on speed. Default = 1',
  'option': "['--compresslevel']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Will determine the structure factor*envelope for the aggregate set '
          'of images',
  'option': "['--computesf']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Relative setting. Try 0.75 if images too bright. Default 1.0',
  'option': "['--contrast']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'use convolutional network for heterogeneity analysis.',
  'option': "['--conv']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'File in .txt format containing the coordinates of particles '
          'determined from the aligned 0 tilt image in the supplied '
          'tiltseries.',
  'option': "['--coords2d']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'File in .txt format containing the coordinates of particles '
          'determined from the reconstructed tomogram of the supplied '
          'tiltseries.',
  'option': "['--coords3d']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'correct for global rotation and position sample flat in tomogram.',
  'option': "['--correctrot']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'to use this option, the input files should be image files. Specify '
          'an .lst or .lsx file to create here (e.g., --create mylst.lst) with '
          'references to all of the images in the inputs.',
  'option': "['--create']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'CTF estimation using cter',
  'option': "['--cter']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Create a map showing the integrated SNR for the combined data.',
  'option': "['--ctfcoverage']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform CTF fitting on the (tiled) frame',
  'option': "['--ctfest']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Estimated CTF',
  'option': "['--ctffile']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'This should be a text file   with ctf parameters in the following '
          'format;   defocus=value voltage=value cs=value apix=value '
          'bfactor=value ampcont=value   A single space should separate each '
          'parameter from the next.   Do not write any unit symbols for the '
          'values; just the numerical value.   Defocus should be in microns, '
          'voltage in kV, apix in angstroms per pixel, and ampcont (amplitude '
          'contrast)   should be a decimal; for example, 0.1 for 10 percent '
          'amplitude contrast.   IF you want to use DIFFERENT PARAMETERS PER '
          'IMAGE, then the file must contain   multiple rows with the '
          'different values.   The first row will be used to phase flip the '
          'first image,   the second row to phase flip the second, etc.',
  'option': "['--ctfparamsfile']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'weight by ctf',
  'option': "['--ctfweight']",
  'type': 'None'},
 {'count': 1,
  'default': '0.5',
  'help': 'fraction of overlap when generating particle along curves. default '
          'is 0.5',
  'option': "['--curves_overlap']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'specify curve id to extract particles from saved curves.',
  'option': "['--curves']",
  'type': 'int'},
 {'count': 1,
  'default': '0.2',
  'help': '',
  'option': "['--cut']",
  'type': 'float'},
 {'count': 1,
  'default': '5',
  'help': 'helix angular search step',
  'option': "['--da']",
  'type': 'float'},
 {'count': 1,
  'default': '',
  'help': 'Specify a comma separated list of dark refereence stacks/images to '
          'import. Files will be placed in movierefs_raw. See --importation '
          'for additional options.',
  'option': "['--darkrefs']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Add data labels to the plot',
  'option': "['--datalabels']",
  'type': 'None'},
 {'count': 1,
  'default': '#00ff00',
  'help': 'Set the color of the data labels. Any vaild matplotlib color is ok',
  'option': "['--datalabelscolor']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Append any unique helix coordinates to the database from the '
          'specified file (in EMAN1 *.box format). Use --helix-width to '
          'specify a width for all boxes.',
  'option': "['--db-add-hcoords']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Replaces the helix coordinates in the database with the coordinates '
          'from the specified file (in EMAN1 *.box format). Use --helix-width '
          'to specify a width for all boxes.',
  'option': "['--db-set-hcoords']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'data base list storage, used by the workflow. You can ignore this '
          'argument.',
  'option': "['--dbls']",
  'type': 'str'},
 {'count': 1,
  'default': '.',
  'help': 'Ignored. Present for historical reasons.',
  'option': "['--dbpath']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform gain image correction on DE64 data. Note, these should not '
          'be normalized.',
  'option': "['--de64']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Applies an edge decay to zero on the output class-averages. A very '
          'good idea if you plan on 3-D reconstruction.',
  'option': "['--decayedge']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'decoder input',
  'option': "['--decoder']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Save the trained decoder model. Filename should be .h5 or .tf',
  'option': "['--decoderout']",
  'type': 'str'},
 {'count': 1,
  'default': '2',
  'help': 'Which column of ctf file is the defocus',
  'option': "['--defcol']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify the camera defects file.',
  'option': "['--defect_file']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Text file containing   a single column of defocus values in '
          'microns. The file should have as many   defocus values as images in '
          'the tiltseries or subtiltseries supplied.',
  'option': "['--defocilist']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Assumes the signal for defocus measurement (e.g., carbon film) is '
          'at the top layer of the tomogram.',
  'option': "['--defocusbottom']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'The step width for grid search (microns)',
  'option': "['--defocusstep']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Assumes the signal for defocus measurement (e.g., carbon film) is '
          'at the top layer of the tomogram.',
  'option': "['--defocustop']",
  'type': 'None'},
 {'count': 1,
  'default': '0.1',
  'help': 'default=0.1. total variation in defocus (in micrometers) tolerated '
          "within a strip and still consider it a region of 'constant "
          "defocus'.",
  'option': "['--defocusvariationlimit']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'This will delete (or at least empty) the named database(s)',
  'option': "['--delete']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Extract the data_source and data_n parameters from each image in '
          'the file and create a new .lst file referencing the original '
          'image(s)',
  'option': "['--dereforig']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'When possible, use this device to process movie frames. Default is '
          'GPU.',
  'option': "['--device_num']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Calculate defocus from entire CCD frame.',
  'option': "['--df']",
  'type': 'None'},
 {'count': 1,
  'default': '2.0,7.0,0.02',
  'help': 'Search range of defocus (start, end, step). default is 2., 7, 0.02',
  'option': "['--dfrange']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Set constant defocus for all images (positive is underfocus).',
  'option': "['--dfval']",
  'type': 'float'},
 {'count': 1,
  'default': '4',
  'help': 'Default=4. Determines how many particles will be pre-picked as '
          'putative particles. For example, if                 if the tomogram '
          'is broken up into subregions of volume V to look for particles in '
          'each                 and --dilutionfactor=1, then, the number of '
          'best-correlating subvolumes from the subregion                 that '
          'will be initially selected as potential particles will be '
          "n=V/(pv*D) where 'pv' is the volume of one particle                 "
          'calculated based on --particleradius or --boxsize, or the '
          "template's boxsize ['nx']; 'D' is the dilution "
          'factor;                 therefore, the larger D is, the fewer '
          'locations that will be initially picked as potential particles '
          '(before any pruning).',
  'option': "['--dilutionfactor']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Displays a specific tile (level,x,y))',
  'option': "['--display']",
  'type': 'str'},
 {'count': 1,
  'default': '10',
  'help': 'Maximum Ca-Ca length',
  'option': "['--dmax']",
  'type': 'float'},
 {'count': 1,
  'default': '2',
  'help': 'Mininum Ca-Ca length',
  'option': "['--dmin']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of file whose ctf estimation parameters (obtained via some '
          'previous run of Gauss autoboxer via the GUI) should be used for '
          'automatic ctf estimation.',
  'option': "['--do_ctf']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Compute a contour plot',
  'option': "['--docontourplot']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If e2spt_refinemulti.py is calling '
          'e2spt_classaverage.py, the latter need not average any particles, '
          'but rather only yield the alignment results.',
  'option': "['--donotaverage']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified, intermediate files will be kept.',
  'option': "['--dontcleanup']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Do translational search, default=1',
  'option': "['--dotrans']",
  'type': 'int'},
 {'count': 1,
  'default': '30',
  'help': 'step size for the inplane angle phi, default=30.0',
  'option': "['--dphi']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'skip final reconstruction',
  'option': "['--dryrun']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'distance threshold',
  'option': "['--dthr']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Simulate subtomograms made of two independent and '
          'orthogonal tilt series.',
  'option': "['--dualaxis']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'e0 in quaternion convention.',
  'option': "['--e0']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'e1 in quaternion convention.',
  'option': "['--e1']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'e2 in quaternion convention.',
  'option': "['--e2']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'e3 in quaternion convention.',
  'option': "['--e3']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Echo Relion Command to terminal only',
  'option': "['--echo']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'IMOD .edf file name.',
  'option': "['--edf']",
  'type': 'str'},
 {'count': 1,
  'default': '4',
  'help': 'mininmum distance to the edge of tomogram',
  'option': "['--edge']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Edge normalize',
  'option': "['--edgenorm']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Render EER file on 8k grid.',
  'option': "['--eer2x']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Render EER file on 16k grid.',
  'option': "['--eer4x']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'End ATOM',
  'option': "['--end']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Will generate _even and _odd .lst files for each specified input '
          '.lst file',
  'option': "['--eosplit']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Default=False. Runs erase_gold.py on the stack.',
  'option': "['--erasegold']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'File for Eulerdata, Ryan style, if none is given, data is read from '
          'the DB.',
  'option': "['--eulerdata']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Euler angles file, to create tiltdistance from pre-aligned '
          'particles. Format is: imgnum, name, az, alt, phi',
  'option': "['--eulerfile']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Refines Euler angles of class-averages before reconstruction',
  'option': "['--eulerrefine']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified with evalclassqual, will generate individual FRC '
          'curves for each class average in the even subset',
  'option': "['--evalclassdetail']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Evaluates the class-average-projection agreement using the '
          'refine_xx folder name.',
  'option': "['--evalclassqual']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'generate model projection images to the given file name',
  'option': "['--evalmodel']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Evaluates the particle-map agreement using the refine_xx folder '
          'name. This may be used to identify bad particles.',
  'option': "['--evalptclqual']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Box size for the projections for evaluation.',
  'option': "['--evalsize']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'with --orientedparticles, if cls_result_xx is specified, will '
          'include both _even and _odd particles in the output.',
  'option': "['--evenoddmerge']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Don't generate output for any particles marked as exclude",
  'option': "['--exclude_bad']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Don't generate output for any particles extending outside the "
          'micrograph',
  'option': "['--exclude_edges']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Will exclude images with a mean value 3 standard '
          'deviations away from the "mean of means" of all images.',
  'option': "['--exclude_extremes']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Integer number of pixels away from the edge of each image in the '
          'tilt series to not extract particles from. For example, if you '
          'specify 100, and the images are 4096x4096 pixels, any particle with '
          'its center lying between 0 and 200 or 3896 and 4096 will nto be '
          'extracted.',
  'option': "['--excludeedge']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': "Ignore 'excedent' (smaller than the width of a strip) at the edge "
          'of micrographs after dividing them into strips.',
  'option': "['--excludeedges']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0.0 (not used). The minimum multiplicity (number of '
          'particles that went into an average) to look for mutually exclusive '
          'classes/averages. Two classes are mutually exclusive when non of '
          'the members in one are present in the other. In HAC (hierarchical '
          'ascendant classification or "all vs all" alignments, classes MERGE, '
          'so a class from a later round will be composed of classes from '
          'earlier rounds. Some classes remain un-merged for many rounds. If '
          'set, this parameter will extract classes with a minimum number of '
          'particles (from whatever round/iteration they were generated in) '
          'whose members are not present in any other of the extracted '
          'classes. The mutually exclusive classes will be put into a separate '
          "sub-directory starting with the character 'me_classes'.",
  'option': "['--exclusive_class_min']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify the name of a file with a list of images to exclude in '
          'creation of virtual stacks. Please see source for details.',
  'option': "['--exlist']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'This option will create an emx directory, where it will export the '
          'eman2 project into EMX format',
  'option': "['--export_whole_project']",
  'type': 'None'},
 {'count': 1,
  'default': 'hdf',
  'help': "Save frames with this extension. Default is 'hdf'.",
  'option': "['--ext']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Extracts box locations from the image header to produce a set of '
          '.box files for only the particles in the .lst files',
  'option': "['--extractboxes']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'This will extract a single named value from each specified file. '
          'Output will be multicolumn if the referenced label is an object, '
          'such as CTF.',
  'option': "['--extractkey']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Extracts the particles from a refinement with per-particle '
          'orientation information. If HDF output, will store as xform_align3d '
          'in header.',
  'option': "['--extractorientptcl']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'If a database contains sets of plots, such as '
          'bdb:refine_xx#convergence.results, this will extract the plots as '
          'text files.',
  'option': "['--extractplots']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This will extract the parameters from a particle_parms JSON file in '
          'SPT projects as a multicolumn text file.',
  'option': "['--extractspt']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'fraction of Fourier amps to exclude from recons. 0 means that this '
          'option is not used, default=0.0',
  'option': "['--famps']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F)Apply extra real space symmetry averaging and masking to '
          'beautify final map prior to output',
  'option': "['--fbeaut']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'name of the current feature to extract',
  'option': "['--featurename']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F)Apply Single Particle Wiener filter to final reconstruction',
  'option': "['--ffilt']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Incoherent Fourier average of all images and write a single power '
          'spectrum image',
  'option': "['--fftavg']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Only processes image stacks where the filename contains the '
          'specified string. Mostly used for debugging.',
  'option': "['--filefilt']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'An angular range used for both alt & az over which the projection '
          'should be averaged. Generally the angular step used when making '
          'projections.',
  'option': "['--fillangle']",
  'type': 'float'},
 {'count': 1,
  'default': '',
  'help': 'the iamge to use to fill in the missing wedge of the images in '
          '--input. Ideally, this is the average of the aligned images in '
          '--input, or the reference the images in --input were aligned to.',
  'option': "['--fillimage']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'this will fill the missing wedge with gaussian noise. --matchto '
          'will be turned on by default if this option is supplied.',
  'option': "['--fillwithnoise']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Checks the existing output file, and fills only matrix elements '
          'which are exactly zero.',
  'option': "['--fillzero']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Only include dictionary names containing the specified string',
  'option': "['--filt']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Resolution (integer, in Angstroms) at which you want to apply a '
          'gaussian lowpass filter to the tomogram prior to loading it for '
          'boxing',
  'option': "['--filter']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Filters output particles to match projections',
  'option': "['--filterout']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Exclude dictionary names containing the specified string',
  'option': "['--filtexclude']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Assume that existing preliminary particle classifications are '
          'correct, and only recompute final local orientations',
  'option': "['--finalstage']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False.   Supplying this option will tile the entire image '
          'first (for each tilt angle) and find the average   defocus. Then it '
          "will use that value to provide an educated 'guess' during "
          'stripe-by-stripe    fitting for each image.',
  'option': "['--firstfitglobal']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Tries to identify bad pixels in the dark/gain reference, and fills '
          'images in with sane values instead',
  'option': "['--fixbadpixels']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Same as --edgefile.',
  'option': "['--fixed']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Will perform a final background correction to avoid slight negative '
          'values near zeroes',
  'option': "['--fixnegbg']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'use slower aligner (experimental)',
  'option': "['--flcf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Flip the tomogram by rotating the tilt axis. need --load existing '
          'alignment',
  'option': "['--flip']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'gradient descent in fourier space',
  'option': "['--fourier']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Processes a fraction of the data, used automatically by --threads. '
          '<n>,<ntot>',
  'option': "['--frac']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Write corrected stack of frames.',
  'option': "['--frames']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'This correspond to the X   size in pixes of the images/frames in '
          'the raw tilt series; that is, the size of the entire frame   along '
          'the X axis (perpendicular to the direction of the tilt axis in the '
          'aligned tilt series).   It is used to calculate the distance of '
          'each particle (subtiltseries) to the tilt axis, since   this will '
          'induce different shifts in defocus in 3-D for the actual particles. '
          'Particles   right at the tilt axis don\'t move "up" or "down" as '
          'they are tilted.   This MUST be provided if --subtiltsdir is '
          'provided.   Othwerwise, it will be read from the header of the '
          'images provided.',
  'option': "['--framexsize']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Train from an existing network',
  'option': "['--from_trained']",
  'type': 'str'},
 {'count': 1,
  'default': 'FSC Plot',
  'help': 'Convert the input text FSC file into an xml file. The value '
          'provided is the title of the graph. For example: --fsctxt2xml="My '
          'Graph Title"',
  'option': "['--fsctxt2xml']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Convert the input XML FSC file into a text file',
  'option': "['--fscxml2txt']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F)Calculate additional statistics in resolution table at end '
          '(QFACT, SSNR, CC, etc.). T Uses more than 50 percent more memory.',
  'option': "['--fstat']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Apply non-crystallographic symmetry to obtain 'full' structure.",
  'option': "['--full']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Assume the input particles covers most of the orientation of the '
          'model. This gives better performance when the model is relatively '
          'feature-less, but is more likely to fail when there are incorrect '
          'particles in the input.',
  'option': "['--fullcov']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'A specialized flag that disables auto contrast for the display of '
          'particles stacks and 2D images only.',
  'option': "['--fullrange']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Do not dark correct gain image. False by default.',
  'option': "['--gain_darkcorrected']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Specify a comma separated list of gain refereence stacks/images to '
          'import. Files will be placed in movierefs_raw. See --importation '
          'for additional options.',
  'option': "['--gainrefs']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'gamma in imagic convention.',
  'option': "['--gamma']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of autoboxed file whose autoboxing parameters (obtained via '
          'some previous run of Gauss autoboxer via the GUI) should be used '
          'for automatic boxing.',
  'option': "['--gauss_autoboxer']",
  'type': 'str'},
 {'count': 1,
  'default': '30',
  'help': 'Diameter (in pixels) of gold fiducials to erase.',
  'option': "['--goldsize']",
  'type': 'float'},
 {'count': 1,
  'default': '',
  'help': 'Name of the stack containing a few gold particles picked from the '
          'tomogram.',
  'option': "['--goldstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. This will PREVENT splitting the dataset provided '
          'through --input into two groups, and the entire dataset will be '
          'refined together. If this parameter is NOT supplied (and thus the '
          "refinement is 'gold standard') and --ref is supplied, two copies of "
          'the reference will be generated and randomphase-lowpass filtered to '
          'the resolution specified through --refrandphase.',
  'option': "['--goldstandardoff']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Zero out all densities above mean of max and min.',
  'option': "['--goldthreshtomo']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Average of good aligned frames.',
  'option': "['--goodali']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'default=-1 (all available GPUs will be used). To select specific '
          'GPUs to use, provide them as a comma-separated list of integers.',
  'option': "['--gpus']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'reading from gradient output instead of recomputing',
  'option': "['--gradin']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'gradient output',
  'option': "['--gradout']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Is the reference map in greyscale?',
  'option': "['--greyscale']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Use a gridding method for rotation operations on particles. '
          'Requires particles to be square.',
  'option': "['--gridding']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Default=1.0. Size of the carbon hole in micrometers for the '
          'simulated grid (this will determine the shifts in defocus for each '
          'particle at each tilt angle, depending on the position of the '
          'particle respect to the tilt axis; the tilt axis by convention goes '
          'parallel to Y through the middle of the tomogram.',
  'option': "['--gridholesize']",
  'type': 'float'},
 {'count': 1,
  'default': '',
  'help': 'x,y amount of pixels to translate the cylindrical mask if the '
          'carbon hole in your tomogram is off center.          The left '
          'bottom corner would be 0,0. Supply this parameter only if also '
          'supplying          --mask and the grid hole is not centered in the '
          'tomogram.',
  'option': "['--gridoffset']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Radius of the grid in pixels. Supply this parameter only if also '
          'supplying --mask.',
  'option': "['--gridradius']",
  'type': 'int'},
 {'count': 1,
  'default': '1',
  'help': 'Default=0 (not used; data not split). This parameter will split the '
          'data into a user defined number of groups. For purposes of '
          'gold-standard FSC computation later, select --group=2.',
  'option': "['--groups']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Guess how to split micrographs into tilt series and the order of '
          'images in each tilt series from file names. Tilt angles must be '
          'incuded in file names. May and may not work depending on the file '
          'name format...',
  'option': "['--guess']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references '
          'through --ref. Default=0 (not used by default). Size of the SUBSET '
          'of particles to use to build an initial reference by calling '
          'e2spt_hac.py which does Hierarchical Ascendant Classification (HAC) '
          "or 'all vs all' alignments.",
  'option': "['--hacref']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'This will take the xform.align2d header value from each particle, '
          'and apply it. Pass 0 to perform the transform or 1 to perform the '
          'inverse.',
  'option': "['--headertransform']",
  'type': 'int'},
 {'count': 1,
  'default': '7.5',
  'help': 'Angular Sampling Interval (Degrees)',
  'option': "['--healpix']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Save coordinates for helices to the file specified, which will have '
          'the EMAN1 *.box format:   x1-w/2        y1-w/2        w        '
          'w        -1                    x2-w/2        y2-w/2        w        '
          'w        -2',
  'option': "['--helix-coords', '-X']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Save images of the helices. The file name specified will have helix '
          'numbers added to it.',
  'option': "['--helix-images', '-x']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'Helix length in pixels. Normally each filament can be an arbitrary '
          'length. This forces all new helices to a fixed size.',
  'option': "['--helix-length', '-l']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Helix width in pixels. Overrides widths saved in the database or in '
          'an input file.',
  'option': "['--helix-width', '-w']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Start with existing secondary structure.',
  'option': "['--helixfile']",
  'type': 'str'},
 {'count': 1,
  'default': '16.2',
  'help': 'helix length om angstroms',
  'option': "['--helixlength']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Include HET atoms in the map',
  'option': "['--het']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'heterogeneity analysis.',
  'option': "['--heter']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). Number of Fourier pixels to apply highpass '
          'filter at. The processor used is filter.highpass.gauss.',
  'option': "['--highpasspix']",
  'type': 'int'},
 {'count': 1,
  'default': '4',
  'help': 'Default=4. Number of Fourier pixels to zero out during highpass '
          "filtering AFTER reconstruction (postprocessing). Provide 'None' or "
          "'0' to disactivate.",
  'option': "['--highpasspixels']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform CTF processing for projects targeting 2-6 A resolution',
  'option': "['--hires']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Data file(s) should be plotted as a histogram rather than displayed '
          'in 2-D.',
  'option': "['--hist']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Apply a high-pass filter at the specified resolution when '
          'generating projections. Specify as resolution in A, eg - 100',
  'option': "['--hp']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'default=False. If on, this will trigger a call to ICONPreProcess on '
          'the .st file supplied through --tiltseries.',
  'option': "['--iconpreproc']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Does it have icosahedral symmetry?',
  'option': "['--icosahedral_symmetry']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'index for an image in a stack',
  'option': "['--idx']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Ignored. Present for historical reasons.',
  'option': "['--idxcache']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. If the images to apply ctf correction on are already '
          'unstacked and are individual mrc files, supply a common string to '
          'all of them.',
  'option': "['--imagestem']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Inside mask radius',
  'option': "['--imask']",
  'type': 'int'},
 {'count': 1,
  'default': '1',
  'help': 'Memory Usage: 0 - Least Memory, 3 - Most memory',
  'option': "['--imem']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Path to the image or stack of images which --img2process will match '
          'after processing. Not compulsory if --apix is provided.',
  'option': "['--img2match']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Path to the stack    that needs to be processed to match img2match. '
          'If you want to process multiple stacks    or files, just separate '
          'them by commas --imgs2process=vo1.mrc,vol2.hdf,file.pdb',
  'option': "['--img2process']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Rotates the gain 90 degress counter clockwise X times. If value is '
          'greater than 3, gain image is flipped about the y axis before '
          'rotation.',
  'option': "['--imod_rotflipgain']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Import boxes',
  'option': "['--import_boxes']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This will import a phase-flipped particle stack from EMAN1',
  'option': "['--import_eman1']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Import emx information and corresponding micrographs',
  'option': "['--import_emx']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Import DDD movies',
  'option': "['--import_movies']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import particles',
  'option': "['--import_particles']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import tiltseries',
  'option': "['--import_tiltseries']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import tomograms for segmentation and/or subtomogram averaging',
  'option': "['--import_tomos']",
  'type': 'None'},
 {'count': 1,
  'default': 'copy',
  'help': 'Specify import mode: move, copy or link',
  'option': "['--importation']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import ctffind3 data?',
  'option': "['--importctffind3']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import ctffind4 data?',
  'option': "['--importctffind4']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Import CTFFIND3 data in Relion STAR format. Put STAR files in '
          "'ctffind3' folder",
  'option': "['--importrelionstar']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified with --evalptclqual, projections will be written to '
          'disk for easy comparison.',
  'option': "['--includeprojs']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'The degree of incomplete allowed in the tree on each level',
  'option': "['--incomplete']",
  'type': 'int'},
 {'count': 1,
  'default': '.',
  'help': 'Directory containing micrographs to be processed.',
  'option': "['--indir']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'If this is specified, information on the PDB file is displayed, no '
          'conversion is performed.',
  'option': "['--info']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Folder typically produced by e2evalimage.py or previous runs of '
          'this program containing info.json files, one per tilt image in a '
          'tilt series. Each .json file should contain the fitted ctf and all '
          'associated parameters for each tilt image.',
  'option': "['--infodir']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': "Initialize the output matrix file before performing 'range' "
          'calculations',
  'option': "['--init']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'File containing starting class-averages. If not specified, will '
          'generate starting averages automatically',
  'option': "['--initial']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. .json file containing a dict of transform to apply '
          'before reference generation',
  'option': "['--inixforms']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'In-plane angular sampling',
  'option': "['--inplaneang']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Normally the set used to create the class-averages is used as '
          'input. Use this with another version of the same set of particles, '
          "for example '__ctf_flip_proc' instead of '__ctf_flip'",
  'option': "['--input_set']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. .json file containing a dict of transforms to apply '
          "to 'pre-align' the particles.",
  'option': "['--inputaliparams']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Optional file containing alternate version of the particles to use '
          'for reconstruction after alignment',
  'option': "['--inputavg']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Alternative to --input and --inputstem. Path to a directory '
          'containing individual subtiltseries stacks.',
  'option': "['--inputdir']",
  'type': 'str'},
 {'count': 1,
  'default': '.mrc',
  'help': 'default=.mrc. String common to all images to be processed. E.g., '
          "with '.mrc' as the default, all files in the directory ending in "
          "'.mrc' (or containing this as part of the filename) will be "
          'analyzed.',
  'option': "['--inputstring']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F)Perform intensity-scale corrections on image groups?',
  'option': "['--intensitycorrection']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Specifies a 2nd input file. Output will be 2 files interleaved.',
  'option': "['--interlv']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Type of interpolation: 0 - Nearest Neighbor, 1 - Trilinear '
          'Interpolation (More Time-Consuming)',
  'option': "['--interp']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Use reciprocal of input gain image',
  'option': "['--invert_gain']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If True, this will multiple all angles by -1, in '
          'case the directionality is messed up.',
  'option': "['--invertangles']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Multiply --template subsections by -1 to invert the contrast BEFORE '
          'looking for particles.',
  'option': "['--inverttemplate']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Multiply --tomogram subsections by -1 to invert the contrast BEFORE '
          'looking for particles.',
  'option': "['--inverttomo']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Iterations',
  'option': "['--iterations']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Used in iterative mode to define a mask to apply between '
          "iterations. The resulting reconstruction won't be masked per-se, "
          'but will be biased towards lower densities outside the mask.',
  'option': "['--itermask']",
  'type': 'str'},
 {'count': 1,
  'default': 'p,p,p,t,r,p,r,d',
  'help': 'iterations. Types of refinement separated by comma. p - 3d particle '
          'translation-rotation. t - subtilt translation. r - subtilt '
          'translation-rotation. d - subtilt defocus. Default is '
          'p,p,p,t,r,p,r,d',
  'option': "['--iters']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'If writing output pdb, also write JSON metadata. Default: 1. '
          'Options: 0, 1',
  'option': "['--json']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 're-extract particles using a particle_param_xx json file from a spt '
          'alignment',
  'option': "['--jsonali']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Compare the particle orientations from two .json files. Provide the '
          'path to 2 json files as arguments to the command.',
  'option': "['--jsonortcmp']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform gain image correction on gain images from a Gatan K2. Note, '
          'these are the reciprocal of typical DDD gain images.',
  'option': "['--k2']",
  'type': 'None'},
 {'count': 1,
  'default': '16',
  'help': 'kboot',
  'option': "['--kboot']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Keep all of the individual 3-D models used to make the variance '
          'map. This make take substantial disk space.',
  'option': "['--keep3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Do not remove 'dust' from mask (include objects smaller than gold "
          'fiducials).',
  'option': "['--keepdust']",
  'type': 'None'},
 {'count': 1,
  'default': '15,15,15',
  'help': 'Width of kernels of each layer, the numbers must be odd. Note the '
          'number of layers should be the same as the nkernel option.',
  'option': "['--ksize']",
  'type': 'str'},
 {'count': 1,
  'default': '2',
  'help': 'number of 1 pixel layers about the center to use for the projection '
          'in each direction (size in reduced image if --shrink used), ie '
          '0->1, 1->3, 2->5. Default=2',
  'option': "['--layers']",
  'type': 'int'},
 {'count': 1,
  'default': '-91',
  'help': 'Limited tilt angle: positive for keeping side views, negative for '
          'keeping top views',
  'option': "['--limit_tilt']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Lists all of the keys in all of the specified info files',
  'option': "['--listkeys']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'List all currently set user application preferences',
  'option': "['--listoptions']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'only reconstruct particles of indices from the given list',
  'option': "['--listsel']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'load module',
  'option': "['--loadmodule']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'local normalization. do not use yet....',
  'option': "['--localnorm']",
  'type': 'None'},
 {'count': 1,
  'default': '50',
  'help': 'Size in Angstroms of the local region to compute the resolution in',
  'option': "['--localsizea']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Long listing',
  'option': "['--long']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform CTF processing for projects targeting 15-30 A resolution',
  'option': "['--lores']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'low level test',
  'option': "['--low']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0.0 (not used). Fraction of Nyquist to lowpass at. The '
          'processor used is filter.lowpass.tanh',
  'option': "['--lowpassfrac']",
  'type': 'float'},
 {'count': 1,
  'default': '100',
  'help': 'Default=100. Resolution in angstroms to lowpass filter the tomogram '
          "AFTER reconstruction (postprocessing). Type 'None' or '0' to "
          'disactivate.',
  'option': "['--lowpassresolution']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'Apply a low-pass filter at the specified resolution when generating '
          'projections. Specify the resolution in A, eg - 25',
  'option': "['--lp']",
  'type': 'float'},
 {'count': 1,
  'default': '1',
  'help': 'Learning rate multiplier after each iteration.',
  'option': "['--lrdecay']",
  'type': 'float'},
 {'count': 1,
  'default': '4',
  'help': 'The number of times the 3D reconstruction should be iterated',
  'option': "['--m3diter']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Use the traditional e2make3d program instead of the new e2make3dpar '
          'program',
  'option': "['--m3dold']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': "Creates a 'virtual' BDB stack with its own metadata, but the binary "
          'data taken from the (filtered) list of stacks',
  'option': "['--makevstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Density map file',
  'option': "['--mapfile']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Generate initial maps by randomly removing portions of the input '
          'map rather than by phase randomizing.',
  'option': "['--mapfragment']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Density threshold, bonds on density lower than threshold is not '
          'prefered',
  'option': "['--mapthresh']",
  'type': 'float'},
 {'count': 1,
  'default': '1000',
  'help': 'Weight of density, to balance between geometry and density score',
  'option': "['--mapweight']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Requires --tltfile. This will mask out from tilted '
          "images the info that isn't present at the 0 tilt angle. It uses the "
          "tomo.tiltedgemask processor (type 'e2help.py processors' at the "
          'commandline to read a description of the processor and its '
          'parameters). Provide --maskbyanglefalloff and --maskbyanglesigma to '
          'modify the default parameters.',
  'option': "['--maskbyangle']",
  'type': 'None'},
 {'count': 1,
  'default': '4',
  'help': 'Default=4. Number of pixels over which --maskbyangle will fall off '
          'to zero.',
  'option': "['--maskbyanglefalloff']",
  'type': 'int'},
 {'count': 1,
  'default': '2',
  'help': 'Default=2.0. Number of sigmas for the width of the gaussian fall '
          'off in --maskbyangle and --maskbyanglefalloff',
  'option': "['--maskbyanglesigma']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified, each output subparticle will be masked based on the '
          'projection mask. Recommended.',
  'option': "['--masked']",
  'type': 'None'},
 {'count': 1,
  'default': '0.1',
  'help': 'Fall offf of the Gaussian mask, default=0.1',
  'option': "['--maskfoff']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=none. If specified, this mask will be performed after the '
          'built-in automask, eg - mask.soft to remove the core of a virus',
  'option': "['--maskproc']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'Mask the recon using a spherical Gaussian mask (-1 = None), '
          'default=-1.0',
  'option': "['--maskrad']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'File containing the reference to compare the masked volumes with '
          '(required with --mask)',
  'option': "['--maskref']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F) For individual particles, the area outside a circle with the '
          'radius of the particle will be set to zeros prior to taking the '
          'Fourier transform',
  'option': "['--maskzeroes']",
  'type': 'None'},
 {'count': 1,
  'default': '20',
  'help': 'Threshold of total mass of each continous object to be considered a '
          'particle.',
  'option': "['--massthresh']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Only include dictionaries matching the provided Python regular '
          'expression',
  'option': "['--match']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'this will match the power spectrum of each image in --input to that '
          '--fillimage so that things are properly normalized.',
  'option': "['--matchto']",
  'type': 'None'},
 {'count': 1,
  'default': '0,0,0,0,0,0,0,0,0,0,0,0',
  'help': 'transform matrix.',
  'option': "['--matrix']",
  'type': 'str'},
 {'count': 1,
  'default': '2',
  'help': 'Maximumum number of unassigned helices',
  'option': "['--maxbad']",
  'type': 'int'},
 {'count': 1,
  'default': '5000',
  'help': 'Files with a B-factor higher than specified will be skipped',
  'option': "['--maxbfactor']",
  'type': 'float'},
 {'count': 1,
  'default': '64',
  'help': 'maximum fourier box size to use. 2 x target Fourier radius.',
  'option': "['--maxboxsz']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Maximum memory (in GB) available for each thread',
  'option': "['--maxmemory']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (which means this option is off by default and not used). '
          "This is the maximum number of particles ('multiplicity') that any "
          'two given averages can have to be allowed to merge. For example, if '
          'at some point (some given iteration in the algorithm) a particular '
          'average "A" is an average of 10 particles, and --maxmergenum=8, '
          'this average "A" will only be allowed to merge with other averages '
          'that have 8 particles or less in them. This maintains "big classes" '
          'in a mutually exclusive state. For example, if --maxmergenum=1, '
          'particles will merge pair-wise in the first round; but after that '
          'averages with more than one particle will NOT merge each other, '
          'because they will contain 2 or more particles, which exceeds '
          "'maxmergenum'. So in subsequent iterations, the averages formed in "
          'the first iteration will continue to take up raw particles or new '
          'averages (between single raw particles) might emerge; but "large '
          'averages" never inter-merge',
  'option': "['--maxmergenum']",
  'type': 'int'},
 {'count': 1,
  'default': '10',
  'help': 'Maximum error match between pairs of helices, default=50',
  'option': "['--maxpairerr']",
  'type': 'float'},
 {'count': 1,
  'default': '180',
  'help': 'Maximum tiltangle permitted when finding tilt distances',
  'option': "['--maxtiltangle']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'A value of 1 flips gain image vertically, 2 flips gain image '
          'horizontally. Default is 0.',
  'option': "['--mc2_flipgain']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Use this many patches along X with MotionCor2. Default is 1, i.e. '
          'whole-frame alignment.',
  'option': "['--mc2_patchX']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Use this many patches along Y with MotionCor2. Default is 1, i.e. '
          'whole-frame alignment.',
  'option': "['--mc2_patchY']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Rotates the gain 90 degress counter clockwise X times. Rotation is '
          'applied before flipping.',
  'option': "['--mc2_rotgain']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Indicates that the first image in the basis set is actually the '
          'mean image, which should be subtracted prior to projection. Output '
          'from e2msa requires this flag.',
  'option': "['--mean1']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Merge even odd lst.',
  'option': "['--mergeeo']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'merge low resolution information of the two subset.',
  'option': "['--mergelowres']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify the output name here. This will merge all of the input .lst '
          'files into a single (resorted) output',
  'option': "['--mergesort']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': "A string denoting micrograph type. For example 'mrc', 'hdf', 'ser' "
          '...',
  'option': "['--micsuffix']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'middle layer input',
  'option': "['--midinput']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'middle layer output',
  'option': "['--midout']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform CTF processing for projects targeting 7-15 A resolution',
  'option': "['--midres']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Files with a B-factor lower than specified will be skipped',
  'option': "['--minbfactor']",
  'type': 'float'},
 {'count': 1,
  'default': '10',
  'help': 'minimum distance between particles in A. for reextraction only',
  'option': "['--mindist']",
  'type': 'float'},
 {'count': 1,
  'default': '6',
  'help': 'Minimum residues in a helix',
  'option': "['--minhelix']",
  'type': 'int'},
 {'count': 1,
  'default': '2',
  'help': 'Try to eliminate classes with fewer than specified members. '
          'Default=2',
  'option': "['--mininclass']",
  'type': 'int'},
 {'count': 1,
  'default': '1',
  'help': 'Minimum number of projections/images in a class average, for a '
          'class average to be used for a reconstruction, default=auto',
  'option': "['--minproj']",
  'type': 'int'},
 {'count': 1,
  'default': '4',
  'help': 'skip the first x pixel in fourier space',
  'option': "['--minrespx']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0.0 (which means this option is off by default and not '
          'used). Percent of the maximum score to use as a threshold for the '
          'minimum score to allow. For example, if the best pair in the first '
          'iteration yielded a score of -15.0, and you supply --minscore=0.9, '
          'any pair-wise alignments with a score worse than -15*0.9 = -13.5 '
          "will be forbidden. Remember that 'more negative' is 'better' in "
          'EMAN2.',
  'option': "['--minscore']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': "Minimum number of 'good tiles' in strip to consider it.",
  'option': "['--mintiles']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Options are x or y, and the mirrored copy of the 2-D images will be '
          'generated before being put into the tilt series.',
  'option': "['--mirroraxis']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Operates only on images with missing __ctf_flip_invar files, for '
          'cases where a previous run failed before completion',
  'option': "['--missingonly']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'output trained model file. only used when --projs is provided',
  'option': "['--modelout']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Comma separated list of reference maps used for classification. If '
          'a single map is provided, data will be split into two groups based '
          'on similarity to the single map.',
  'option': "['--models', '--model']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'The map to use as a starting point for refinement',
  'option': "['--models']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Sample more tiles during reconstruction. Slower, but reduce '
          'boundary artifacts when the sample is thick',
  'option': "['--moretile']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Move raw data to directory ./raw_micrographs after filtration',
  'option': "['--moverawdata']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'use MPI version',
  'option': "['--MPI']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'this is an experimental option',
  'option': "['--mraprep']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': '(deprecated, use --outmode instead) output as 16 bit MRC file',
  'option': "['--mrc16bit']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': '(deprecated, use --outmode instead) output as 8 bit MRC file',
  'option': "['--mrc8bit']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If set will apply a range of different comparators to the aligned '
          'particle data and generate a multicolumn text file',
  'option': "['--multicmp']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'n1.',
  'option': "['--n1']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'n2.',
  'option': "['--n2']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'n3.',
  'option': "['--n3']",
  'type': 'float'},
 {'count': 1,
  'default': '5',
  'help': 'Number of alignment references to when determining particle '
          'orientations',
  'option': "['--naliref']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Only display the matching filenames. No other info.',
  'option': "['--nameonly']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Prefix of micrographs to be processed.',
  'option': "['--nameroot']",
  'type': 'str'},
 {'count': 1,
  'default': '10',
  'help': 'Number of batches per iteration',
  'option': "['--nbatch']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Used for histogram plot. Default=0 (not used). Number of bins for '
          'histogram. If not provided, the optimal bin number will be '
          "automatically calculated based on bin-width, computed using Scott's "
          "normal reference rule, width = (3.5*std)/cuberoot(n), where 'std' "
          'is the standard deviation of the distribution of scores and n is '
          'the number of values considered. Then, bins will be nbins = '
          '(max(scores) - min(scores)) / width.',
  'option': "['--nbins']",
  'type': 'int'},
 {'count': 1,
  'default': '2',
  'help': 'Number of classes. Default is 2.',
  'option': "['--nclass']",
  'type': 'int'},
 {'count': 1,
  'default': '1.05',
  'help': 'Specify how much to multiply noise cutoff during flattening '
          'amplitude correction. Default is 1.05.',
  'option': "['--ncmult']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform nearest-neighbor instead of linear Fourier-space '
          'interpolation',
  'option': "['--nearest_neighbor']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This indicates that the tilt series goes from -tiltrange to '
          '+tiltrange, or 0 to -tiltrange, then +tiltstep to +tiltrange if '
          '--bidirectional is specified.',
  'option': "['--negativetiltseries']",
  'type': 'None'},
 {'count': 1,
  'default': '54',
  'help': 'Number of additional particles to average with each particle. '
          'Default=5',
  'option': "['--nenrich']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Tag of the output neural net file. Will use the tag of good '
          'particles in training set by default.',
  'option': "['--nettag']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'new pipeline format',
  'option': "['--new']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'New box size for extracted regions',
  'option': "['--newbox']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Label of output particles. Same as original particle label by '
          'default.',
  'option': "['--newlabel']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Use the new 3D widgetD. Highly recommended!!!!',
  'option': "['--newwidget']",
  'type': 'None'},
 {'count': 1,
  'default': '5',
  'help': 'number of frames in the trajectory',
  'option': "['--nframe']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'default=0 (not used). Number of expected frames per tilt angle, '
          'used to check whether errors occur in the stacking of images.',
  'option': "['--nframes']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Number of input particles to read (first n in the file)',
  'option': "['--ninput']",
  'type': 'int'},
 {'count': 1,
  'default': '4',
  'help': 'Run this many iterations. Default is 4.',
  'option': "['--niters']",
  'type': 'int'},
 {'count': 1,
  'default': '40,40,1',
  'help': 'Number of kernels for each layer, from input to output. The number '
          'of kernels in the last layer must be 1.',
  'option': "['--nkernel']",
  'type': 'str'},
 {'count': 1,
  'default': '4',
  'help': 'size of the middle layer',
  'option': "['--nmid']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Trained network input (nnet_save_xx.hdf)',
  'option': "['--nnet']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Disable CTF determination',
  'option': "['--no_ctf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Don't use the database cache for this operation",
  'option': "['--nocache']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Turns the ouput png(s) into grey scale figures. Instead of using '
          'different colors to distinguish between various curves on the same '
          'plot, this option will have the program automatically use different '
          'markers in black and white for each curve.',
  'option': "['--nocolor']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Removes the comments from each line of the lst file.',
  'option': "['--nocomments']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'skip ctf correction.',
  'option': "['--noctf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If particle file was .lst, normally the output .lst will reference '
          'the original image file. With this option, the output will '
          'reference the .lst file instead, creating a lst pointing to another '
          'lst.',
  'option': "['--noderef']",
  'type': 'None'},
 {'count': 1,
  'default': 'nodes.hdf',
  'help': '',
  'option': "['--nodes']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Overrides the requirement that the class-averages be made from '
          '_fullres particle images.',
  'option': "['--nofullresok']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If selected, the final iteration will turn off gold-standard '
          'behavior and both halves will be refined from the same model. '
          'Normally used with --tophat=local.',
  'option': "['--nogoldfinal']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Skip gold standard. This is not a great idea...',
  'option': "['--nogs']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Do not launch the GUI and set the average of the missing wedge '
          'statistics on all the volumes.',
  'option': "['--nogui']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Add Gaussian Noise',
  'option': "['--noise']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'Maximum resolution to examine for determining the noise parameters.',
  'option': "['--noisemax']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'Minimum resolution to examine for determining the noise parameters.',
  'option': "['--noisemin']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Skip writting lst output.',
  'option': "['--nolstout']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'no mask',
  'option': "['--nomask']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Suppress writing the average image as the first output image',
  'option': "['--nomean']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Suppress subtracting the mean from each input image, also implies '
          '--nomean',
  'option': "['--nomeansub']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If True, a new --path directory will not be made. '
          'Therefore, whatever is sepcified in --path will be used as the '
          'output directory. Note that this poses the risk of overwriting '
          'data.',
  'option': "['--nonewpath']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Suppress per image real-space normalization',
  'option': "['--nonorm']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'will set --range to eliminate a few of the most extreme values from '
          'both ends of the histogram',
  'option': "['--nooutliers']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'No padding between boxes',
  'option': "['--nopad']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Turns off all preprocessing that happens only once before alignment '
          '(--normproc, --mask, --maskfile, --clip, --threshold; i.e., all '
          'preprocessing excepting filters --highpass, --lowpass, '
          '--preprocess, and --shrink.',
  'option': "['--nopreprocprefft']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Normally a radial correction will be applied based on the --mode '
          'used. This option disables that correction.',
  'option': "['--noradcor']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Suppress independent phase randomization of input map. Only '
          'appropriate if input map has been preprocessed in some suitable '
          'fashion.',
  'option': "['--norandomphase']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'skip existing files. do not rewrite.',
  'option': "['--norewrite']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Normalize averages',
  'option': "['--normavg']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Normalize the dot product for each component of the output vector. '
          'If the basis spans the input vector, then the projected vector '
          'length will be 1, otherwise it will be less than 1.',
  'option': "['--normcomponent']",
  'type': 'None'},
 {'count': 1,
  'default': 'normalize.edgemean',
  'help': 'Apply a real space normalization to each input before FSC. Default '
          "normalize.edgemean. Use 'none' to disable.",
  'option': "['--normin']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Disable radius tick labels',
  'option': "['--norticklabels']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If on, the program will generate stacks of "perfect '
          'particles" in different random orientations, but with no missing '
          'wedge, no noise, no ctf parameters, etc. The output randstack.hdf '
          'will be identical to simptcls.hdf',
  'option': "['--nosim']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Normally the multi-model refinement will be followed by N single '
          'model refinements automatically. If this is set the job will finish '
          'after making the split data sets.',
  'option': "['--nosingle']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Disable smoothing of the background (running-average of the log '
          'with adjustment at the zeroes of the CTF)',
  'option': "['--nosmooth']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Disable Theta tick labels',
  'option': "['--nothetaticklabels']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Do not write temporary files.',
  'option': "['--notmp']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. This will prevent the simulated particles from being '
          'rotated and translated into random orientations.',
  'option': "['--notrandomize']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Do not fill the missing wedge before classification.',
  'option': "['--nowedgefill']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If you    turn on this option and --subtiltsdir is provided, the '
          'position in Z of each subtomogram   will not be considered for CTF '
          'correction',
  'option': "['--nozcorrection']",
  'type': 'None'},
 {'count': 1,
  'default': '20',
  'help': 'Number of landmarks to use (such as gold fiducials). Default is 20.',
  'option': "['--npk']",
  'type': 'int'},
 {'count': 1,
  'default': '10',
  'help': 'Default=10. Number of simulated subtomograms to generate per '
          'reference model supplied.',
  'option': "['--nptcls']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'number of points to initialize.',
  'option': "['--npts']",
  'type': 'int'},
 {'count': 1,
  'default': '2000',
  'help': 'number of samples',
  'option': "['--nsample']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Maximum number of particles   to use. For example, if you supply a '
          'stack with 150 subtomograms, the program will   automatically '
          "select 128 as the limit to use because it's the largest power of 2 "
          'that is   smaller than 150. But if you provide, say '
          '--nseedlimit=100, then the number of particles   used will be 64, '
          "because it's the largest power of 2 that is still smaller than 100.",
  'option': "['--nseedlimit']",
  'type': 'int'},
 {'count': 1,
  'default': '3',
  'help': 'Default=3.0. Number of standard deviations above the mean to '
          'determine pixels to mask out (erase).',
  'option': "['--nsigmas']",
  'type': 'float'},
 {'count': 1,
  'default': '1',
  'help': 'number of solutions to keep at low resolution for the aligner',
  'option': "['--nsoln']",
  'type': 'int'},
 {'count': 1,
  'default': '1',
  'help': 'number of peaks in the global search to refine, default=1.0',
  'option': "['--nsolns']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Number of output particles to generate (mainly for reverse mode)',
  'option': "['--nsort']",
  'type': 'int'},
 {'count': 1,
  'default': '2',
  'help': 'build trajectories from -n x std to n x std of eigenvalues. default '
          'is 2',
  'option': "['--nstd']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). If you supply an even number 1 will be added '
          'to it (for example, 4 will be turned into 5). If --ntiltslow>0, it '
          'specifies the number of tiltimages to keep in each subtiltseries, '
          'starting from the zero-tilt image and incorporating particles from '
          'right and left, one at a time. For example, in a tiltseries from '
          '-60 to 60 degress with a step size of 2 degrees, --ntiltslow=5 '
          'would keep tiltimages at angles 0,2,-2,-4,-4.',
  'option': "['--ntiltslow']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). If --ntiltslowneg>0, it specifies the number '
          'of tiltimages to keep in each subtiltseries, starting from the '
          'zero-tilt image and progressively incorporating particles from '
          'negatively tilted images only. For example, in a tiltseries from '
          '-60 to 60 degress with a step size of 2 degrees, --ntiltslowneg=5 '
          'would keep tiltimages at angles 0,-2,-4,-6,-8.',
  'option': "['--ntiltslowneg']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). If --ntiltslowpos>0, it specifies the number '
          'of tiltimages to keep in each subtiltseries, starting from the '
          'zero-tilt image and progressively incorporating particles from '
          'positively tilted images only. For example, in a tiltseries from '
          '-60 to 60 degress with a step size of 2 degrees, --ntiltslowpos=5 '
          'would keep tiltimages at angles 0,+2,+4,+6,+8.',
  'option': "['--ntiltslowpos']",
  'type': 'int'},
 {'count': 1,
  'default': '10',
  'help': 'The number of different initial models to generate in search of a '
          'good one',
  'option': "['--ntry']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'extract the particle indexes (numbers) only from an lst file into a '
          'text file (one number per line).',
  'option': "['--numaslist']",
  'type': 'str'},
 {'count': 1,
  'default': '8',
  'help': '# of classes',
  'option': "['--numclasses']",
  'type': 'int'},
 {'count': 1,
  'default': '25',
  'help': '# of iterations to refine',
  'option': "['--numiter']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'old rtf+refine aligner',
  'option': "['--old']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Path to the original refinement (input, required)',
  'option': "['--oldpath']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'omega.',
  'option': "['--omega']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'Randomly omit this percentage of atoms in the output map.',
  'option': "['--omit']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Create only a single class-average. Specify the number.',
  'option': "['--oneclass']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Read 1-d input images from a single 2-D image (oneout in '
          'e2basis.py, default out e2msa.py)',
  'option': "['--onein']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Read 1-d input images from a single 2-D image where the first 4 '
          'elements on each row are da,dx,dy,flip',
  'option': "['--oneinali']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Output is a single 2-D image rather than a set of 1-D images',
  'option': "['--oneout']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': '(T/F)Only flip phases?',
  'option': "['--onlyflipphase']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Will skip any files for which __ctf_flip files already exist.',
  'option': "['--onlynew']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Will skip any files for which __ctf_flip_invar files already exist.',
  'option': "['--onlynoinvar']",
  'type': 'None'},
 {'count': 1,
  'default': '0.1',
  'help': 'Penalization to apply during robust regression. Default is 0.1. If '
          '0.0, unpenalized least squares will be performed (i.e., no '
          'trajectory smoothing).',
  'option': "['--optalpha']",
  'type': 'float'},
 {'count': 1,
  'default': '512',
  'help': 'Box size to use during alignment optimization. Default is 512.',
  'option': "['--optbox']",
  'type': 'int'},
 {'count': 1,
  'default': 'robust',
  'help': 'Use this approach to determine relative frame translations. Note: '
          "'robust' utilizes a bimodal Gaussian to robustly determine CCF "
          'peaks between pairs of frames in the presence of a fixed '
          'background.',
  'option': "['--optccf']",
  'type': 'str'},
 {'count': 1,
  'default': '448',
  'help': 'Step size to use during alignment optimization. Default is 448.',
  'option': "['--optstep']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify a comma separated list of class numbers to extract in '
          'oriented particles mode.',
  'option': "['--orientclassn']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Filename of a cls_result_xx or classmx_xx file.',
  'option': "['--orientcls']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Filename of the set (.lst file) with the particles used for the '
          '--orientcls file',
  'option': "['--orientedparticles']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'If the input stack was derived from another stack, you can provide '
          'the name of the original stack here',
  'option': "['--original']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Adds the original STAR name as a comment on each image',
  'option': "['--origname']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Optional. If specified, this mask is projected into 2-D and used to '
          'mask out noise outside the subunit. If not specified a thresholded '
          'subunitmask is used. Only useful with --masked.',
  'option': "['--outermask']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'If selected, classes with fewer than mininclass particles will move '
          'permanently to an outlier class (the last class)',
  'option': "['--outlierclass']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified, floating point values will not be rescaled when '
          'writing data as integers. Values outside of range are truncated.',
  'option': "['--outnorescale']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify a destination folder for the compressed files. This will '
          'avoid overwriting existing files.',
  'option': "['--outpath']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Skips all of the initial steps, and just generates the final '
          'output, assuming previous steps completed successfully',
  'option': "['--outputonly']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Tag of the segmentation output. When left empty, the segmentation '
          "will be saved to 'segmentations/<tomogram name>__<neural network "
          "tag>_seg.hdf'. When set, the output will be written to "
          "'segmentations/<tomogram name>__<outtag>.hdf'",
  'option': "['--outtag']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Clip the output volume in x to this size. The default size is the '
          'nx size of the input images.',
  'option': "['--outxsize']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Clip the output volume in y to this size. The default size is the '
          'ny size of the input images.',
  'option': "['--outysize']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Clip the output volume in z to this size. The default size is the '
          'nx size of the input images.',
  'option': "['--outzsize']",
  'type': 'int'},
 {'count': 1,
  'default': '4',
  'help': 'Amount of oversampling to use in local resolution windows. Larger '
          'value -> larger output map',
  'option': "['--overlap']",
  'type': 'int'},
 {'count': 1,
  'default': '1',
  'help': 'Oversampling factor',
  'option': "['--oversamp']",
  'type': 'int'},
 {'count': 1,
  'default': '4',
  'help': 'Oversample noise image to smooth transitions from regions with '
          'different noise.',
  'option': "['--oversample']",
  'type': 'int'},
 {'count': 1,
  'default': '2',
  'help': 'padding factor',
  'option': "['--padtwod']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Will use the ref1/ref2 pair to generate a mask which is applied '
          'after subtracting ref1 from the particle',
  'option': "['--pairmask']",
  'type': 'None'},
 {'count': 1,
  'default': 'thread:4',
  'help': 'Run in parallel, specify type:<option>=<value>:<option>=<value>. '
          'See http://blake.bcm.edu/emanwiki/EMAN2/Parallel',
  'option': "['--parallel', '-P']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Comma separated pairs of parameter:value. The parameter will be '
          'changed to the value specified.',
  'option': "['--params']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'particle_parms_xx.json file from spt_refine, this provides both the '
          'input particles and alignment parameters',
  'option': "['--parm']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Input labels for particle file',
  'option': "['--particles_label']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Input raw particle file',
  'option': "['--particles_raw']",
  'type': 'str'},
 {'count': 1,
  'default': '110',
  'help': 'choose whether to adjust position, amplitude, sigma. use 3 digit '
          '0/1 input. default is 110, i.e. only adjusting position and '
          'amplitude',
  'option': "['--pas']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'use patch tracking before landmark based alignment. input 0/1/2 as '
          'the number of patch tracking iterations.',
  'option': "['--patchtrack']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Path to the classified results (output). Default = multinoali_XX',
  'option': "['--path', '--newpath']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': '<pdb file> Show PDB structure.',
  'option': "['--pdb']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify one or mode pdb files you   wish to view',
  'option': "['--pdbfiles']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Name of file to write center of segments in PDB format.',
  'option': "['--pdbout']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform phase flipping after CTF determination and writes to '
          'specified file.',
  'option': "['--phaseflip']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Perform phase flipping with auto-high pass filter (deprecated)',
  'option': "['--phasefliphp']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If specified _proc particles will be generated. Typical = '
          'filter.lowpass.gauss:cutoff_freq=.07',
  'option': "['--phaseflipproc']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If specified _proc particles will be generated. Typical = '
          'filter.highpass.gauss:cutoff_freq=.005',
  'option': "['--phaseflipproc2']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If specified _proc particles will be generated. Typical = '
          'math.meanshrink:n=2',
  'option': "['--phaseflipproc3']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If specified _proc particles will be generated.',
  'option': "['--phaseflipproc4']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If specified _proc particles will be generated.',
  'option': "['--phaseflipproc5']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Produce an output set with 1/2 size particles for faster initial '
          'model work (deprecated)',
  'option': "['--phaseflipsmall']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This will   perform phase flipping on images of an aligned tilt '
          'series on a strip-by-strip basis,   assuming the supplied ctf '
          'parameters correspond to the proper values at the tilt axis,   '
          'either the same values for all images '
          '(--defocus,--ampcont,--cs,--apix,--voltage,--bfactor)   or a '
          'different set for each (--ctfparamsfile), taking into account the '
          'tilt angle for    each image (--tltfile), which should be supplied '
          'through an IMOD-like .tlt file.',
  'option': "['--phaseflipstrips']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This    will perform phase flipping on the entire image for each '
          'image in an aligned tilt    series using the CTF parameters '
          'supplied.',
  'option': "['--phaseflipwhole']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'phi.',
  'option': "['--phi']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'lower bound for the inplane angle phi, default=0.0',
  'option': "['--phi0']",
  'type': 'float'},
 {'count': 1,
  'default': '359',
  'help': 'Upper bound for the inplane angle phi, default=359.0',
  'option': "['--phi1']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Cycle through the sequence forwards then backwards',
  'option': "['--pingpong']",
  'type': 'None'},
 {'count': 1,
  'default': '-5',
  'help': 'Maximum Density value of landmarks (n sigma). Default is -5',
  'option': "['--pk_maxval']",
  'type': 'float'},
 {'count': 1,
  'default': '0.125',
  'help': 'Minimum distance between landmarks, as fraction of micrograph '
          'length. Default is 0.125',
  'option': "['--pk_mindist']",
  'type': 'float'},
 {'count': 1,
  'default': '0.8',
  'help': 'fraction of particles to keep',
  'option': "['--pkeep']",
  'type': 'float'},
 {'count': 1,
  'default': '0.9',
  'help': 'Fraction of landmarks to keep in the tracking.',
  'option': "['--pkkeep']",
  'type': 'float'},
 {'count': 1,
  'default': 'xy',
  'help': 'Change the plane of image processing, useful for processing 3D mrcs '
          'as 2D images.',
  'option': "['--plane']",
  'type': 'str'},
 {'count': 1,
  'default': '360',
  'help': 'Maximum out of plane threshold for the tiltaxis. 0 = perfectly in '
          'plane, 1 = normal to plane',
  'option': "['--planethres']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Data file(s) should be plotted rather than displayed in 2-D',
  'option': "['--plot']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Data file(s) should be plotted rather than displayed in 3-D',
  'option': "['--plot3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'FSC curves to plot in separate plots. Skips fsc curve generation. '
          'Provide .txt. files separated by commas '
          '--plotonly=file1.txt,file2.txt,file3.txt etc...',
  'option': "['--plotonly']",
  'type': 'str'},
 {'count': 1,
  'default': 'plot_ligand.txt',
  'help': 'Name of a text file for the classification plot.',
  'option': "['--plotout']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'list of 2d particle with alignment parameters. will reconstruct '
          'before alignment.',
  'option': "['--plst']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'The relative scale of the points plotted. The absoule size is '
          'dpenedent on particle count',
  'option': "['--pointwidth']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Degree of the polynomial to fit.',
  'option': "['--polydegree']",
  'type': 'int'},
 {'count': 1,
  'default': '2,1,1',
  'help': 'Pooling size for each layer. Note the number of layers should be '
          'the same as the nkernel option.',
  'option': "['--poolsz']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'masking after 3d particle reconstruction. The mask is transformed '
          'if json',
  'option': "['--postmask']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'processor after 3d particle reconstruction',
  'option': "['--postproc']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'auto positioning along z axis',
  'option': "['--posz']",
  'type': 'None'},
 {'count': 1,
  'default': '0.01',
  'help': "Precision to determine what solutions are the 'same' used only "
          'statistics output, default=0.01',
  'option': "['--prec']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': '"Make sure that only valid images found by --input=* are processed '
          '-if unreadable or bad images are fed to the program, it might '
          'crash.',
  'option': "['--precheckfiles']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Standard deviation in degrees to use to generate a '
          'set of orientations with a mean altitude equal to 90 degrees. Works '
          'in conjuction with --preferredtop, in which case half of the '
          "particles will be biased towards 'top' view orientations and half "
          "towards 'side' view orientations.",
  'option': "['--preferredside']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Standard deviation in degrees to use to generate a '
          'set of orientations with a mean altitude equal to 180 and 0 degrees '
          '(half of the particles will be oriented around mean alt=0, half '
          'around mean alat=180). Works in conjuction with --preferredside, in '
          "which case half of the particles will be biased towards 'top' view "
          "orientations and half towards 'side' view orientations.",
  'option': "['--preferredtop']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0. Requires IMOD to be installed. Used to apply prenad '
          "filtering to a tiltseries. This is the --maxite parameter in IMOD's "
          'preNAD program (maximum number of iterations).',
  'option': "['--prenadmaxite']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0. Requires IMOD to be installed. Used to apply prenad '
          "filtering to a tiltseries. This is the --minite parameter in IMOD's "
          'preNAD program (minimum number of iterations).',
  'option': "['--prenadminite']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0. Requires IMOD to be installed. Used to apply prenad '
          "filtering to a tiltseries. This is the --sigma parameter in IMOD's "
          "preNAD program (initial sigma for 'smoothing structure tensor').",
  'option': "['--prenadsigma']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Print all symmetry transformation matrices, and exit',
  'option': "['--print_symmetry']",
  'type': 'None'},
 {'count': 1,
  'default': '180',
  'help': 'Print the particle number if the orientation mismatch is larger '
          'than the specified angle in the last pair of files',
  'option': "['--printbad']",
  'type': 'float'},
 {'count': 1,
  'default': 'filter.lowpass.gauss:cutoff_abs=.25',
  'help': 'If specified _proctag files will be generated. Typical = '
          'filter.lowpass.gauss:cutoff_abs=.25',
  'option': "['--proc1']",
  'type': 'None'},
 {'count': 1,
  'default': 'filter.highpass.gauss:cutoff_pixels=5',
  'help': 'If specified _proctag tomograms will be generated. Typical = '
          'filter.highpass.gauss:cutoff_pixels=5',
  'option': "['--proc2']",
  'type': 'None'},
 {'count': 1,
  'default': 'normalize',
  'help': 'If specified _proctag tomograms will be generated.',
  'option': "['--proc3']",
  'type': 'None'},
 {'count': 1,
  'default': 'threshold.clampminmax.nsigma:nsigma=3',
  'help': 'If specified _proctag tomograms will be generated. Typical = '
          'threshold.clampminmax.nsigma:nsigma=3',
  'option': "['--proc4']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'If specified _proctag tomograms will be generated.',
  'option': "['--proc5']",
  'type': 'None'},
 {'count': 1,
  'default': 'imod_alignframes',
  'help': 'Use this external program to align frames. Choose between '
          'imod_alignframes and ucsf_motioncor2. Note, programs must be '
          'accessible from your PATH environment variable.',
  'option': "['--program']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'When generating subspace projections, use this file instead of the '
          'input used for the MSA',
  'option': "['--projin']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'projections with orientations (in hdf header or comment column of '
          'lst file) to train model',
  'option': "['--projs']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Pruned based on ccc mean and sigma.',
  'option': "['--pruneccc']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Generate a projection along the z-axis of potential particles, and '
          'compare to a projection of the template.',
  'option': "['--pruneprj']",
  'type': 'None'},
 {'count': 1,
  'default': '0.1',
  'help': 'Default=0.1.   Decimal number that indicates the percentage of '
          "--tilesize (in terms of side length)    to tolerate of 'bad' values "
          '(i.e., empty regions of constant density) at the corners,    and '
          'still include the tile for CTF fitting. For example, if '
          '--tilesize=256, and   --prunetest=0.1, a box of ~25-26 pixels each '
          'corner of every tile will be analyzed   and if the standard '
          'deviation of any of the corners is 0, the tile will be excluded.   '
          'To turn off this option supply --prunetest=-1.0. The program '
          'automatically adjusts    things so that the minimum size of regions '
          'at the corners to check will be 4x4 pixels.',
  'option': "['--prunetest']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'psi in spider convention.',
  'option': "['--psi']",
  'type': 'float'},
 {'count': 1,
  'default': '10,15,5',
  'help': 'phase shift range (start, end, step). default is 10, 15, 5',
  'option': "['--psrange']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Save coordinates of the centers of particles to the specified '
          'formatted text file',
  'option': "['--ptcl-coords', '-P']",
  'type': 'str'},
 {'count': 1,
  'default': 'multiple',
  'help': "Options for saving particle images to stack files. 'single' uses "
          "one stack file, 'multiple' (default) uses one stack file per helix, "
          "'none' uses a file for each particle and is always used when the "
          'output file format does not support image stacks.',
  'option': "['--ptcl-images-stack-mode']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Save images of the particles. The file name specified will have '
          'helix numbers (and particle numbers if the file type does not '
          'support image stacks) added to it.',
  'option': "['--ptcl-images', '-p']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'Particle length in pixels',
  'option': "['--ptcl-length']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Apply the normalize.edgemean processor to each particle.',
  'option': "['--ptcl-norm-edge-mean']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Particles are oriented as on the micrograph. They are square with '
          'length max(ptcl_length, ptcl_width).',
  'option': "['--ptcl-not-rotated']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Particle overlap in pixels',
  'option': "['--ptcl-overlap']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Particle width in pixels',
  'option': "['--ptcl-width']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'The estimated radius of the particle in pixels.',
  'option': "['--ptclradius']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'particles input for alignment',
  'option': "['--ptclsin']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'Longest axis of particle in pixels (diameter, not radius)',
  'option': "['--ptclsize']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'aligned particle output',
  'option': "['--ptclsout']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Name of the stack containing a few sample particles picked from the '
          'tomogram, used to create an initial template.                with '
          'which to search for particles throughout the tomogram.',
  'option': "['--ptclstack']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'q in sgirot convention.',
  'option': "['--q']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Use Quaterions for tilt distance computation',
  'option': "['--quaternion']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Use a slight approximation to the Gaussian during insertion. Does '
          'not support B-factors.',
  'option': "['--quick']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Verbose is the default',
  'option': "['--quiet']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'For use in the GUI, truncate the polar plot after R. -1 = no '
          'truncation',
  'option': "['--radcut']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Generate initial maps by randomly assigning the particles in each '
          'class to each model after the first iteration.',
  'option': "['--randclassify']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'split into N random classes. ignore refs',
  'option': "['--randnclass']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Specifying N will randomly seed N particles on density above '
          'threshold. default is -1, means only choosing peaks. Useful for '
          'non-globular particles',
  'option': "['--random']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Selects a random subset of N particles from the file to operate on.',
  'option': "['--randomn']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Randomize initial model to certain frequency.',
  'option': "['--randomphase']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Instead of seeding with a random volume, seeds by randomizing input '
          'orientations',
  'option': "['--randorient']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Generate initial maps by randomizing the phase of the given model.',
  'option': "['--randphase']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. If you already have a stack of particles (presumably '
          'in random orientations) you can supply it here.',
  'option': "['--randstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'randomize symmetry unit assignment at the begining. seems to be '
          'helpful for high symmetry without obvious asymetrical features..',
  'option': "['--randsym']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': "Average frames 'n1-n2'",
  'option': "['--rangeali']",
  'type': 'str'},
 {'count': 1,
  'default': '10',
  'help': 'High resloution limit used for classification',
  'option': "['--rclas']",
  'type': 'float'},
 {'count': 1,
  'default': 'ccc',
  'help': "comparitor and params to use for the 3D refiner, default='ccc'",
  'option': "['--rcmp']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'This will recompute the mean from the input set and subtract before '
          'projection. Useful if a different normalization is used than in the '
          'original basis file.',
  'option': "['--recalcmean']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'default=False. This parameter requires --classmx and will recompute '
          'averages (for example, even and odd) based on the classmx file and '
          'the alignment parameters specified therein for each particle. No '
          'refinements will follow. This is exclusively for recomputing '
          'averages.',
  'option': "['--recompute']",
  'type': 'None'},
 {'count': 1,
  'default': 'trilinear',
  'help': 'Intepolation mode for reconstruction. default is trilinear. check '
          'e2help.py for details. Not recommended to change.',
  'option': "['--reconmode']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Recomputes bispectra from masked particles',
  'option': "['--redobispec']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Recomputes harmonic power from masked particles',
  'option': "['--redoharmonic']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Recomputes invariants',
  'option': "['--redoinvar']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Optional: Specify a label for the averaged dark and gain references '
          'when using multiple, individual frames. A labeled will be written '
          'as movierefs/dark_<label>.hdf and movierefs/gain_<label>.hdf. Note: '
          'This option is ignored when using a single reference image/stack.',
  'option': "['--ref_label']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'The reference volume for orientation determination.',
  'option': "['--ref_volume']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Rather than using a mask, ref1/ref2 permit using a pair of volumes '
          'for classification.',
  'option': "['--ref1']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Rather than using a mask, ref1/ref2 permit using a pair of volumes '
          'for classification.',
  'option': "['--ref2']",
  'type': 'str'},
 {'count': 1,
  'default': 'bt',
  'help': "Method for generating the initial reference(s). Options are 'bt', "
          "for binary tree (see e2spt_binarytree.py), 'hac', for hierarchical "
          "ascendant classification (see e2spt_hac.py), or 'ssa' for "
          'self-symmetry alignment (see e2symsearch3d.py). Default=bt',
  'option': "['--refgenmethod']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'If supplied, the header of this image will be copied to the header '
          'of all images in --input.',
  'option': "['--refheader']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'similar to retype, but replaces the full filename of the source '
          'image file with the provided string',
  'option': "['--refile']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': "do defocus refinement. need aliptcls input. doesn't work with "
          'refine_trans or rot yet..',
  'option': "['--refine_defocus']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'do translational-rotational alignment. better to start from an '
          'existing translational alignment.',
  'option': "['--refine_rot']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'do translational alignment.',
  'option': "['--refine_trans']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Refines the defocus value by looking at the high resolution '
          'smoothed SNR. Requires good starting defocus. Important: also '
          'replaces the SNR with a smoothed version.',
  'option': "['--refinebysnr']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Will use EMAN2 CTF fitting to refine the defocus by SNR '
          'optimization (+-0.1 micron from the current values, no astigmatism '
          'adjustment)',
  'option': "['--refinedefocus']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Extracts particles based on the model_id header value in each '
          'class-average, normally produced by e2refinemulti',
  'option': "['--refinemulti']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': "Default=''. DO NOT USE THIS PARAMETER. It is passed on from "
          'e2spt_refinemulti.py if needed.',
  'option': "['--refinemultireftag']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Will use EMAN2 CTF fitting to refit the defocus values (+-0.1 '
          'micron, astigmatism unchanged)',
  'option': "['--refitdefocus']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': "Number of the reference image in 'ref'. Default=0",
  'option': "['--refn']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': '3D reference volumes',
  'option': "['--refs']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'Regularization Parameter T (weights experimental data vs. prior',
  'option': "['--regparam']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'For JSON files where the keys are image name,# pairs referencing a '
          '.lst file, will replace each key with the original image',
  'option': "['--remaplstkeys']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'DANGER! This will remove all data associated with the named key '
          'from all listed .json files.',
  'option': "['--removekey']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'If set will exclude the specified string from imported filenames',
  'option': "['--removesub']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'default=None. Comma separated strings to replace in the input '
          'filenames with an underscore. For example, if --stem2stack=data, '
          "and this triggers the program to find images named 'data[1].mrc', "
          "'data[2].mrc', etc., supplying --replacestring=[,] will first "
          "change the filename of the images to 'data_1_.mrc, data_2_.mrc, "
          'etc.',
  'option': "['--replacestring']",
  'type': 'str'},
 {'count': 1,
  'default': '-1',
  'help': 'clip after reprojection',
  'option': "['--reprj_clip']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Offset translation before reprojection',
  'option': "['--reprj_offset']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Reproject 3D particles into 2D particles.',
  'option': "['--reproject']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If set, will perform bootstrap resampling on the particle data for '
          'use in making variance maps.',
  'option': "['--resample']",
  'type': 'None'},
 {'count': 1,
  'default': '25',
  'help': 'Resolution of the data included in the alignment. This is the high '
          'resolution value. ex:25',
  'option': "['--reshigh']",
  'type': 'float'},
 {'count': 1,
  'default': '10',
  'help': 'Low-pass filter the individual maps to target the variance to the '
          'specified resolution in A. Variance maps cannot be filtered as a '
          'post-processing operation. Default = 10',
  'option': "['--reslimit']",
  'type': 'float'},
 {'count': 1,
  'default': '200',
  'help': 'Resolution of the data included in the alignment. This is the low '
          'resolution value. ex:200',
  'option': "['--reslow']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'generates a resolution and convergence plot for a single refinement '
          'run.',
  'option': "['--resolution']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': '.hdf, or 3D .st, .mrc, .ali, or .mrcs stack file to restack. This '
          'option can be used with --include or --exclude to unstack only '
          'specific images. Recall that the FIRST image INDEX is 0 (but '
          'unstacked image will be numbered from 1). '
          '--exclude=1,5-7,10,12,15-19 will exclude images '
          '1,5,6,7,10,12,15,16,17,18,19',
  'option': "['--restack']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Write changes in the derived virtual stack back to the original '
          'stack',
  'option': "['--restore']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Flip dark reference along y axis. Default is False. Transformation '
          'order is rotate then reverse.',
  'option': "['--reverse_dark']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Flip gain reference along y axis (about x axis). Default is False. '
          'Transformation order is rotate then reverse.',
  'option': "['--reverse_gain']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Sort in order of least mutual similarity',
  'option': "['--reverse']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Remove particles on the edge.',
  'option': "['--rmedge']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Remove particles near gold fiducial.',
  'option': "['--rmgold']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Rotate map. Specify az,alt,phi or convention:par=val:par=val:...  '
          'eg - mrc:psi=22:theta=15:omega=7',
  'option': "['--rot']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Rotate dark reference by 0, 90, 180, or 270 degrees. Default is 0. '
          'Transformation order is rotate then reverse.',
  'option': "['--rotate_dark']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Rotate gain reference by 0, 90, 180, or 270 degrees. Default is 0. '
          'Transformation order is rotate then reverse.',
  'option': "['--rotate_gain']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Compute the 1-D rotational average of each image as a final step '
          'before writing the output',
  'option': "['--rotavg']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'At each translation position, vary euler angles as well when '
          'searching for particles.',
  'option': "['--rotsearch']",
  'type': 'None'},
 {'count': 1,
  'default': 'float',
  'help': 'If float (default), apply subpixel frame shifts. If integer, use '
          'integer shifts.',
  'option': "['--round']",
  'type': 'None'},
 {'count': 1,
  'default': '10',
  'help': 'Resolution of reconstruction in angstroms. It is the resolution to '
          'which the reconstruction is calculated.',
  'option': "['--rrec']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'make a rotational footprint',
  'option': "['--rtp']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Run ctffind3 on the selected micrographs?',
  'option': "['--runctffind3']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Run ctffind4 on the selected micrographs?',
  'option': "['--runctffind4']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Safe mode without the timer...',
  'option': "['--safemode']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If set, full fsc curves are stored for a range of specific '
          'locations within the volume',
  'option': "['--sampfscs']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'use only N samples.',
  'option': "['--sample']",
  'type': 'int'},
 {'count': 1,
  'default': '256',
  'help': 'Number of samples in the plotted curve',
  'option': "['--samples']",
  'type': 'int'},
 {'count': 1,
  'default': 'hdf',
  'help': "The default file extension to use when saving 'particle' images. "
          'This is simply a convenience for improved workflow. If a format '
          'other than HDF is used, metadata will be lost when saving.',
  'option': "['--save-ext']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'If on, the CTF   corrected subtiltseries will be saved as 2-D imag '
          'stacks [one per particle].',
  'option': "['--save2d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If on, the CTF   corrected subtiltseries will be reconstrcuted into '
          'subvolumes and save into a stack.   Options --reconstructor, '
          '--pad2d, --pad3d are used if --save3d is on.',
  'option': "['--save3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If set, this will save the alignment information and '
          'score for all examined peaks --npeakstorefine during coarse '
          'alignment.',
  'option': "['--saveallpeaks']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. Comma separated values of tilt angle indexes for '
          'which you want to save all particles as a stack. For example, if '
          'you want all particles from the 0 tilt image, you would provide the '
          'index for that image in the tilt series. In a tilt series with 61 '
          'images (1-61), the 0 tilt image is probably image number 31, so you '
          'would say --saveanglestakcs=31, and all the particles from the 0 '
          'tilt image would be put into a single HDF stack.',
  'option': "['--saveanglestacks']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Saves the average of the ffts of the tiles for an '
          'image or its strips.',
  'option': "['--savefft']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Saves   ffts of each average of tiles per strip, for all images.',
  'option': "['--saveffts']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If this parameter is on, the odd and even '
          'subtiltseries will be saved.',
  'option': "['--savehalftiltseries']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If this parameter is on, the odd and even volumes '
          'will be saved.',
  'option': "['--savehalfvolumes']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Save tilt images corresponding to the missing wedge '
          'region.',
  'option': "['--savemissingtilts']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If on, it saves the noise stack for each particle. '
          'This can be useful for testing alignment under varying SNR, so that '
          'the same noise (just at a different ratio/level) is tested.',
  'option': "['--savenoise']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'If set, will save the normalization volume showing Fourier space '
          'filling to the specified file',
  'option': "['--savenorm']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. If on, --nptcls is ignored and you get 3 '
          'subtomograms (simulated from the model supplied) which are '
          'orthogonal to each other.',
  'option': "['--saveorthostack']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'save alignment path in a json file for testing.',
  'option': "['--savepath']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Will save the intermediate steps of preprocessing of '
          'the tomogram.',
  'option': "['--savepreprocessed']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': "Default=False. Save the projections (the 'tilt series') for each "
          'simulated subtomogram.',
  'option': "['--saveprjs']",
  'type': 'None'},
 {'count': 1,
  'default': 'True',
  'help': 'Default=True. DEPREPCATED. [This option is on by default and '
          "there's no way to turn it off. The stack of randomly oriented "
          'particles before simulating the missing wedge WILL be saved]. Save '
          'the stack of randomly oriented particles, before subtomogram '
          'simulation (before the missing wedge and noise are added).',
  'option': "['--saverandstack']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Save all of the similarity results to a text file. '
          '(ptcl#,proj#,alt,az,sim)',
  'option': "['--savesim']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'If provided,   this option will save the sinogram for each 2-D '
          'slice (along Y) in the reconstruction    to disk.',
  'option': "['--savesinograms']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If provided,   this option will save each reconstructed 2-D slice '
          '(along Y) to disk.',
  'option': "['--saveslices']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Saves   all tiles for all strips, for all images, in one stack per '
          'strip.',
  'option': "['--savestriptiles']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Save a text file with .tlt extension (as in IMOD) '
          'containing the tilt angles for the simulated tomogram and/or '
          'subtomograms.',
  'option': "['--savetlt']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This option will save the reconstructed volumes at each iteration.',
  'option': "['--savevols']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'test scipy optimizer.',
  'option': "['--scipytest']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': "If specified will generate averages over N bands of 'score' values, "
          'including only particles in each band.',
  'option': "['--scorebands']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': "If specified will generate averages over N bands of 'score' values, "
          'including only particles in each band, and iteratively realigning '
          'in each band.',
  'option': "['--scorebandsali']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Will extract the N particles with the best scores to make a new set',
  'option': "['--scorebestset']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'If specified will generate progressive averages over N bands of '
          "'score' values, including all particles starting with the best "
          'through the progressive bands.',
  'option': "['--scoreprogressive']",
  'type': 'int'},
 {'count': 1,
  'default': '/tmp',
  'help': 'Internal use only. Used by the MPI client',
  'option': "['--scratchdir']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'If seedmap specified, this is how strongly the seedmap will bias '
          'existing values. 1 is default, and is equivalent to a one particle '
          'weight.',
  'option': "['--seedweight']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify a full map of weights for the seed. This must be in the '
          'same format as the --savenorm output map.',
  'option': "['--seedweightmap']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Segment particles.',
  'option': "['--segment']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Output stack for individual segmented volumes',
  'option': "['--segout']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Works only on the images in named selection set from bdb:select',
  'option': "['--select']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Align each particle to the previous particle before saving with '
          'rotate_translate_tree. No flip in alignment. Aligns stack #2 '
          'instead if provided.',
  'option': "['--seqali']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Align each particle to the previous particle before saving, with a '
          'postalignment recentering. No flip in alignment. Aligns stack #2 '
          'instead if provided.',
  'option': "['--seqalicen']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Launch a display server which can communicate with other EMAN3 '
          'programs',
  'option': "['--server']",
  'type': 'None'},
 {'count': 1,
  'default': '31980',
  'help': 'Specify the port to listen to, needed for multiple users on one '
          'machine, default=31980',
  'option': "['--serverport']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. Simulate particles along the tilt axis only.',
  'option': "['--set2tiltaxis']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Set a single option in application preferences, eg - '
          'display2d.autocontrast:true',
  'option': "['--setoption']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Applies the radial structure factor of the 1st image to the 2nd, '
          'the 3rd to the 4th, etc',
  'option': "['--setsfpairs']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This will impose the 1-D structure factor of the reference on the '
          'class-average (recommended when a reference is available)',
  'option': "['--setsfref']",
  'type': 'None'},
 {'count': 1,
  'default': 'sf.txt',
  'help': 'output',
  'option': "['--sfout']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'If specified, the edited img2process will be sharply filtered to '
          'this resolution.',
  'option': "['--sharpfiltres']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Shift the output pdb to center of the density map',
  'option': "['--shifttocenter']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Shrink the class-averages and make a downsampled variance map',
  'option': "['--shrink3d']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Shrink factor for classification only (for speed)',
  'option': "['--shrinkcompare']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Requires IMOD. Default=0 (no shrinking). Integer factor by which '
          'the tomogram will be shrunk.',
  'option': "['--shrinktomo']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'with --average, this will also produce standard deviation images '
          'for each average',
  'option': "['--sigma']",
  'type': 'None'},
 {'count': 1,
  'default': '0.5',
  'help': 'regularizer for the sigma of gaussian width. Larger value means all '
          'Gaussian functions will have essentially the same width. Smaller '
          'value may help compensating local resolution difference.',
  'option': "['--sigmareg']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Specify <minsig>,<maxsig>, eg- 4,4 Number of standard deviations '
          'below and above the mean to retain in the output. Default is not to '
          'truncate. 4-5 is usually safe.',
  'option': "['--sigrange']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Will use transformations from simmx on each particle prior to '
          'analysis',
  'option': "['--simmx']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Simpler 2 column output file (appends)',
  'option': "['--simpleout']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. This will make a simulated particle in the same '
          'orientation as the original --input, saved to its own separate '
          'file.',
  'option': "['--simref']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Number of orientations to simulate templates (that is, --template '
          'will be put into --simtemplatesn different orientations, and a '
          "'subtomogram' will be simulated for each through projections by "
          'calling e2spt_simulation.py using the information in --angles or '
          '--tiltrange and --nslices.',
  'option': "['--simtemplatesn']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Simlarity score for the best matching final alignment. Scaling may '
          'be different due to resolution limit. Default 0',
  'option': "['--simthr2']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Instead of using the class for the peak value, uses the pattern of '
          'similarities for each orientation for assignment.',
  'option': "['--simvec']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Display a stack in a single image view',
  'option': "['--singleimage']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'It --plotonly provided, all FSC curves will be on the same '
          'plot/figure',
  'option': "['--singleplot']",
  'type': 'None'},
 {'count': 1,
  'default': '192',
  'help': 'Size of particles, 192 default for comparisons',
  'option': "['--size']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). Output size in Z for the reconstructed '
          'tomogram. This should be the same as the --thickness value provided '
          "during tiltseries preprocessing, or larger (it's good to make sure "
          'the entire reconstruction will fit in the reconstruction volume '
          'without being too tight). If running a reconstruction of the .ali '
          'file and both --thickness and --sizez are provided, the latter will '
          'supersede the former.',
  'option': "['--sizez']",
  'type': 'int'},
 {'count': 1,
  'default': 'none',
  'help': 'skeleton file',
  'option': "['--skeleton']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'skeleton weight',
  'option': "['--skeletonwt']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Optional (recommended) output from the e2skelpath.py program',
  'option': "['--skelpath']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'do not make 3d particles. only generate 2d particles and 3d header.',
  'option': "['--skip3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'default=False. If on, this will call IMOD to generate a new aligned '
          'tiltseries after ICONPreProcess, and then ICON-GPU will be '
          'automatically called to perform the reconstruction. Typically, one '
          'would NOT use this option as it is useful to delete the gold '
          'fiducials prior to reconstruction.',
  'option': "['--skipgolderasing']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'skip make3d. only output aligned list',
  'option': "['--skipm3d']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Skip post process steps (fsc, mask and filters)',
  'option': "['--skippostp']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Default=None. Comma-separated list of image indexes to exclude from '
          'strip-based fitting (in this case, only global defocus tiling the '
          'entire image wil be measured).',
  'option': "['--skipstripping']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'rtf_slow alignment',
  'option': "['--slow']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Lists contents of an entire database, but only list 2 items per '
          'dictionary to better see headers',
  'option': "['--smalldump']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Used in conjunction with --phitoo, this will rotationally smear '
          'between phi steps. The user must specify the amount of smearing '
          '(typically 2-10)',
  'option': "['--smear']",
  'type': 'int'},
 {'count': 1,
  'default': '100',
  'help': 'If --smooth is provided the curve will be smoothed only up to this '
          'resolution. Default is 100.',
  'option': "['--smooththresh']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Number smaller than 1.0 to make the final SNR in each '
          'tilt image. This will be calculated as '
          'SNR=sgima_signal/sigma_noise. 0.5 might be a good number assuming '
          'typical cryoEM-SPA images have SNR of 0.1 or less, and cryoET tilt '
          'series are collected with 4-6x the dose as cryoEM-SPA images.',
  'option': "['--snr']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Run TSP Solver: concorde or lkh',
  'option': "['--solver']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Sorts rows based on per-row comment (after #) before merging',
  'option': "['--sortcomment']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Sorts the micrographs in order by defocus',
  'option': "['--sortdefocus']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Splits the input file into a set of n output files',
  'option': "['--split']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'split even/odd set so there is no overlap of particles from the two '
          'sets.',
  'option': "['--spliteo']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Specify this to write new files containing the classified particles',
  'option': "['--splitparticles']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Normally class-averages are weighted into the reconstruction based '
          'on the number of particles in the average. This option causes the '
          'sqrt of the number of particles to be used instead.',
  'option': "['--sqrt_wt']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'WARNING: MIGHT BE BUGGY OR NOT WORKING. Mulst supply references '
          'through --ref. Default=0 (not used by default). Size of the SUBSET '
          'of particles to use to build an initial reference by calling '
          'e2symsearch3d.py, which does self-symmetry alignments. You must '
          'provide --sym different than c1 for this to make any sense.',
  'option': "['--ssaref']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'weight particles by SSNR accroding to references',
  'option': "['--ssnrwt']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': 'Comma separated list of HDF image stacks to process.',
  'option': "['--stacks']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'Amount of tiliting of the cryo stage, default=0, get the stage tilt '
          'from particle attributes. Only possible if e2RCTboxer was used for '
          'particle picking',
  'option': "['--stagetilt']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Path to an existing refine_xx directory to continue refining from. '
          'Alternative to --input and --model.',
  'option': "['--startfrom']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'iter',
  'option': "['--startiter']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'starting maximum resolution. required when goldstandard is not '
          'specified',
  'option': "['--startres']",
  'type': 'float'},
 {'count': 1,
  'default': '1',
  'help': 'This is the starting model weight',
  'option': "['--startweight']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': "Some parameters have common stems. For example, 'origin_x', "
          '\'origin_y\', \'origin"x\'. Supply the stem and all parameters '
          'containing it will be modified.',
  'option': "['--stem']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'String common to all the files to put into an .st stack, which is '
          'in .MRC format; for example, --stem2stack=.hdf will process all '
          '.hdf files in the current directory. If not specified, all valid EM '
          'imagefiles in the current directory will be put into an .st stack.',
  'option': "['--stem2stack']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'New value for all parameters containing --stem.',
  'option': "['--stemval']",
  'type': 'str'},
 {'count': 1,
  'default': '10',
  'help': 'Number of steps (for the MC). Default=10.',
  'option': "['--steps']",
  'type': 'int'},
 {'count': 1,
  'default': '20',
  'help': 'Number of tiles to generate on x-axis (different defocus)',
  'option': "['--stepx']",
  'type': 'int'},
 {'count': 1,
  'default': '40',
  'help': 'Number of tiles to generate on y-axis (same defocus)',
  'option': "['--stepy']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Even if a class-average fails, write to the output. Forces 1->1 '
          'numbering in output',
  'option': "['--storebad']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Output files will include CTF info. CTF parameters are used from '
          'the database, rather than values that may be present in the input '
          'image header. Critical to use this when generating output !',
  'option': "['--storeparm']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'This will subtract the histogram peak value along a single axis in '
          'the volume.',
  'option': "['--streaksubtract']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'This will determine the   amount of strips and the overlap between '
          'them for defocus estimation. The default    is half the tilesize. '
          'For example, for a 4000x4000 pixels image, a tile size of   400 '
          'would yield 20, not 10 strips, by default. If --stripstep=1 were '
          'provided, the   image would be devided into 4000-400=3600 strips. '
          'The first strip would go from pixel   0 to pixel 400, the second '
          'strip from pixel 1 to pixel 401, the third from pixel 2   to 402, '
          'etc... up to the las strip going from pixel 3600 to 4000.',
  'option': "['--stripstep']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Structure factor file',
  'option': "['--strucfac']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'Specify the number of linear    subdivisions used to compute the '
          'projection of one image pixel onto a detector pixel.',
  'option': "['--subpix']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Size of the subset of particles to use for generating each '
          'reference. Default=0, which means all particles in each subgroup '
          'will be used (for example, if --input has 100 particles and --nref '
          'is 10, 10 references will be generated using 10 particles for '
          'each). If --ref not provided, the program generates an --nref '
          'number of references from --input.',
  'option': "['--subset4ref']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'Default=0 (not used). Subset of particles to keep/consider after '
          'translational alignment.',
  'option': "['--subsettrans']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'Provide a directory containing individual stacks, where each stack '
          "is a 'mini tilt series' or a 'subtilt series' for single particles. "
          'Then, each image for each particle in the dir will be '
          'phase-phlipped using the ctf parameters you provide. If each image '
          'in the subtilt series is at a different defocus, then the '
          'parameters should be provided through --ctfparamsfile, whith a '
          'different defocus value per row. (There should be as many rows as '
          'images in each subtiltseries).',
  'option': "['--subtiltsdir']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': '(Experimental. Not working yet). This will extract a box from the '
          'tomogram much larger than the subtomogram. Projections will be '
          'generated. You MUST provide --tomogram for this.',
  'option': "['--subtractbackground']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Number of subunits.',
  'option': "['--subunit']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Required. When applied to the 3-D volume, this mask contains the '
          "subunit being extracted. 'soft' edges are permitted",
  'option': "['--subunitmask']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Swap the byte order',
  'option': "['--swap']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'This will translationally realign each asymmetric unit to the '
          'previous map masked by the specified mask. While this invokes '
          "symalimasked in e2spt_average, this isn't the same, it is a mask, "
          'not a masked reference.',
  'option': "['--symalimask']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Symmetrize volume after alignment.',
  'option': "['--symmetrize']",
  'type': 'None'},
 {'count': 1,
  'default': 'C',
  'help': 'Symmetry group',
  'option': "['--symmgroup']",
  'type': 'None'},
 {'count': 1,
  'default': '1',
  'help': 'Symmetry number',
  'option': "['--symmnumber']",
  'type': 'int'},
 {'count': 1,
  'default': '',
  'help': 'List comma-separated symmetries to apply separately on the '
          'different references. For example, if you provide --syms=d8,d7 and '
          'provide 2 references via --nref=2 or supply two references via '
          '--refs=r1.hdf,r2.hdf, d8 symmetry will be applied to the first '
          'reference and d7 to the second after each iteration of refinement '
          '(the final average in one iteration becomes a reference for the '
          'next).',
  'option': "['--syms']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': '"String to append to the beginning of the tiltseries output '
          "filename. The default is filename is 'stack.st'; if tag=xxx, the "
          "output will be 'xxx_stack.st'",
  'option': "['--tag']",
  'type': 'str'},
 {'count': 1,
  'default': '20',
  'help': 'target resolution',
  'option': "['--tarres']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Internal use only. Used when executing local threaded tasks.',
  'option': "['--taskin']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Internal use only. Used when executing local threaded tasks.',
  'option': "['--taskout']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Path to file containing the template    to search for '
          'particles throughout the tomogram. Alternatively, provide '
          '--template=sphere    to generate a spherical template from scratch. '
          'This requires also setting --boxsize and --ptclradius.   You can '
          'also provide --template=cylinder, which generates a solid or hollow '
          'cylinder,   depending on which of the following options you '
          'specify:   '
          '--template=cylinder:radius=r:height=h:radiusinner=ri:heightinner=hi.   '
          'radiusinner and heightinner MUST be specified together, and must be '
          'smaller   than radius and height; otherwise they will be defaulted '
          'to radius/2 and height/2.',
  'option': "['--template']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'A binary threshold will be applied to the template which will zero '
          'out all the densities below the supplied value,              and '
          'will make the densities above the supplied value equal to one.',
  'option': "['--templatethreshold']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Range of random translation error in pixels to '
          'perturb individual 2-D images in each subtiltseries by along x, y '
          'and z. The random translation perturbation will be picked between '
          '-terror and +terror. If set, this will overwrite --txerror, '
          '--tyerror and --tzerror.',
  'option': "['--terror']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'N.A.',
  'option': "['--test']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'theta.',
  'option': "['--theta']",
  'type': 'float'},
 {'count': 1,
  'default': '0',
  'help': 'default=0. Thickness of the specimen as seen in a preliminary '
          'weighted back projection reconstruction from IMOD (through how many '
          'slices in Z are there specimen densities?).',
  'option': "['--thickness']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Process 3D image as a stack of 2D slices, then output as a 3D image',
  'option': "['--threed2threed']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Process 3D image as a stack of 2D slices, then output as a 2D stack',
  'option': "['--threed2twod']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'map output',
  'option': "['--threedout']",
  'type': 'str'},
 {'count': 1,
  'default': '-1,-1',
  'help': 'range of tilt id to include',
  'option': "['--tidrange']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Single 2D image or image stack to calculate CTF for.',
  'option': "['--tiltangle']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'By default, the tilt axis will be assumed to run through the middle '
          'of the tomogram in X, parallel to the Y axis. For example, if the '
          'dimensions of the tomogram are 4096x3000x500, the tilt axis will be '
          'assumed to be at X=2048. Provide a different integer number to '
          'change the location of the tilt axis (it will still be assumed to '
          'be parallel to Y though).',
  'option': "['--tiltaxislocation']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Specifies the distance from the tilt axis to consider particles for '
          'extraction. By default, all particles will be extracted. However, '
          'if you provide, for example, --tiltaxisptls=10, only particles with '
          'centers -10 to 10 pixels away from the tilt axis will be extracted.',
  'option': "['--tiltaxisptcls']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Angle of the tilt axis. Note the angle stored internally will have '
          'an opposite sign. The program will calculate one if this option is '
          'not provided.',
  'option': "['--tltax']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': "Include only tilts between 'START' and 'STOP', i.e. -40.0,40.0. "
          'Default behavior is to include all tilts.',
  'option': "['--tltrange']",
  'type': 'str'},
 {'count': 1,
  'default': '2',
  'help': 'Step between tilts. Ignored when rawtlt is provided. Default is '
          '2.0.',
  'option': "['--tltstep']",
  'type': 'float'},
 {'count': 1,
  'default': 'None',
  'help': 'Temporary path',
  'option': "['--tmppath']",
  'type': 'str'},
 {'count': 1,
  'default': '',
  'help': 'Comma separated values for the tomogram dimensions. Alternatively, '
          'provide the path to the tomogram itself through --tomogram.',
  'option': "['--tomosides']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False (not used). If supplied, this option will track '
          'particles from one tilt image to another.',
  'option': "['--track']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False (not used). In theory, particles should not drift in '
          'Y with tilt angle. Still, this option can turn Y tracking on.',
  'option': "['--trackytoo']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'train on tomo',
  'option': "['--train']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Doing training',
  'option': "['--training']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Output the result of the training set',
  'option': "['--trainout']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'output file name of the training set.Default is the input particle '
          'file name plus _trainset.hdf',
  'option': "['--trainset_output']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Training set.',
  'option': "['--trainset']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Maximum number of pixels to randomly translate each '
          'subtomogram in all X, Y and Z. The random translation will be '
          'picked between -transrage and +trange; --txrange, --tyrange and '
          '--tzrange overwrite --trange for each specified direction.',
  'option': "['--trange']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Default=False. This will force the aligner to not do any rotations '
          'and thus serves for translational centering. Specify search values '
          'through --search, otherwise its default value will be used.',
  'option': "['--translateonly']",
  'type': 'None'},
 {'count': 1,
  'default': '10',
  'help': 'The number of different initial models to generate in search of a '
          'good one',
  'option': "['--tries']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Will generate tst.hdf containing test images for a specified '
          'class-number',
  'option': "['--tstcls']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Process a stack of 2D images, then output as a 3D image.',
  'option': "['--twod2threed']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'default=False (not used). Produces a stack of 2D images (Z number '
          'of images of X,Y size under the same "virutal stack" file name). By '
          'default, the output stack will be a 3D stack (a single image of '
          'size X,Y,Z, where Z is equal to the number of stacked frames).',
  'option': "['--twodstack']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Range of random translation error in pixels to '
          'perturb individual 2-D images in each subtiltseries by along x. The '
          'random translation perturbation will be picked between -txerror and '
          '+txerror. Default value is set by --terror, but --txerror will '
          'overwrite it if specified.',
  'option': "['--txerror']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Maximum number of pixels to randomly translate each '
          'subtomogram in X. The random translation will be picked between '
          '-txrange and +txrange. Default value is set by --trange, but '
          '--txrange will overwrite it if specified.',
  'option': "['--txrange']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Range of random translation error in pixels to '
          'perturb individual 2-D images in each subtiltseries by along y. The '
          'random translation perturbation will be picked between -tyerror and '
          '+tyerror. Default value is set by --terror, but --tyerror will '
          'overwrite it if specified.',
  'option': "['--tyerror']",
  'type': 'int'},
 {'count': 1,
  'default': 'eman',
  'help': 'convention type',
  'option': "['--type']",
  'type': 'str'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Maximum number of pixels to randomly translate each '
          'subtomogram in Y. The random translation will be picked between '
          '-tyrange and +tyrange. Default value is set by --trange, but '
          '--txrange will overwrite it if specified.',
  'option': "['--tyrange']",
  'type': 'int'},
 {'count': 1,
  'default': 'None',
  'help': 'Default=None. Maximum number of pixels to randomly translate each '
          'subtomogram in Z. The random translation will be picked between '
          '-tzrange and +tzrange. Default value is set by --trange, but '
          '--txrange will overwrite it if specified.',
  'option': "['--tzrange']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Unbin factor from input particles/tomogram to raw tilt. If '
          'unspecified, the program will calculate from the Apix of the '
          'header.',
  'option': "['--unbin']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Only include image files without existing box locations',
  'option': "['--unboxedonly']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'This will shift the computed Wiener filter to be about 10%% more '
          'resolution than has been achieved.',
  'option': "['--underfilter']",
  'type': 'None'},
 {'count': 1,
  'default': '',
  'help': '.hdf, or 3D .st, .mrc, .ali, or .mrcs stack file to unstack. This '
          'option can be used with --include or --exclude to unstack only '
          'specific images. Recall that the FIRST image INDEX is 0 (but '
          'unstacked image will be numbered from 1). '
          '--exclude=1,5-7,10,12,15-19 will exclude images '
          '1,5,6,7,10,12,15,16,17,18,19',
  'option': "['--unstack']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Process a stack of 2D images, then output as a series of numbered '
          'single image files',
  'option': "['--unstacking']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Save aligned particles to the output file, note that if used with '
          'shrink= this will store the reduced aligned particles',
  'option': "['--useali']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Select which Eigenimage to use for separation. With novarimax, n=0 '
          'is highest energy.',
  'option': "['--usebasis']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Use defocus/astig from whole frame even if particle-based value is '
          'present',
  'option': "['--useframedf']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': '"Use the inverse of the value stored in xform.align3d in the header '
          'of each particle.',
  'option': "['--useinverseali']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'use seed map as reference to weight the particles.',
  'option': "['--useseedasref']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Makes use of the class_ssnr header data to weight each slice during '
          'insertion, instead of the default behavior of just using the number '
          'of particles in the average as a global weight.',
  'option': "['--usessnr']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'max thread to use. only used for producing occupancy in mpi mode. '
          'default is the same as threads/mpi option given',
  'option': "['--usethreads']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': '"Re-extract particles from the original tomogram.',
  'option': "['--usetomograms']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'Propotion of particles in validation set. Default is 0.2',
  'option': "['--validset']",
  'type': 'float'},
 {'count': 1,
  'default': 'str',
  'help': 'Type of the value to enforce. It can be: str, float, int, list, or '
          'transform.',
  'option': "['--valtype']",
  'type': 'str'},
 {'count': 1,
  'default': '1',
  'help': 'Set the level of verbosity for the code',
  'option': "['--verbosity']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'This will bypass the construction of the individual resampled '
          'models, and use files previously generated with the --keep3d '
          'options',
  'option': "['--volfiles']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': '3D volume to validate',
  'option': "['--volume']",
  'type': 'str'},
 {'count': 1,
  'default': 'False',
  'help': 'Will output to a bdb virtual stack instead of copying the image '
          'data. Input images must have been BDB for this to work.',
  'option': "['--vstack']",
  'type': 'None'},
 {'count': 1,
  'default': '2',
  'help': 'value threshold (n sigma)',
  'option': "['--vthr']",
  'type': 'float'},
 {'count': 1,
  'default': '60',
  'help': 'Missing wedge angle',
  'option': "['--wedgeangle']",
  'type': 'float'},
 {'count': 1,
  'default': '0.5',
  'help': 'Missingwedge ending',
  'option': "['--wedgef']",
  'type': 'float'},
 {'count': 1,
  'default': '0.05',
  'help': 'Missingwedge begining',
  'option': "['--wedgei']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Weight the particles by the variance of defocus.',
  'option': "['--weight']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Weight the reconstruction by particle numbers.',
  'option': "['--weightrecons']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Display an additional curve using the whole micrograph, not just '
          'particles.',
  'option': "['--wholeimage']",
  'type': 'None'},
 {'count': 1,
  'default': '0',
  'help': 'The amplitude contrast of the micrographs',
  'option': "['--windowsize']",
  'type': 'int'},
 {'count': 1,
  'default': '17',
  'help': '',
  'option': "['--winsize']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Only include images with phase-flipped counterparts!',
  'option': "['--withflipped']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Only include images with _invar counterparts!',
  'option': "['--withinvar']",
  'type': 'None'},
 {'count': 1,
  'default': '256',
  'help': 'Size of window to use (should be slightly larger than particle box '
          'size)',
  'option': "['--wn']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Write coordinate file (eman1 dbbox) files',
  'option': "['--write_boxes']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'If specified, micrographs and particles will be written to the emx '
          'directory.',
  'option': "['--writeimages']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'write all temporary files as a stack',
  'option': "['--writemovie']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Write output for each iteration',
  'option': "['--writetmp']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'apply extra correction for drifting along x axis',
  'option': "['--xdrift']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Generate tiles in x-direction until this many pixels. If -1, will '
          'tile the entire image.',
  'option': "['--xmax']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Start tiling on this x-pixel. If -1, will start one boxsize inward.',
  'option': "['--xmin']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Filter X-ray pixels',
  'option': "['--xraypixel']",
  'type': 'None'},
 {'count': 1,
  'default': '256',
  'help': 'Step length in x-direction. If less than --boxsize, tiles will '
          'overlap. Default is 256.',
  'option': "['--xstep']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'xtilt in xyz convention.',
  'option': "['--xtilt']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': "This will skip the 'are you sure' question, and proceed with the "
          'conversion',
  'option': "['--yes']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Generate tiles in y-direction until this many pixels. If -1, will '
          'tile the entire image.',
  'option': "['--ymax']",
  'type': 'int'},
 {'count': 1,
  'default': '-1',
  'help': 'Start tiling on this y-pixel. If -1, will start one boxsize inward.',
  'option': "['--ymin']",
  'type': 'int'},
 {'count': 1,
  'default': '256',
  'help': 'Step length in y-direction. If less than --boxsize, tiles will '
          'overlap. Default is 256.',
  'option': "['--ystep']",
  'type': 'int'},
 {'count': 1,
  'default': '0',
  'help': 'ytilt in xyz convention.',
  'option': "['--ytilt']",
  'type': 'float'},
 {'count': 1,
  'default': '-1',
  'help': 'Index of the center tilt. Ignored when rawtlt is provided.',
  'option': "['--zeroid']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Normally particles with zero value on the edge are considered to be '
          'bad. This overrides that behavior, primarily for simulated data.',
  'option': "['--zerook']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'The default is the image at the middle of the stack. Since the '
          'stack might have more images to the left or the right of the actual '
          '0-tilt (or lowest tilt) image, you can explicitly provide the index '
          'of the lowest tilt image here. This is used for tracking images.',
  'option': "['--zerotiltindx']",
  'type': 'int'},
 {'count': 1,
  'default': 'half',
  'help': 'By default, the tomogram will be shifted -half the ice thickness so '
          'that the middle of the tomogram is at z=0. Provide a positive or '
          'negative integer to shift the z position by a different amount',
  'option': "['--zshift']",
  'type': 'str'},
 {'count': 1,
  'default': '0',
  'help': 'ztilt in xyz convention.',
  'option': "['--ztilt']",
  'type': 'float'},
 {'count': 1,
  'default': 'False',
  'help': 'Show info for all images in file',
  'option': "['-a', '--all']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Checks to make sure all image numbers are populated with images, '
          'and that all images have valid CTF parameters',
  'option': "['-C', '--check']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Just show a count of the number of particles in each file',
  'option': "['-c', '--count']",
  'type': 'None'},
 {'count': 1,
  'default': 'None',
  'help': 'Forced edge: e.g. -e1,3',
  'option': "['-e', '--edge']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Show Euler angles from header',
  'option': "['-E', '--euler']",
  'type': 'None'},
 {'count': 1,
  'default': 'False',
  'help': 'Show all header information',
  'option': "['-H', '--header']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Image number for single image info',
  'option': "['-N', '--number']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Statistics on number of outlier values, must be used with --stat',
  'option': "['-O', '--outliers']",
  'type': 'None'},
 {'count': 1,
  'default': '-1',
  'help': 'Include only images with a single quality value (integer 0-9)',
  'option': "['-Q', '--quality']",
  'type': 'int'},
 {'count': 1,
  'default': 'False',
  'help': 'Show statistical information about the image(s).',
  'option': "['-s', '--stat']",
  'type': 'None'}]

dict = {}

for i in data:
    dict[i["option"]] = i

with open('pdict.txt', 'w') as fout:
    for k,v in dict.items():
        fout.write(f"{k} : {v}\n")
